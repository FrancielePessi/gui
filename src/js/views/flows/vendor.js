/*!
 * jQuery UI Touch Punch 0.2.3
 *
 * Copyright 2011–2014, Dave Furfero
 * Dual licensed under the MIT or GPL Version 2 licenses.
 *
 * Depends:
 *  jquery.ui.widget.js
 *  jquery.ui.mouse.js
 */
!(function (a) { function f(a, b) { if (!(a.originalEvent.touches.length > 1)) { a.preventDefault(); const c = a.originalEvent.changedTouches[0]; const d = document.createEvent('MouseEvents'); d.initMouseEvent(b, !0, !0, window, 1, c.screenX, c.screenY, c.clientX, c.clientY, !1, !1, !1, !1, 0, null), a.target.dispatchEvent(d); } } if (a.support.touch = 'ontouchend' in document, a.support.touch) { let e; const b = a.ui.mouse.prototype; const c = b._mouseInit; const d = b._mouseDestroy; b._touchStart = function (a) { const b = this; !e && b._mouseCapture(a.originalEvent.changedTouches[0]) && (e = !0, b._touchMoved = !1, f(a, 'mouseover'), f(a, 'mousemove'), f(a, 'mousedown')); }, b._touchMove = function (a) { e && (this._touchMoved = !0, f(a, 'mousemove')); }, b._touchEnd = function (a) { e && (f(a, 'mouseup'), f(a, 'mouseout'), this._touchMoved || f(a, 'click'), e = !1); }, b._mouseInit = function () { const b = this; b.element.bind({ touchstart: a.proxy(b, '_touchStart'), touchmove: a.proxy(b, '_touchMove'), touchend: a.proxy(b, '_touchEnd') }), c.call(b); }, b._mouseDestroy = function () { const b = this; b.element.unbind({ touchstart: a.proxy(b, '_touchStart'), touchmove: a.proxy(b, '_touchMove'), touchend: a.proxy(b, '_touchEnd') }), d.call(b); }; } }(jQuery)); /**
 * marked - a markdown parser
 * Copyright (c) 2011-2014, Christopher Jeffrey. (MIT Licensed)
 * https://github.com/chjj/marked
 */
(function () {
    const block = {
        newline: /^\n+/, code: /^( {4}[^\n]+\n*)+/, fences: noop, hr: /^( *[-*_]){3,} *(?:\n+|$)/, heading: /^ *(#{1,6}) *([^\n]+?) *#* *(?:\n+|$)/, nptable: noop, lheading: /^([^\n]+)\n *(=|-){2,} *(?:\n+|$)/, blockquote: /^( *>[^\n]+(\n(?!def)[^\n]+)*\n*)+/, list: /^( *)(bull) [\s\S]+?(?:hr|def|\n{2,}(?! )(?!\1bull )\n*|\s*$)/, html: /^ *(?:comment *(?:\n|\s*$)|closed *(?:\n{2,}|\s*$)|closing *(?:\n{2,}|\s*$))/, def: /^ *\[([^\]]+)\]: *<?([^\s>]+)>?(?: +["(]([^\n]+)[")])? *(?:\n+|$)/, table: noop, paragraph: /^((?:[^\n]+\n?(?!hr|heading|lheading|blockquote|tag|def))+)\n*/, text: /^[^\n]+/,
    }; block.bullet = /(?:[*+-]|\d+\.)/; block.item = /^( *)(bull) [^\n]*(?:\n(?!\1bull )[^\n]*)*/; block.item = replace(block.item, 'gm')(/bull/g, block.bullet)(); block.list = replace(block.list)(/bull/g, block.bullet)('hr', '\\n+(?=\\1?(?:[-*_] *){3,}(?:\\n+|$))')('def', `\\n+(?=${block.def.source})`)(); block.blockquote = replace(block.blockquote)('def', block.def)(); block._tag = '(?!(?:' + 'a|em|strong|small|s|cite|q|dfn|abbr|data|time|code' + '|var|samp|kbd|sub|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo' + '|span|br|wbr|ins|del|img)\\b)\\w+(?!:/|[^\\w\\s@]*@)\\b'; block.html = replace(block.html)('comment', /<!--[\s\S]*?-->/)('closed', /<(tag)[\s\S]+?<\/\1>/)('closing', /<tag(?:"[^"]*"|'[^']*'|[^'">])*?>/)(/tag/g, block._tag)(); block.paragraph = replace(block.paragraph)('hr', block.hr)('heading', block.heading)('lheading', block.lheading)('blockquote', block.blockquote)('tag', `<${block._tag}`)('def', block.def)(); block.normal = merge({}, block); block.gfm = merge({}, block.normal, { fences: /^ *(`{3,}|~{3,})[ \.]*(\S+)? *\n([\s\S]*?)\s*\1 *(?:\n+|$)/, paragraph: /^/, heading: /^ *(#{1,6}) +([^\n]+?) *#* *(?:\n+|$)/ }); block.gfm.paragraph = replace(block.paragraph)('(?!', `(?!${block.gfm.fences.source.replace('\\1', '\\2')}|${block.list.source.replace('\\1', '\\3')}|`)(); block.tables = merge({}, block.gfm, { nptable: /^ *(\S.*\|.*)\n *([-:]+ *\|[-| :]*)\n((?:.*\|.*(?:\n|$))*)\n*/, table: /^ *\|(.+)\n *\|( *[-:]+[-| :]*)\n((?: *\|.*(?:\n|$))*)\n*/ }); function Lexer(options) { this.tokens = []; this.tokens.links = {}; this.options = options || marked.defaults; this.rules = block.normal; if (this.options.gfm) { if (this.options.tables) { this.rules = block.tables; } else { this.rules = block.gfm; } } }Lexer.rules = block; Lexer.lex = function (src, options) { const lexer = new Lexer(options); return lexer.lex(src); }; Lexer.prototype.lex = function (src) { src = src.replace(/\r\n|\r/g, '\n').replace(/\t/g, '    ').replace(/\u00a0/g, ' ').replace(/\u2424/g, '\n'); return this.token(src, true); }; Lexer.prototype.token = function (src, top, bq) {
        var src = src.replace(/^ +$/gm, ''); let next; let loose; let cap; let bull; let b; let item; let space; let i; let l; while (src) {
            if (cap = this.rules.newline.exec(src)) { src = src.substring(cap[0].length); if (cap[0].length > 1) { this.tokens.push({ type: 'space' }); } } if (cap = this.rules.code.exec(src)) { src = src.substring(cap[0].length); cap = cap[0].replace(/^ {4}/gm, ''); this.tokens.push({ type: 'code', text: !this.options.pedantic ? cap.replace(/\n+$/, '') : cap }); continue; } if (cap = this.rules.fences.exec(src)) { src = src.substring(cap[0].length); this.tokens.push({ type: 'code', lang: cap[2], text: cap[3] || '' }); continue; } if (cap = this.rules.heading.exec(src)) { src = src.substring(cap[0].length); this.tokens.push({ type: 'heading', depth: cap[1].length, text: cap[2] }); continue; } if (top && (cap = this.rules.nptable.exec(src))) {
                src = src.substring(cap[0].length); item = {
                    type: 'table', header: cap[1].replace(/^ *| *\| *$/g, '').split(/ *\| */), align: cap[2].replace(/^ *|\| *$/g, '').split(/ *\| */), cells: cap[3].replace(/\n$/, '').split('\n'),
                }; for (i = 0; i < item.align.length; i++) { if (/^ *-+: *$/.test(item.align[i])) { item.align[i] = 'right'; } else if (/^ *:-+: *$/.test(item.align[i])) { item.align[i] = 'center'; } else if (/^ *:-+ *$/.test(item.align[i])) { item.align[i] = 'left'; } else { item.align[i] = null; } } for (i = 0; i < item.cells.length; i++) { item.cells[i] = item.cells[i].split(/ *\| */); } this.tokens.push(item); continue;
            } if (cap = this.rules.lheading.exec(src)) { src = src.substring(cap[0].length); this.tokens.push({ type: 'heading', depth: cap[2] === '=' ? 1 : 2, text: cap[1] }); continue; } if (cap = this.rules.hr.exec(src)) { src = src.substring(cap[0].length); this.tokens.push({ type: 'hr' }); continue; } if (cap = this.rules.blockquote.exec(src)) { src = src.substring(cap[0].length); this.tokens.push({ type: 'blockquote_start' }); cap = cap[0].replace(/^ *> ?/gm, ''); this.token(cap, top, true); this.tokens.push({ type: 'blockquote_end' }); continue; } if (cap = this.rules.list.exec(src)) { src = src.substring(cap[0].length); bull = cap[2]; this.tokens.push({ type: 'list_start', ordered: bull.length > 1 }); cap = cap[0].match(this.rules.item); next = false; l = cap.length; i = 0; for (;i < l; i++) { item = cap[i]; space = item.length; item = item.replace(/^ *([*+-]|\d+\.) +/, ''); if (~item.indexOf('\n ')) { space -= item.length; item = !this.options.pedantic ? item.replace(new RegExp(`^ {1,${space}}`, 'gm'), '') : item.replace(/^ {1,4}/gm, ''); } if (this.options.smartLists && i !== l - 1) { b = block.bullet.exec(cap[i + 1])[0]; if (bull !== b && !(bull.length > 1 && b.length > 1)) { src = cap.slice(i + 1).join('\n') + src; i = l - 1; } }loose = next || /\n\n(?!\s*$)/.test(item); if (i !== l - 1) { next = item.charAt(item.length - 1) === '\n'; if (!loose)loose = next; } this.tokens.push({ type: loose ? 'loose_item_start' : 'list_item_start' }); this.token(item, false, bq); this.tokens.push({ type: 'list_item_end' }); } this.tokens.push({ type: 'list_end' }); continue; } if (cap = this.rules.html.exec(src)) { src = src.substring(cap[0].length); this.tokens.push({ type: this.options.sanitize ? 'paragraph' : 'html', pre: !this.options.sanitizer && (cap[1] === 'pre' || cap[1] === 'script' || cap[1] === 'style'), text: cap[0] }); continue; } if (!bq && top && (cap = this.rules.def.exec(src))) { src = src.substring(cap[0].length); this.tokens.links[cap[1].toLowerCase()] = { href: cap[2], title: cap[3] }; continue; } if (top && (cap = this.rules.table.exec(src))) {
                src = src.substring(cap[0].length); item = {
                    type: 'table', header: cap[1].replace(/^ *| *\| *$/g, '').split(/ *\| */), align: cap[2].replace(/^ *|\| *$/g, '').split(/ *\| */), cells: cap[3].replace(/(?: *\| *)?\n$/, '').split('\n'),
                }; for (i = 0; i < item.align.length; i++) { if (/^ *-+: *$/.test(item.align[i])) { item.align[i] = 'right'; } else if (/^ *:-+: *$/.test(item.align[i])) { item.align[i] = 'center'; } else if (/^ *:-+ *$/.test(item.align[i])) { item.align[i] = 'left'; } else { item.align[i] = null; } } for (i = 0; i < item.cells.length; i++) { item.cells[i] = item.cells[i].replace(/^ *\| *| *\| *$/g, '').split(/ *\| */); } this.tokens.push(item); continue;
            } if (top && (cap = this.rules.paragraph.exec(src))) { src = src.substring(cap[0].length); this.tokens.push({ type: 'paragraph', text: cap[1].charAt(cap[1].length - 1) === '\n' ? cap[1].slice(0, -1) : cap[1] }); continue; } if (cap = this.rules.text.exec(src)) { src = src.substring(cap[0].length); this.tokens.push({ type: 'text', text: cap[0] }); continue; } if (src) { throw new Error(`Infinite loop on byte: ${src.charCodeAt(0)}`); }
        } return this.tokens;
    }; const inline = {
        escape: /^\\([\\`*{}\[\]()#+\-.!_>])/, autolink: /^<([^ >]+(@|:\/)[^ >]+)>/, url: noop, tag: /^<!--[\s\S]*?-->|^<\/?\w+(?:"[^"]*"|'[^']*'|[^'">])*?>/, link: /^!?\[(inside)\]\(href\)/, reflink: /^!?\[(inside)\]\s*\[([^\]]*)\]/, nolink: /^!?\[((?:\[[^\]]*\]|[^\[\]])*)\]/, strong: /^__([\s\S]+?)__(?!_)|^\*\*([\s\S]+?)\*\*(?!\*)/, em: /^\b_((?:[^_]|__)+?)_\b|^\*((?:\*\*|[\s\S])+?)\*(?!\*)/, code: /^(`+)\s*([\s\S]*?[^`])\s*\1(?!`)/, br: /^ {2,}\n(?!\s*$)/, del: noop, text: /^[\s\S]+?(?=[\\<!\[_*`]| {2,}\n|$)/,
    }; inline._inside = /(?:\[[^\]]*\]|[^\[\]]|\](?=[^\[]*\]))*/; inline._href = /\s*<?([\s\S]*?)>?(?:\s+['"]([\s\S]*?)['"])?\s*/; inline.link = replace(inline.link)('inside', inline._inside)('href', inline._href)(); inline.reflink = replace(inline.reflink)('inside', inline._inside)(); inline.normal = merge({}, inline); inline.pedantic = merge({}, inline.normal, { strong: /^__(?=\S)([\s\S]*?\S)__(?!_)|^\*\*(?=\S)([\s\S]*?\S)\*\*(?!\*)/, em: /^_(?=\S)([\s\S]*?\S)_(?!_)|^\*(?=\S)([\s\S]*?\S)\*(?!\*)/ }); inline.gfm = merge({}, inline.normal, {
        escape: replace(inline.escape)('])', '~|])')(), url: /^(https?:\/\/[^\s<]+[^<.,:;"')\]\s])/, del: /^~~(?=\S)([\s\S]*?\S)~~/, text: replace(inline.text)(']|', '~]|')('|', '|https?://|')(),
    }); inline.breaks = merge({}, inline.gfm, { br: replace(inline.br)('{2,}', '*')(), text: replace(inline.gfm.text)('{2,}', '*')() }); function InlineLexer(links, options) { this.options = options || marked.defaults; this.links = links; this.rules = inline.normal; this.renderer = this.options.renderer || new Renderer(); this.renderer.options = this.options; if (!this.links) { throw new Error('Tokens array requires a `links` property.'); } if (this.options.gfm) { if (this.options.breaks) { this.rules = inline.breaks; } else { this.rules = inline.gfm; } } else if (this.options.pedantic) { this.rules = inline.pedantic; } }InlineLexer.rules = inline; InlineLexer.output = function (src, links, options) { const inline = new InlineLexer(links, options); return inline.output(src); }; InlineLexer.prototype.output = function (src) { let out = ''; let link; let text; let href; let cap; while (src) { if (cap = this.rules.escape.exec(src)) { src = src.substring(cap[0].length); out += cap[1]; continue; } if (cap = this.rules.autolink.exec(src)) { src = src.substring(cap[0].length); if (cap[2] === '@') { text = cap[1].charAt(6) === ':' ? this.mangle(cap[1].substring(7)) : this.mangle(cap[1]); href = this.mangle('mailto:') + text; } else { text = escape(cap[1]); href = text; }out += this.renderer.link(href, null, text); continue; } if (!this.inLink && (cap = this.rules.url.exec(src))) { src = src.substring(cap[0].length); text = escape(cap[1]); href = text; out += this.renderer.link(href, null, text); continue; } if (cap = this.rules.tag.exec(src)) { if (!this.inLink && /^<a /i.test(cap[0])) { this.inLink = true; } else if (this.inLink && /^<\/a>/i.test(cap[0])) { this.inLink = false; }src = src.substring(cap[0].length); out += this.options.sanitize ? this.options.sanitizer ? this.options.sanitizer(cap[0]) : escape(cap[0]) : cap[0]; continue; } if (cap = this.rules.link.exec(src)) { src = src.substring(cap[0].length); this.inLink = true; out += this.outputLink(cap, { href: cap[2], title: cap[3] }); this.inLink = false; continue; } if ((cap = this.rules.reflink.exec(src)) || (cap = this.rules.nolink.exec(src))) { src = src.substring(cap[0].length); link = (cap[2] || cap[1]).replace(/\s+/g, ' '); link = this.links[link.toLowerCase()]; if (!link || !link.href) { out += cap[0].charAt(0); src = cap[0].substring(1) + src; continue; } this.inLink = true; out += this.outputLink(cap, link); this.inLink = false; continue; } if (cap = this.rules.strong.exec(src)) { src = src.substring(cap[0].length); out += this.renderer.strong(this.output(cap[2] || cap[1])); continue; } if (cap = this.rules.em.exec(src)) { src = src.substring(cap[0].length); out += this.renderer.em(this.output(cap[2] || cap[1])); continue; } if (cap = this.rules.code.exec(src)) { src = src.substring(cap[0].length); out += this.renderer.codespan(escape(cap[2], true)); continue; } if (cap = this.rules.br.exec(src)) { src = src.substring(cap[0].length); out += this.renderer.br(); continue; } if (cap = this.rules.del.exec(src)) { src = src.substring(cap[0].length); out += this.renderer.del(this.output(cap[1])); continue; } if (cap = this.rules.text.exec(src)) { src = src.substring(cap[0].length); out += this.renderer.text(escape(this.smartypants(cap[0]))); continue; } if (src) { throw new Error(`Infinite loop on byte: ${src.charCodeAt(0)}`); } } return out; }; InlineLexer.prototype.outputLink = function (cap, link) { const href = escape(link.href); const title = link.title ? escape(link.title) : null; return cap[0].charAt(0) !== '!' ? this.renderer.link(href, title, this.output(cap[1])) : this.renderer.image(href, title, escape(cap[1])); }; InlineLexer.prototype.smartypants = function (text) {
        if (!this.options.smartypants) return text; return text.replace(/---/g, '—').replace(/--/g, '–').replace(/(^|[-\u2014/(\[{"\s])'/g, '$1‘').replace(/'/g, '’')
            .replace(/(^|[-\u2014/(\[{\u2018\s])"/g, '$1“')
            .replace(/"/g, '”')
            .replace(/\.{3}/g, '…');
    }; InlineLexer.prototype.mangle = function (text) { if (!this.options.mangle) return text; let out = ''; const l = text.length; let i = 0; let ch; for (;i < l; i++) { ch = text.charCodeAt(i); if (Math.random() > 0.5) { ch = `x${ch.toString(16)}`; }out += `&#${ch};`; } return out; }; function Renderer(options) { this.options = options || {}; }Renderer.prototype.code = function (code, lang, escaped) { if (this.options.highlight) { const out = this.options.highlight(code, lang); if (out != null && out !== code) { escaped = true; code = out; } } if (!lang) { return `<pre><code>${escaped ? code : escape(code, true)}\n</code></pre>`; } return `<pre><code class="${this.options.langPrefix}${escape(lang, true)}">${escaped ? code : escape(code, true)}\n</code></pre>\n`; }; Renderer.prototype.blockquote = function (quote) { return `<blockquote>\n${quote}</blockquote>\n`; }; Renderer.prototype.html = function (html) { return html; }; Renderer.prototype.heading = function (text, level, raw) { return `<h${level} id="${this.options.headerPrefix}${raw.toLowerCase().replace(/[^\w]+/g, '-')}">${text}</h${level}>\n`; }; Renderer.prototype.hr = function () { return this.options.xhtml ? '<hr/>\n' : '<hr>\n'; }; Renderer.prototype.list = function (body, ordered) { const type = ordered ? 'ol' : 'ul'; return `<${type}>\n${body}</${type}>\n`; }; Renderer.prototype.listitem = function (text) { return `<li>${text}</li>\n`; }; Renderer.prototype.paragraph = function (text) { return `<p>${text}</p>\n`; }; Renderer.prototype.table = function (header, body) { return `${'<table>\n' + '<thead>\n'}${header}</thead>\n` + `<tbody>\n${body}</tbody>\n` + '</table>\n'; }; Renderer.prototype.tablerow = function (content) { return `<tr>\n${content}</tr>\n`; }; Renderer.prototype.tablecell = function (content, flags) { const type = flags.header ? 'th' : 'td'; const tag = flags.align ? `<${type} style="text-align:${flags.align}">` : `<${type}>`; return `${tag + content}</${type}>\n`; }; Renderer.prototype.strong = function (text) { return `<strong>${text}</strong>`; }; Renderer.prototype.em = function (text) { return `<em>${text}</em>`; }; Renderer.prototype.codespan = function (text) { return `<code>${text}</code>`; }; Renderer.prototype.br = function () { return this.options.xhtml ? '<br/>' : '<br>'; }; Renderer.prototype.del = function (text) { return `<del>${text}</del>`; }; Renderer.prototype.link = function (href, title, text) { if (this.options.sanitize) { try { var prot = decodeURIComponent(unescape(href)).replace(/[^\w:]/g, '').toLowerCase(); } catch (e) { return ''; } if (prot.indexOf('javascript:') === 0 || prot.indexOf('vbscript:') === 0) { return ''; } } let out = `<a href="${href}"`; if (title) { out += ` title="${title}"`; }out += `>${text}</a>`; return out; }; Renderer.prototype.image = function (href, title, text) { let out = `<img src="${href}" alt="${text}"`; if (title) { out += ` title="${title}"`; }out += this.options.xhtml ? '/>' : '>'; return out; }; Renderer.prototype.text = function (text) { return text; }; function Parser(options) { this.tokens = []; this.token = null; this.options = options || marked.defaults; this.options.renderer = this.options.renderer || new Renderer(); this.renderer = this.options.renderer; this.renderer.options = this.options; }Parser.parse = function (src, options, renderer) { const parser = new Parser(options, renderer); return parser.parse(src); }; Parser.prototype.parse = function (src) { this.inline = new InlineLexer(src.links, this.options, this.renderer); this.tokens = src.reverse(); let out = ''; while (this.next()) { out += this.tok(); } return out; }; Parser.prototype.next = function () { return this.token = this.tokens.pop(); }; Parser.prototype.peek = function () { return this.tokens[this.tokens.length - 1] || 0; }; Parser.prototype.parseText = function () { let body = this.token.text; while (this.peek().type === 'text') { body += `\n${this.next().text}`; } return this.inline.output(body); }; Parser.prototype.tok = function () { switch (this.token.type) { case 'space': { return ''; } case 'hr': { return this.renderer.hr(); } case 'heading': { return this.renderer.heading(this.inline.output(this.token.text), this.token.depth, this.token.text); } case 'code': { return this.renderer.code(this.token.text, this.token.lang, this.token.escaped); } case 'table': { let header = ''; var body = ''; let i; let row; let cell; let flags; let j; cell = ''; for (i = 0; i < this.token.header.length; i++) { flags = { header: true, align: this.token.align[i] }; cell += this.renderer.tablecell(this.inline.output(this.token.header[i]), { header: true, align: this.token.align[i] }); }header += this.renderer.tablerow(cell); for (i = 0; i < this.token.cells.length; i++) { row = this.token.cells[i]; cell = ''; for (j = 0; j < row.length; j++) { cell += this.renderer.tablecell(this.inline.output(row[j]), { header: false, align: this.token.align[j] }); }body += this.renderer.tablerow(cell); } return this.renderer.table(header, body); } case 'blockquote_start': { var body = ''; while (this.next().type !== 'blockquote_end') { body += this.tok(); } return this.renderer.blockquote(body); } case 'list_start': { var body = ''; const ordered = this.token.ordered; while (this.next().type !== 'list_end') { body += this.tok(); } return this.renderer.list(body, ordered); } case 'list_item_start': { var body = ''; while (this.next().type !== 'list_item_end') { body += this.token.type === 'text' ? this.parseText() : this.tok(); } return this.renderer.listitem(body); } case 'loose_item_start': { var body = ''; while (this.next().type !== 'list_item_end') { body += this.tok(); } return this.renderer.listitem(body); } case 'html': { const html = !this.token.pre && !this.options.pedantic ? this.inline.output(this.token.text) : this.token.text; return this.renderer.html(html); } case 'paragraph': { return this.renderer.paragraph(this.inline.output(this.token.text)); } case 'text': { return this.renderer.paragraph(this.parseText()); } } }; function escape(html, encode) {
        return html.replace(!encode ? /&(?!#?\w+;)/g : /&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/"/g, '&quot;')
            .replace(/'/g, '&#39;');
    } function unescape(html) { return html.replace(/&([#\w]+);/g, (_, n) => { n = n.toLowerCase(); if (n === 'colon') return ':'; if (n.charAt(0) === '#') { return n.charAt(1) === 'x' ? String.fromCharCode(parseInt(n.substring(2), 16)) : String.fromCharCode(+n.substring(1)); } return ''; }); } function replace(regex, opt) { regex = regex.source; opt = opt || ''; return function self(name, val) { if (!name) return new RegExp(regex, opt); val = val.source || val; val = val.replace(/(^|[^\[])\^/g, '$1'); regex = regex.replace(name, val); return self; }; } function noop() {}noop.exec = noop; function merge(obj) { let i = 1; let target; let key; for (;i < arguments.length; i++) { target = arguments[i]; for (key in target) { if (Object.prototype.hasOwnProperty.call(target, key)) { obj[key] = target[key]; } } } return obj; } function marked(src, opt, callback) { if (callback || typeof opt === 'function') { if (!callback) { callback = opt; opt = null; }opt = merge({}, marked.defaults, opt || {}); const highlight = opt.highlight; let tokens; let pending; let i = 0; try { tokens = Lexer.lex(src, opt); } catch (e) { return callback(e); }pending = tokens.length; const done = function (err) { if (err) { opt.highlight = highlight; return callback(err); } let out; try { out = Parser.parse(tokens, opt); } catch (e) { err = e; }opt.highlight = highlight; return err ? callback(err) : callback(null, out); }; if (!highlight || highlight.length < 3) { return done(); } delete opt.highlight; if (!pending) return done(); for (;i < tokens.length; i++) { (function (token) { if (token.type !== 'code') { return --pending || done(); } return highlight(token.text, token.lang, (err, code) => { if (err) return done(err); if (code == null || code === token.text) { return --pending || done(); }token.text = code; token.escaped = true; --pending || done(); }); }(tokens[i])); } return; } try { if (opt)opt = merge({}, marked.defaults, opt); return Parser.parse(Lexer.lex(src, opt), opt); } catch (e) { e.message += '\nPlease report this to https://github.com/chjj/marked.'; if ((opt || marked.defaults).silent) { return `<p>An error occured:</p><pre>${escape(`${e.message}`, true)}</pre>`; } throw e; } }marked.options = marked.setOptions = function (opt) { merge(marked.defaults, opt); return marked; }; marked.defaults = {
        gfm: true, tables: true, breaks: false, pedantic: false, sanitize: false, sanitizer: null, mangle: true, smartLists: false, silent: false, highlight: null, langPrefix: 'lang-', smartypants: false, headerPrefix: '', renderer: new Renderer(), xhtml: false,
    }; marked.Parser = Parser; marked.parser = Parser.parse; marked.Renderer = Renderer; marked.Lexer = Lexer; marked.lexer = Lexer.lex; marked.InlineLexer = InlineLexer; marked.inlineLexer = InlineLexer.output; marked.parse = marked; if (typeof module !== 'undefined' && typeof exports === 'object') { module.exports = marked; } else if (typeof define === 'function' && define.amd) { define(() => marked); } else { this.marked = marked; }
}).call(function () { return this || (typeof window !== 'undefined' ? window : global); }()); (function () {
    function t(t) { return t.target; } function n(t) { return t.source; } function e(t, n) { try { for (const e in n)Object.defineProperty(t.prototype, e, { value: n[e], enumerable: !1 }); } catch (r) { t.prototype = n; } } function r(t) { for (var n = -1, e = t.length, r = []; e > ++n;)r.push(t[n]); return r; } function i(t) { return Array.prototype.slice.call(t); } function u() {} function a(t) { return t; } function o() { return !0; } function c(t) { return typeof t === 'function' ? t : function () { return t; }; } function l(t, n, e) { return function () { const r = e.apply(n, arguments); return arguments.length ? t : r; }; } function s(t) { return t != null && !isNaN(t); } function f(t) { return t.length; } function h(t) { return t.trim().replace(/\s+/g, ' '); } function d(t) { for (var n = 1; t * n % 1;)n *= 10; return n; } function g(t) { return t.length === 1 ? function (n, e) { t(n == null ? e : null); } : t; } function p(t) { return t.responseText; } function m(t) { return JSON.parse(t.responseText); } function v(t) { const n = document.createRange(); return n.selectNode(document.body), n.createContextualFragment(t.responseText); } function y(t) { return t.responseXML; } function M() {} function b(t) { function n() { for (var n, r = e, i = -1, u = r.length; u > ++i;)(n = r[i].on) && n.apply(this, arguments); return t; } var e = []; const r = new u(); return n.on = function (n, i) { let u; const a = r.get(n); return arguments.length < 2 ? a && a.on : (a && (a.on = null, e = e.slice(0, u = e.indexOf(a)).concat(e.slice(u + 1)), r.remove(n)), i && e.push(r.set(n, { on: i })), t); }, n; } function x(t, n) { return n - (t ? 1 + Math.floor(Math.log(t + Math.pow(10, 1 + Math.floor(Math.log(t) / Math.LN10) - n)) / Math.LN10) : 1); } function _(t) { return `${t}`; } function w(t, n) { const e = Math.pow(10, 3 * Math.abs(8 - n)); return { scale: n > 8 ? function (t) { return t / e; } : function (t) { return t * e; }, symbol: t }; } function S(t) { return function (n) { return n <= 0 ? 0 : n >= 1 ? 1 : t(n); }; } function k(t) { return function (n) { return 1 - t(1 - n); }; } function E(t) { return function (n) { return 0.5 * (n < 0.5 ? t(2 * n) : 2 - t(2 - 2 * n)); }; } function A(t) { return t * t; } function N(t) { return t * t * t; } function T(t) { if (t <= 0) return 0; if (t >= 1) return 1; const n = t * t; const e = n * t; return 4 * (t < 0.5 ? e : 3 * (t - n) + e - 0.75); } function q(t) { return function (n) { return Math.pow(n, t); }; } function C(t) { return 1 - Math.cos(t * Ru / 2); } function z(t) { return Math.pow(2, 10 * (t - 1)); } function D(t) { return 1 - Math.sqrt(1 - t * t); } function L(t, n) { let e; return arguments.length < 2 && (n = 0.45), arguments.length ? e = n / (2 * Ru) * Math.asin(1 / t) : (t = 1, e = n / 4), function (r) { return 1 + t * Math.pow(2, 10 * -r) * Math.sin(2 * (r - e) * Ru / n); }; } function F(t) { return t || (t = 1.70158), function (n) { return n * n * ((t + 1) * n - t); }; } function H(t) { return 1 / 2.75 > t ? 7.5625 * t * t : 2 / 2.75 > t ? 7.5625 * (t -= 1.5 / 2.75) * t + 0.75 : 2.5 / 2.75 > t ? 7.5625 * (t -= 2.25 / 2.75) * t + 0.9375 : 7.5625 * (t -= 2.625 / 2.75) * t + 0.984375; } function R() { d3.event.stopPropagation(), d3.event.preventDefault(); } function P() { for (var t, n = d3.event; t = n.sourceEvent;)n = t; return n; } function j(t) { for (var n = new M(), e = 0, r = arguments.length; r > ++e;)n[arguments[e]] = b(n); return n.of = function (e, r) { return function (i) { try { var u = i.sourceEvent = d3.event; i.target = t, d3.event = i, n[i.type].apply(e, r); } finally { d3.event = u; } }; }, n; } function O(t) { const n = [t.a, t.b]; const e = [t.c, t.d]; let r = U(n); let i = Y(n, e); const u = U(I(e, n, -i)) || 0; n[0] * e[1] < e[0] * n[1] && (n[0] *= -1, n[1] *= -1, r *= -1, i *= -1), this.rotate = (r ? Math.atan2(n[1], n[0]) : Math.atan2(-e[0], e[1])) * Ou, this.translate = [t.e, t.f], this.scale = [r, u], this.skew = u ? Math.atan2(i, u) * Ou : 0; } function Y(t, n) { return t[0] * n[0] + t[1] * n[1]; } function U(t) { const n = Math.sqrt(Y(t, t)); return n && (t[0] /= n, t[1] /= n), n; } function I(t, n, e) { return t[0] += e * n[0], t[1] += e * n[1], t; } function V(t) { return t == 'transform' ? d3.interpolateTransform : d3.interpolate; } function X(t, n) { return n = n - (t = +t) ? 1 / (n - t) : 0, function (e) { return (e - t) * n; }; } function Z(t, n) { return n = n - (t = +t) ? 1 / (n - t) : 0, function (e) { return Math.max(0, Math.min(1, (e - t) * n)); }; } function B() {} function $(t, n, e) { return new J(t, n, e); } function J(t, n, e) { this.r = t, this.g = n, this.b = e; } function G(t) { return t < 16 ? `0${Math.max(0, t).toString(16)}` : Math.min(255, t).toString(16); } function K(t, n, e) { let r; let i; let u; let a = 0; let o = 0; let c = 0; if (r = /([a-z]+)\((.*)\)/i.exec(t)) switch (i = r[2].split(','), r[1]) { case 'hsl': return e(parseFloat(i[0]), parseFloat(i[1]) / 100, parseFloat(i[2]) / 100); case 'rgb': return n(nn(i[0]), nn(i[1]), nn(i[2])); } return (u = aa.get(t)) ? n(u.r, u.g, u.b) : (t != null && t.charAt(0) === '#' && (t.length === 4 ? (a = t.charAt(1), a += a, o = t.charAt(2), o += o, c = t.charAt(3), c += c) : t.length === 7 && (a = t.substring(1, 3), o = t.substring(3, 5), c = t.substring(5, 7)), a = parseInt(a, 16), o = parseInt(o, 16), c = parseInt(c, 16)), n(a, o, c)); } function W(t, n, e) { let r; let i; const u = Math.min(t /= 255, n /= 255, e /= 255); const a = Math.max(t, n, e); const o = a - u; const c = (a + u) / 2; return o ? (i = c < 0.5 ? o / (a + u) : o / (2 - a - u), r = t == a ? (n - e) / o + (e > n ? 6 : 0) : n == a ? (e - t) / o + 2 : (t - n) / o + 4, r *= 60) : i = r = 0, en(r, i, c); } function Q(t, n, e) { t = tn(t), n = tn(n), e = tn(e); const r = gn((0.4124564 * t + 0.3575761 * n + 0.1804375 * e) / sa); const i = gn((0.2126729 * t + 0.7151522 * n + 0.072175 * e) / fa); const u = gn((0.0193339 * t + 0.119192 * n + 0.9503041 * e) / ha); return ln(116 * i - 16, 500 * (r - i), 200 * (i - u)); } function tn(t) { return (t /= 255) <= 0.04045 ? t / 12.92 : Math.pow((t + 0.055) / 1.055, 2.4); } function nn(t) { const n = parseFloat(t); return t.charAt(t.length - 1) === '%' ? Math.round(2.55 * n) : n; } function en(t, n, e) { return new rn(t, n, e); } function rn(t, n, e) { this.h = t, this.s = n, this.l = e; } function un(t, n, e) { function r(t) { return t > 360 ? t -= 360 : t < 0 && (t += 360), t < 60 ? u + (a - u) * t / 60 : t < 180 ? a : t < 240 ? u + (a - u) * (240 - t) / 60 : u; } function i(t) { return Math.round(255 * r(t)); } let u; let a; return t %= 360, t < 0 && (t += 360), n = n < 0 ? 0 : n > 1 ? 1 : n, e = e < 0 ? 0 : e > 1 ? 1 : e, a = e <= 0.5 ? e * (1 + n) : e + n - e * n, u = 2 * e - a, $(i(t + 120), i(t), i(t - 120)); } function an(t, n, e) { return new on(t, n, e); } function on(t, n, e) { this.h = t, this.c = n, this.l = e; } function cn(t, n, e) { return ln(e, Math.cos(t *= ju) * n, Math.sin(t) * n); } function ln(t, n, e) { return new sn(t, n, e); } function sn(t, n, e) { this.l = t, this.a = n, this.b = e; } function fn(t, n, e) { let r = (t + 16) / 116; let i = r + n / 500; let u = r - e / 200; return i = dn(i) * sa, r = dn(r) * fa, u = dn(u) * ha, $(pn(3.2404542 * i - 1.5371385 * r - 0.4985314 * u), pn(-0.969266 * i + 1.8760108 * r + 0.041556 * u), pn(0.0556434 * i - 0.2040259 * r + 1.0572252 * u)); } function hn(t, n, e) { return an(180 * (Math.atan2(e, n) / Ru), Math.sqrt(n * n + e * e), t); } function dn(t) { return t > 0.206893034 ? t * t * t : (t - 4 / 29) / 7.787037; } function gn(t) { return t > 0.008856 ? Math.pow(t, 1 / 3) : 7.787037 * t + 4 / 29; } function pn(t) { return Math.round(255 * (t <= 0.00304 ? 12.92 * t : 1.055 * Math.pow(t, 1 / 2.4) - 0.055)); } function mn(t) { return Iu(t, Ma), t; } function vn(t) { return function () { return ga(t, this); }; } function yn(t) { return function () { return pa(t, this); }; } function Mn(t, n) { function e() { this.removeAttribute(t); } function r() { this.removeAttributeNS(t.space, t.local); } function i() { this.setAttribute(t, n); } function u() { this.setAttributeNS(t.space, t.local, n); } function a() { const e = n.apply(this, arguments); e == null ? this.removeAttribute(t) : this.setAttribute(t, e); } function o() { const e = n.apply(this, arguments); e == null ? this.removeAttributeNS(t.space, t.local) : this.setAttributeNS(t.space, t.local, e); } return t = d3.ns.qualify(t), n == null ? t.local ? r : e : typeof n === 'function' ? t.local ? o : a : t.local ? u : i; } function bn(t) { return RegExp(`(?:^|\\s+)${d3.requote(t)}(?:\\s+|$)`, 'g'); } function xn(t, n) { function e() { for (let e = -1; i > ++e;)t[e](this, n); } function r() { for (let e = -1, r = n.apply(this, arguments); i > ++e;)t[e](this, r); }t = t.trim().split(/\s+/).map(_n); var i = t.length; return typeof n === 'function' ? r : e; } function _n(t) { const n = bn(t); return function (e, r) { if (i = e.classList) return r ? i.add(t) : i.remove(t); var i = e.className; const u = i.baseVal != null; let a = u ? i.baseVal : i; r ? (n.lastIndex = 0, n.test(a) || (a = h(`${a} ${t}`), u ? i.baseVal = a : e.className = a)) : a && (a = h(a.replace(n, ' ')), u ? i.baseVal = a : e.className = a); }; } function wn(t, n, e) { function r() { this.style.removeProperty(t); } function i() { this.style.setProperty(t, n, e); } function u() { const r = n.apply(this, arguments); r == null ? this.style.removeProperty(t) : this.style.setProperty(t, r, e); } return n == null ? r : typeof n === 'function' ? u : i; } function Sn(t, n) { function e() { delete this[t]; } function r() { this[t] = n; } function i() { const e = n.apply(this, arguments); e == null ? delete this[t] : this[t] = e; } return n == null ? e : typeof n === 'function' ? i : r; } function kn(t) { return { __data__: t }; } function En(t) { return function () { return ya(this, t); }; } function An(t) { return arguments.length || (t = d3.ascending), function (n, e) { return t(n && n.__data__, e && e.__data__); }; } function Nn(t, n, e) { function r() { const n = this[u]; n && (this.removeEventListener(t, n, n.$), delete this[u]); } function i() { function i(t) { const e = d3.event; d3.event = t, o[0] = a.__data__; try { n.apply(a, o); } finally { d3.event = e; } } var a = this; var o = Yu(arguments); r.call(this), this.addEventListener(t, this[u] = i, i.$ = e), i._ = n; } var u = `__on${t}`; const a = t.indexOf('.'); return a > 0 && (t = t.substring(0, a)), n ? i : r; } function Tn(t, n) { for (let e = 0, r = t.length; r > e; e++) for (var i, u = t[e], a = 0, o = u.length; o > a; a++)(i = u[a]) && n(i, a, e); return t; } function qn(t) { return Iu(t, xa), t; } function Cn(t, n) { return Iu(t, wa), t.id = n, t; } function zn(t, n, e, r) {
        const i = t.__transition__ || (t.__transition__ = { active: 0, count: 0 }); let a = i[e]; if (!a) {
            const o = r.time; return a = i[e] = {
                tween: new u(), event: d3.dispatch('start', 'end'), time: o, ease: r.ease, delay: r.delay, duration: r.duration,
            }, ++i.count, d3.timer((r) => { function u(r) { return i.active > e ? l() : (i.active = e, h.start.call(t, s, n), a.tween.forEach((e, r) => { (r = r.call(t, s, n)) && p.push(r); }), c(r) || d3.timer(c, 0, o), 1); } function c(r) { if (i.active !== e) return l(); for (var u = (r - d) / g, a = f(u), o = p.length; o > 0;)p[--o].call(t, a); return u >= 1 ? (l(), h.end.call(t, s, n), 1) : void 0; } function l() { return --i.count ? delete i[e] : delete t.__transition__, 1; } var s = t.__data__; var f = a.ease; var h = a.event; var d = a.delay; var g = a.duration; var p = []; return r >= d ? u(r) : d3.timer(u, d, o), 1; }, 0, o), a;
        }
    } function Dn(t) { return t == null && (t = ''), function () { this.textContent = t; }; } function Ln(t, n, e, r) { const i = t.id; return Tn(t, typeof e === 'function' ? (t, u, a) => { t.__transition__[i].tween.set(n, r(e.call(t, t.__data__, u, a))); } : (e = r(e), function (t) { t.__transition__[i].tween.set(n, e); })); } function Fn() { for (var t, n = Date.now(), e = qa; e;)t = n - e.then, t >= e.delay && (e.flush = e.callback(t)), e = e.next; const r = Hn() - n; r > 24 ? (isFinite(r) && (clearTimeout(Aa), Aa = setTimeout(Fn, r)), Ea = 0) : (Ea = 1, Ca(Fn)); } function Hn() { for (var t = null, n = qa, e = 1 / 0; n;)n.flush ? (delete Ta[n.callback.id], n = t ? t.next = n.next : qa = n.next) : (e = Math.min(e, n.then + n.delay), n = (t = n).next); return e; } function Rn(t, n) {
        let e = t.ownerSVGElement || t; if (e.createSVGPoint) {
            let r = e.createSVGPoint(); if (za < 0 && (window.scrollX || window.scrollY)) {
                e = d3.select(document.body).append('svg').style('position', 'absolute').style('top', 0)
                    .style('left', 0); const i = e[0][0].getScreenCTM(); za = !(i.f || i.e), e.remove();
            } return za ? (r.x = n.pageX, r.y = n.pageY) : (r.x = n.clientX, r.y = n.clientY), r = r.matrixTransform(t.getScreenCTM().inverse()), [r.x, r.y];
        } const u = t.getBoundingClientRect(); return [n.clientX - u.left - t.clientLeft, n.clientY - u.top - t.clientTop];
    } function Pn() {} function jn(t) { const n = t[0]; const e = t[t.length - 1]; return e > n ? [n, e] : [e, n]; } function On(t) { return t.rangeExtent ? t.rangeExtent() : jn(t.range()); } function Yn(t, n) { let e; let r = 0; let i = t.length - 1; let u = t[r]; let a = t[i]; return u > a && (e = r, r = i, i = e, e = u, u = a, a = e), (n = n(a - u)) && (t[r] = n.floor(u), t[i] = n.ceil(a)), t; } function Un() { return Math; } function In(t, n, e, r) { function i() { const i = Math.min(t.length, n.length) > 2 ? Gn : Jn; const c = r ? Z : X; return a = i(t, n, c, e), o = i(n, t, c, d3.interpolate), u; } function u(t) { return a(t); } let a; let o; return u.invert = function (t) { return o(t); }, u.domain = function (n) { return arguments.length ? (t = n.map(Number), i()) : t; }, u.range = function (t) { return arguments.length ? (n = t, i()) : n; }, u.rangeRound = function (t) { return u.range(t).interpolate(d3.interpolateRound); }, u.clamp = function (t) { return arguments.length ? (r = t, i()) : r; }, u.interpolate = function (t) { return arguments.length ? (e = t, i()) : e; }, u.ticks = function (n) { return Bn(t, n); }, u.tickFormat = function (n) { return $n(t, n); }, u.nice = function () { return Yn(t, Xn), i(); }, u.copy = function () { return In(t, n, e, r); }, i(); } function Vn(t, n) { return d3.rebind(t, n, 'range', 'rangeRound', 'interpolate', 'clamp'); } function Xn(t) { return t = Math.pow(10, Math.round(Math.log(t) / Math.LN10) - 1), t && { floor(n) { return Math.floor(n / t) * t; }, ceil(n) { return Math.ceil(n / t) * t; } }; } function Zn(t, n) { const e = jn(t); const r = e[1] - e[0]; let i = Math.pow(10, Math.floor(Math.log(r / n) / Math.LN10)); const u = n / r * i; return u <= 0.15 ? i *= 10 : u <= 0.35 ? i *= 5 : u <= 0.75 && (i *= 2), e[0] = Math.ceil(e[0] / i) * i, e[1] = Math.floor(e[1] / i) * i + 0.5 * i, e[2] = i, e; } function Bn(t, n) { return d3.range(...Zn(t, n)); } function $n(t, n) { return d3.format(`,.${Math.max(0, -Math.floor(Math.log(Zn(t, n)[2]) / Math.LN10 + 0.01))}f`); } function Jn(t, n, e, r) { const i = e(t[0], t[1]); const u = r(n[0], n[1]); return function (t) { return u(i(t)); }; } function Gn(t, n, e, r) { const i = []; const u = []; let a = 0; const o = Math.min(t.length, n.length) - 1; for (t[o] < t[0] && (t = t.slice().reverse(), n = n.slice().reverse()); o >= ++a;)i.push(e(t[a - 1], t[a])), u.push(r(n[a - 1], n[a])); return function (n) { const e = d3.bisect(t, n, 1, o) - 1; return u[e](i[e](n)); }; } function Kn(t, n) { function e(e) { return t(n(e)); } let r = n.pow; return e.invert = function (n) { return r(t.invert(n)); }, e.domain = function (i) { return arguments.length ? (n = i[0] < 0 ? Qn : Wn, r = n.pow, t.domain(i.map(n)), e) : t.domain().map(r); }, e.nice = function () { return t.domain(Yn(t.domain(), Un)), e; }, e.ticks = function () { const e = jn(t.domain()); let i = []; if (e.every(isFinite)) { let u = Math.floor(e[0]); let a = Math.ceil(e[1]); const o = r(e[0]); const c = r(e[1]); if (n === Qn) for (i.push(r(u)); a > u++;) for (var l = 9; l > 0; l--)i.push(r(u) * l); else { for (;a > u; u++) for (var l = 1; l < 10; l++)i.push(r(u) * l); i.push(r(u)); } for (u = 0; o > i[u]; u++);for (a = i.length; i[a - 1] > c; a--);i = i.slice(u, a); } return i; }, e.tickFormat = function (t, i) { if (arguments.length < 2 && (i = Da), !arguments.length) return i; let u; const a = Math.max(0.1, t / e.ticks().length); const o = n === Qn ? (u = -1e-12, Math.floor) : (u = 1e-12, Math.ceil); return function (t) { return a >= t / r(o(n(t) + u)) ? i(t) : ''; }; }, e.copy = function () { return Kn(t.copy(), n); }, Vn(e, t); } function Wn(t) { return Math.log(t < 0 ? 0 : t) / Math.LN10; } function Qn(t) { return -Math.log(t > 0 ? 0 : -t) / Math.LN10; } function te(t, n) { function e(n) { return t(r(n)); } var r = ne(n); let i = ne(1 / n); return e.invert = function (n) { return i(t.invert(n)); }, e.domain = function (n) { return arguments.length ? (t.domain(n.map(r)), e) : t.domain().map(i); }, e.ticks = function (t) { return Bn(e.domain(), t); }, e.tickFormat = function (t) { return $n(e.domain(), t); }, e.nice = function () { return e.domain(Yn(e.domain(), Xn)); }, e.exponent = function (t) { if (!arguments.length) return n; const u = e.domain(); return r = ne(n = t), i = ne(1 / n), e.domain(u); }, e.copy = function () { return te(t.copy(), n); }, Vn(e, t); } function ne(t) { return function (n) { return n < 0 ? -Math.pow(-n, t) : Math.pow(n, t); }; } function ee(t, n) { function e(n) { return a[((i.get(n) || i.set(n, t.push(n))) - 1) % a.length]; } function r(n, e) { return d3.range(t.length).map(t => n + e * t); } let i; let a; let o; return e.domain = function (r) { if (!arguments.length) return t; t = [], i = new u(); for (var a, o = -1, c = r.length; c > ++o;)i.has(a = r[o]) || i.set(a, t.push(a)); return e[n.t](...n.a); }, e.range = function (t) { return arguments.length ? (a = t, o = 0, n = { t: 'range', a: arguments }, e) : a; }, e.rangePoints = function (i, u) { arguments.length < 2 && (u = 0); const c = i[0]; const l = i[1]; const s = (l - c) / (Math.max(1, t.length - 1) + u); return a = r(t.length < 2 ? (c + l) / 2 : c + s * u / 2, s), o = 0, n = { t: 'rangePoints', a: arguments }, e; }, e.rangeBands = function (i, u, c) { arguments.length < 2 && (u = 0), arguments.length < 3 && (c = u); const l = i[1] < i[0]; const s = i[l - 0]; const f = i[1 - l]; const h = (f - s) / (t.length - u + 2 * c); return a = r(s + h * c, h), l && a.reverse(), o = h * (1 - u), n = { t: 'rangeBands', a: arguments }, e; }, e.rangeRoundBands = function (i, u, c) { arguments.length < 2 && (u = 0), arguments.length < 3 && (c = u); const l = i[1] < i[0]; const s = i[l - 0]; const f = i[1 - l]; const h = Math.floor((f - s) / (t.length - u + 2 * c)); const d = f - s - (t.length - u) * h; return a = r(s + Math.round(d / 2), h), l && a.reverse(), o = Math.round(h * (1 - u)), n = { t: 'rangeRoundBands', a: arguments }, e; }, e.rangeBand = function () { return o; }, e.rangeExtent = function () { return jn(n.a[0]); }, e.copy = function () { return ee(t, n); }, e.domain(t); } function re(t, n) { function e() { let e = 0; const u = n.length; for (i = []; u > ++e;)i[e - 1] = d3.quantile(t, e / u); return r; } function r(t) { return isNaN(t = +t) ? 0 / 0 : n[d3.bisect(i, t)]; } let i; return r.domain = function (n) { return arguments.length ? (t = n.filter(t => !isNaN(t)).sort(d3.ascending), e()) : t; }, r.range = function (t) { return arguments.length ? (n = t, e()) : n; }, r.quantiles = function () { return i; }, r.copy = function () { return re(t, n); }, e(); } function ie(t, n, e) { function r(n) { return e[Math.max(0, Math.min(a, Math.floor(u * (n - t))))]; } function i() { return u = e.length / (n - t), a = e.length - 1, r; } let u; let a; return r.domain = function (e) { return arguments.length ? (t = +e[0], n = +e[e.length - 1], i()) : [t, n]; }, r.range = function (t) { return arguments.length ? (e = t, i()) : e; }, r.copy = function () { return ie(t, n, e); }, i(); } function ue(t, n) { function e(e) { return n[d3.bisect(t, e)]; } return e.domain = function (n) { return arguments.length ? (t = n, e) : t; }, e.range = function (t) { return arguments.length ? (n = t, e) : n; }, e.copy = function () { return ue(t, n); }, e; } function ae(t) { function n(t) { return +t; } return n.invert = n, n.domain = n.range = function (e) { return arguments.length ? (t = e.map(n), n) : t; }, n.ticks = function (n) { return Bn(t, n); }, n.tickFormat = function (n) { return $n(t, n); }, n.copy = function () { return ae(t); }, n; } function oe(t) { return t.innerRadius; } function ce(t) { return t.outerRadius; } function le(t) { return t.startAngle; } function se(t) { return t.endAngle; } function fe(t) { function n(n) { function a() { s.push('M', u(t(f), l)); } for (var o, s = [], f = [], h = -1, d = n.length, g = c(e), p = c(r); d > ++h;)i.call(this, o = n[h], h) ? f.push([+g.call(this, o, h), +p.call(this, o, h)]) : f.length && (a(), f = []); return f.length && a(), s.length ? s.join('') : null; } var e = he; var r = de; var i = o; var u = ge; let a = u.key; var l = 0.7; return n.x = function (t) { return arguments.length ? (e = t, n) : e; }, n.y = function (t) { return arguments.length ? (r = t, n) : r; }, n.defined = function (t) { return arguments.length ? (i = t, n) : i; }, n.interpolate = function (t) { return arguments.length ? (a = typeof t === 'function' ? u = t : (u = Oa.get(t) || ge).key, n) : a; }, n.tension = function (t) { return arguments.length ? (l = t, n) : l; }, n; } function he(t) { return t[0]; } function de(t) { return t[1]; } function ge(t) { return t.join('L'); } function pe(t) { return `${ge(t)}Z`; } function me(t) { for (var n = 0, e = t.length, r = t[0], i = [r[0], ',', r[1]]; e > ++n;)i.push('V', (r = t[n])[1], 'H', r[0]); return i.join(''); } function ve(t) { for (var n = 0, e = t.length, r = t[0], i = [r[0], ',', r[1]]; e > ++n;)i.push('H', (r = t[n])[0], 'V', r[1]); return i.join(''); } function ye(t, n) { return t.length < 4 ? ge(t) : t[1] + xe(t.slice(1, t.length - 1), _e(t, n)); } function Me(t, n) { return t.length < 3 ? ge(t) : t[0] + xe((t.push(t[0]), t), _e([t[t.length - 2]].concat(t, [t[1]]), n)); } function be(t, n) { return t.length < 3 ? ge(t) : t[0] + xe(t, _e(t, n)); } function xe(t, n) { if (n.length < 1 || t.length != n.length && t.length != n.length + 2) return ge(t); const e = t.length != n.length; let r = ''; let i = t[0]; let u = t[1]; const a = n[0]; let o = a; let c = 1; if (e && (r += `Q${u[0] - 2 * a[0] / 3},${u[1] - 2 * a[1] / 3},${u[0]},${u[1]}`, i = t[1], c = 2), n.length > 1) { o = n[1], u = t[c], c++, r += `C${i[0] + a[0]},${i[1] + a[1]},${u[0] - o[0]},${u[1] - o[1]},${u[0]},${u[1]}`; for (let l = 2; n.length > l; l++, c++)u = t[c], o = n[l], r += `S${u[0] - o[0]},${u[1] - o[1]},${u[0]},${u[1]}`; } if (e) { const s = t[c]; r += `Q${u[0] + 2 * o[0] / 3},${u[1] + 2 * o[1] / 3},${s[0]},${s[1]}`; } return r; } function _e(t, n) { for (var e, r = [], i = (1 - n) / 2, u = t[0], a = t[1], o = 1, c = t.length; c > ++o;)e = u, u = a, a = t[o], r.push([i * (a[0] - e[0]), i * (a[1] - e[1])]); return r; } function we(t) { if (t.length < 3) return ge(t); let n = 1; const e = t.length; let r = t[0]; const i = r[0]; const u = r[1]; const a = [i, i, i, (r = t[1])[0]]; const o = [u, u, u, r[1]]; const c = [i, ',', u]; for (Ne(c, a, o); e > ++n;)r = t[n], a.shift(), a.push(r[0]), o.shift(), o.push(r[1]), Ne(c, a, o); for (n = -1; ++n < 2;)a.shift(), a.push(r[0]), o.shift(), o.push(r[1]), Ne(c, a, o); return c.join(''); } function Se(t) { if (t.length < 4) return ge(t); for (var n, e = [], r = -1, i = t.length, u = [0], a = [0]; ++r < 3;)n = t[r], u.push(n[0]), a.push(n[1]); for (e.push(`${Ae(Ia, u)},${Ae(Ia, a)}`), --r; i > ++r;)n = t[r], u.shift(), u.push(n[0]), a.shift(), a.push(n[1]), Ne(e, u, a); return e.join(''); } function ke(t) { for (var n, e, r = -1, i = t.length, u = i + 4, a = [], o = []; ++r < 4;)e = t[r % i], a.push(e[0]), o.push(e[1]); for (n = [Ae(Ia, a), ',', Ae(Ia, o)], --r; u > ++r;)e = t[r % i], a.shift(), a.push(e[0]), o.shift(), o.push(e[1]), Ne(n, a, o); return n.join(''); } function Ee(t, n) { const e = t.length - 1; if (e) for (var r, i, u = t[0][0], a = t[0][1], o = t[e][0] - u, c = t[e][1] - a, l = -1; e >= ++l;)r = t[l], i = l / e, r[0] = n * r[0] + (1 - n) * (u + i * o), r[1] = n * r[1] + (1 - n) * (a + i * c); return we(t); } function Ae(t, n) { return t[0] * n[0] + t[1] * n[1] + t[2] * n[2] + t[3] * n[3]; } function Ne(t, n, e) { t.push('C', Ae(Ya, n), ',', Ae(Ya, e), ',', Ae(Ua, n), ',', Ae(Ua, e), ',', Ae(Ia, n), ',', Ae(Ia, e)); } function Te(t, n) { return (n[1] - t[1]) / (n[0] - t[0]); } function qe(t) { for (var n = 0, e = t.length - 1, r = [], i = t[0], u = t[1], a = r[0] = Te(i, u); e > ++n;)r[n] = (a + (a = Te(i = u, u = t[n + 1]))) / 2; return r[n] = a, r; } function Ce(t) { for (var n, e, r, i, u = [], a = qe(t), o = -1, c = t.length - 1; c > ++o;)n = Te(t[o], t[o + 1]), Math.abs(n) < 1e-6 ? a[o] = a[o + 1] = 0 : (e = a[o] / n, r = a[o + 1] / n, i = e * e + r * r, i > 9 && (i = 3 * n / Math.sqrt(i), a[o] = i * e, a[o + 1] = i * r)); for (o = -1; c >= ++o;)i = (t[Math.min(c, o + 1)][0] - t[Math.max(0, o - 1)][0]) / (6 * (1 + a[o] * a[o])), u.push([i || 0, a[o] * i || 0]); return u; } function ze(t) { return t.length < 3 ? ge(t) : t[0] + xe(t, Ce(t)); } function De(t) { for (var n, e, r, i = -1, u = t.length; u > ++i;)n = t[i], e = n[0], r = n[1] + Pa, n[0] = e * Math.cos(r), n[1] = e * Math.sin(r); return t; } function Le(t) { function n(n) { function o() { m.push('M', l(t(y), d), h, f(t(v.reverse()), d), 'Z'); } for (var s, g, p, m = [], v = [], y = [], M = -1, b = n.length, x = c(e), _ = c(i), w = e === r ? function () { return g; } : c(r), S = i === u ? function () { return p; } : c(u); b > ++M;)a.call(this, s = n[M], M) ? (v.push([g = +x.call(this, s, M), p = +_.call(this, s, M)]), y.push([+w.call(this, s, M), +S.call(this, s, M)])) : v.length && (o(), v = [], y = []); return v.length && o(), m.length ? m.join('') : null; } var e = he; var r = he; var i = 0; var u = de; var a = o; var l = ge; let s = l.key; var f = l; var h = 'L'; var d = 0.7; return n.x = function (t) { return arguments.length ? (e = r = t, n) : r; }, n.x0 = function (t) { return arguments.length ? (e = t, n) : e; }, n.x1 = function (t) { return arguments.length ? (r = t, n) : r; }, n.y = function (t) { return arguments.length ? (i = u = t, n) : u; }, n.y0 = function (t) { return arguments.length ? (i = t, n) : i; }, n.y1 = function (t) { return arguments.length ? (u = t, n) : u; }, n.defined = function (t) { return arguments.length ? (a = t, n) : a; }, n.interpolate = function (t) { return arguments.length ? (s = typeof t === 'function' ? l = t : (l = Oa.get(t) || ge).key, f = l.reverse || l, h = l.closed ? 'M' : 'L', n) : s; }, n.tension = function (t) { return arguments.length ? (d = t, n) : d; }, n; } function Fe(t) { return t.radius; } function He(t) { return [t.x, t.y]; } function Re(t) { return function () { const n = t.apply(this, arguments); const e = n[0]; const r = n[1] + Pa; return [e * Math.cos(r), e * Math.sin(r)]; }; } function Pe() { return 64; } function je() { return 'circle'; } function Oe(t) { const n = Math.sqrt(t / Ru); return `M0,${n}A${n},${n} 0 1,1 0,${-n}A${n},${n} 0 1,1 0,${n}Z`; } function Ye(t, n) { t.attr('transform', t => `translate(${n(t)},0)`); } function Ue(t, n) { t.attr('transform', t => `translate(0,${n(t)})`); } function Ie(t, n, e) { if (r = [], e && n.length > 1) { for (var r, i, u, a = jn(t.domain()), o = -1, c = n.length, l = (n[1] - n[0]) / ++e; c > ++o;) for (i = e; --i > 0;)(u = +n[o] - i * l) >= a[0] && r.push(u); for (--o, i = 0; e > ++i && (u = +n[o] + i * l) < a[1];)r.push(u); } return r; } function Ve() {
        Ja || (Ja = d3.select('body').append('div').style('visibility', 'hidden').style('top', 0)
            .style('height', 0)
            .style('width', 0)
            .style('overflow-y', 'scroll')
            .append('div')
            .style('height', '2000px')
            .node().parentNode); let t; const n = d3.event; try { Ja.scrollTop = 1e3, Ja.dispatchEvent(n), t = 1e3 - Ja.scrollTop; } catch (e) { t = n.wheelDelta || 5 * -n.detail; } return t;
    } function Xe(t) { for (var n = t.source, e = t.target, r = Be(n, e), i = [n]; n !== r;)n = n.parent, i.push(n); for (let u = i.length; e !== r;)i.splice(u, 0, e), e = e.parent; return i; } function Ze(t) { for (var n = [], e = t.parent; e != null;)n.push(t), t = e, e = e.parent; return n.push(t), n; } function Be(t, n) { if (t === n) return t; for (var e = Ze(t), r = Ze(n), i = e.pop(), u = r.pop(), a = null; i === u;)a = i, i = e.pop(), u = r.pop(); return a; } function $e(t) { t.fixed |= 2; } function Je(t) { t.fixed &= 1; } function Ge(t) { t.fixed |= 4, t.px = t.x, t.py = t.y; } function Ke(t) { t.fixed &= 3; } function We(t, n, e) { let r = 0; let i = 0; if (t.charge = 0, !t.leaf) for (var u, a = t.nodes, o = a.length, c = -1; o > ++c;)u = a[c], u != null && (We(u, n, e), t.charge += u.charge, r += u.charge * u.cx, i += u.charge * u.cy); if (t.point) { t.leaf || (t.point.x += Math.random() - 0.5, t.point.y += Math.random() - 0.5); const l = n * e[t.point.index]; t.charge += t.pointCharge = l, r += l * t.point.x, i += l * t.point.y; }t.cx = r / t.charge, t.cy = i / t.charge; } function Qe() { return 20; } function tr() { return 1; } function nr(t) { return t.x; } function er(t) { return t.y; } function rr(t, n, e) { t.y0 = n, t.y = e; } function ir(t) { return d3.range(t.length); } function ur(t) { for (var n = -1, e = t[0].length, r = []; e > ++n;)r[n] = 0; return r; } function ar(t) { for (var n, e = 1, r = 0, i = t[0][1], u = t.length; u > e; ++e)(n = t[e][1]) > i && (r = e, i = n); return r; } function or(t) { return t.reduce(cr, 0); } function cr(t, n) { return t + n[1]; } function lr(t, n) { return sr(t, Math.ceil(Math.log(n.length) / Math.LN2 + 1)); } function sr(t, n) { for (var e = -1, r = +t[0], i = (t[1] - r) / n, u = []; n >= ++e;)u[e] = i * e + r; return u; } function fr(t) { return [d3.min(t), d3.max(t)]; } function hr(t, n) { return d3.rebind(t, n, 'sort', 'children', 'value'), t.nodes = t, t.links = mr, t; } function dr(t) { return t.children; } function gr(t) { return t.value; } function pr(t, n) { return n.value - t.value; } function mr(t) { return d3.merge(t.map(t => (t.children || []).map(n => ({ source: t, target: n })))); } function vr(t, n) { return t.value - n.value; } function yr(t, n) { const e = t._pack_next; t._pack_next = n, n._pack_prev = t, n._pack_next = e, e._pack_prev = n; } function Mr(t, n) { t._pack_next = n, n._pack_prev = t; } function br(t, n) { const e = n.x - t.x; const r = n.y - t.y; const i = t.r + n.r; return i * i - e * e - r * r > 0.001; } function xr(t) { function n(t) { s = Math.min(t.x - t.r, s), f = Math.max(t.x + t.r, f), h = Math.min(t.y - t.r, h), d = Math.max(t.y + t.r, d); } if ((e = t.children) && (l = e.length)) { var e; let r; let i; let u; let a; let o; let c; var l; var s = 1 / 0; var f = -1 / 0; var h = 1 / 0; var d = -1 / 0; if (e.forEach(_r), r = e[0], r.x = -r.r, r.y = 0, n(r), l > 1 && (i = e[1], i.x = i.r, i.y = 0, n(i), l > 2)) for (u = e[2], kr(r, i, u), n(u), yr(r, u), r._pack_prev = u, yr(u, i), i = r._pack_next, a = 3; l > a; a++) { kr(r, i, u = e[a]); let g = 0; let p = 1; let m = 1; for (o = i._pack_next; o !== i; o = o._pack_next, p++) if (br(o, u)) { g = 1; break; } if (g == 1) for (c = r._pack_prev; c !== o._pack_prev && !br(c, u); c = c._pack_prev, m++);g ? (m > p || p == m && i.r < r.r ? Mr(r, i = o) : Mr(r = c, i), a--) : (yr(r, u), i = u, n(u)); } const v = (s + f) / 2; const y = (h + d) / 2; let M = 0; for (a = 0; l > a; a++)u = e[a], u.x -= v, u.y -= y, M = Math.max(M, u.r + Math.sqrt(u.x * u.x + u.y * u.y)); t.r = M, e.forEach(wr); } } function _r(t) { t._pack_next = t._pack_prev = t; } function wr(t) { delete t._pack_next, delete t._pack_prev; } function Sr(t, n, e, r) { const i = t.children; if (t.x = n += r * t.x, t.y = e += r * t.y, t.r *= r, i) for (let u = -1, a = i.length; a > ++u;)Sr(i[u], n, e, r); } function kr(t, n, e) { let r = t.r + e.r; const i = n.x - t.x; const u = n.y - t.y; if (r && (i || u)) { let a = n.r + e.r; const o = i * i + u * u; a *= a, r *= r; const c = 0.5 + (r - a) / (2 * o); const l = Math.sqrt(Math.max(0, 2 * a * (r + o) - (r -= o) * r - a * a)) / (2 * o); e.x = t.x + c * i + l * u, e.y = t.y + c * u - l * i; } else e.x = t.x + r, e.y = t.y; } function Er(t) { return 1 + d3.max(t, t => t.y); } function Ar(t) { return t.reduce((t, n) => t + n.x, 0) / t.length; } function Nr(t) { const n = t.children; return n && n.length ? Nr(n[0]) : t; } function Tr(t) { let n; const e = t.children; return e && (n = e.length) ? Tr(e[n - 1]) : t; } function qr(t, n) { return t.parent == n.parent ? 1 : 2; } function Cr(t) { const n = t.children; return n && n.length ? n[0] : t._tree.thread; } function zr(t) { let n; const e = t.children; return e && (n = e.length) ? e[n - 1] : t._tree.thread; } function Dr(t, n) { const e = t.children; if (e && (i = e.length)) for (var r, i, u = -1; i > ++u;)n(r = Dr(e[u], n), t) > 0 && (t = r); return t; } function Lr(t, n) { return t.x - n.x; } function Fr(t, n) { return n.x - t.x; } function Hr(t, n) { return t.depth - n.depth; } function Rr(t, n) { function e(t, r) { const i = t.children; if (i && (a = i.length)) for (var u, a, o = null, c = -1; a > ++c;)u = i[c], e(u, o), o = u; n(t, r); }e(t, null); } function Pr(t) { for (var n, e = 0, r = 0, i = t.children, u = i.length; --u >= 0;)n = i[u]._tree, n.prelim += e, n.mod += e, e += n.shift + (r += n.change); } function jr(t, n, e) { t = t._tree, n = n._tree; const r = e / (n.number - t.number); t.change += r, n.change -= r, n.shift += e, n.prelim += e, n.mod += e; } function Or(t, n, e) { return t._tree.ancestor.parent == n.parent ? t._tree.ancestor : e; } function Yr(t) {
        return {
            x: t.x, y: t.y, dx: t.dx, dy: t.dy,
        };
    } function Ur(t, n) {
        let e = t.x + n[3]; let r = t.y + n[0]; let i = t.dx - n[1] - n[3]; let u = t.dy - n[0] - n[2]; return i < 0 && (e += i / 2, i = 0), u < 0 && (r += u / 2, u = 0), {
            x: e, y: r, dx: i, dy: u,
        };
    } function Ir(t, n) { function e(t, e) { return d3.xhr(t, n, e).response(r); } function r(t) { return e.parse(t.responseText); } function i(n) { return n.map(u).join(t); } function u(t) { return a.test(t) ? `"${t.replace(/\"/g, '""')}"` : t; } var a = RegExp(`["${t}\n]`); const o = t.charCodeAt(0); return e.parse = function (t) { let n; return e.parseRows(t, t => (n ? n(t) : (n = Function('d', `return {${t.map((t, n) => `${JSON.stringify(t)}: d[${n}]`).join(',')}}`), void 0))); }, e.parseRows = function (t, n) { function e() { if (s >= l) return a; if (i) return i = !1, u; const n = s; if (t.charCodeAt(n) === 34) { for (var e = n; l > e++;) if (t.charCodeAt(e) === 34) { if (t.charCodeAt(e + 1) !== 34) break; ++e; }s = e + 2; var r = t.charCodeAt(e + 1); return r === 13 ? (i = !0, t.charCodeAt(e + 2) === 10 && ++s) : r === 10 && (i = !0), t.substring(n + 1, e).replace(/""/g, '"'); } for (;l > s;) { var r = t.charCodeAt(s++); let c = 1; if (r === 10)i = !0; else if (r === 13)i = !0, t.charCodeAt(s) === 10 && (++s, ++c); else if (r !== o) continue; return t.substring(n, s - c); } return t.substring(n); } for (var r, i, u = {}, a = {}, c = [], l = t.length, s = 0, f = 0; (r = e()) !== a;) { for (var h = []; r !== u && r !== a;)h.push(r), r = e(); (!n || (h = n(h, f++))) && c.push(h); } return c; }, e.format = function (t) { return t.map(i).join('\n'); }, e; } function Vr(t, n) { no.hasOwnProperty(t.type) && no[t.type](t, n); } function Xr(t, n, e) { let r; let i = -1; const u = t.length - e; for (n.lineStart(); u > ++i;)r = t[i], n.point(r[0], r[1]); n.lineEnd(); } function Zr(t, n) { let e = -1; const r = t.length; for (n.polygonStart(); r > ++e;)Xr(t[e], n, 1); n.polygonEnd(); } function Br(t) { return [Math.atan2(t[1], t[0]), Math.asin(Math.max(-1, Math.min(1, t[2])))]; } function $r(t, n) { return Pu > Math.abs(t[0] - n[0]) && Pu > Math.abs(t[1] - n[1]); } function Jr(t) { const n = t[0]; const e = t[1]; const r = Math.cos(e); return [r * Math.cos(n), r * Math.sin(n), Math.sin(e)]; } function Gr(t, n) { return t[0] * n[0] + t[1] * n[1] + t[2] * n[2]; } function Kr(t, n) { return [t[1] * n[2] - t[2] * n[1], t[2] * n[0] - t[0] * n[2], t[0] * n[1] - t[1] * n[0]]; } function Wr(t, n) { t[0] += n[0], t[1] += n[1], t[2] += n[2]; } function Qr(t, n) { return [t[0] * n, t[1] * n, t[2] * n]; } function ti(t) { const n = Math.sqrt(t[0] * t[0] + t[1] * t[1] + t[2] * t[2]); t[0] /= n, t[1] /= n, t[2] /= n; } function ni(t) {
        function n(n) {
            function r(e, r) { e = t(e, r), n.point(e[0], e[1]); } function u() { s = 0 / 0, p.point = a, n.lineStart(); } function a(r, u) { const a = Jr([r, u]); const o = t(r, u); e(s, f, l, h, d, g, s = o[0], f = o[1], l = r, h = a[0], d = a[1], g = a[2], i, n), n.point(s, f); } function o() { p.point = r, n.lineEnd(); } function c() { let t; let r; let c; let m; let v; let y; let M; u(), p.point = function (n, e) { a(t = n, r = e), c = s, m = f, v = h, y = d, M = g, p.point = a; }, p.lineEnd = function () { e(s, f, l, h, d, g, c, m, t, v, y, M, i, n), p.lineEnd = o, o(); }; } let l; let s; let f; let h; let d; let g; var p = {
                point: r, lineStart: u, lineEnd: o, polygonStart() { n.polygonStart(), p.lineStart = c; }, polygonEnd() { n.polygonEnd(), p.lineStart = u; },
            }; return p;
        } function e(n, i, u, a, o, c, l, s, f, h, d, g, p, m) { const v = l - n; const y = s - i; const M = v * v + y * y; if (M > 4 * r && p--) { let b = a + h; let x = o + d; let _ = c + g; const w = Math.sqrt(b * b + x * x + _ * _); const S = Math.asin(_ /= w); const k = Pu > Math.abs(Math.abs(_) - 1) ? (u + f) / 2 : Math.atan2(x, b); const E = t(k, S); const A = E[0]; const N = E[1]; const T = A - n; const q = N - i; const C = y * T - v * q; (C * C / M > r || Math.abs((v * T + y * q) / M - 0.5) > 0.3) && (e(n, i, u, a, o, c, A, N, k, b /= w, x /= w, _, p, m), m.point(A, N), e(A, N, k, b, x, _, l, s, f, h, d, g, p, m)); } } var r = 0.5; var i = 16; return n.precision = function (t) { return arguments.length ? (i = (r = t * t) > 0 && 16, n) : Math.sqrt(r); }, n;
    } function ei(t, n) { function e(t, n) { const e = Math.sqrt(u - 2 * i * Math.sin(n)) / i; return [e * Math.sin(t *= i), a - e * Math.cos(t)]; } const r = Math.sin(t); var i = (r + Math.sin(n)) / 2; var u = 1 + r * (2 * i - r); var a = Math.sqrt(u) / i; return e.invert = function (t, n) { const e = a - n; return [Math.atan2(t, e) / i, Math.asin((u - (t * t + e * e) * i * i) / (2 * i))]; }, e; } function ri(t) {
        function n(t, n) { r > t && (r = t), t > u && (u = t), i > n && (i = n), n > a && (a = n); } function e() { o.point = o.lineEnd = Pn; } let r; let i; let u; let a; var o = {
            point: n, lineStart: Pn, lineEnd: Pn, polygonStart() { o.lineEnd = e; }, polygonEnd() { o.point = n; },
        }; return function (n) { return a = u = -(r = i = 1 / 0), d3.geo.stream(n, t(o)), [[r, i], [u, a]]; };
    } function ii(t, n) { if (!io) { ++uo, t *= ju; const e = Math.cos(n *= ju); ao += (e * Math.cos(t) - ao) / uo, oo += (e * Math.sin(t) - oo) / uo, co += (Math.sin(n) - co) / uo; } } function ui() { let t; let n; io = 1, ai(), io = 2; const e = lo.point; lo.point = function (r, i) { e(t = r, n = i); }, lo.lineEnd = function () { lo.point(t, n), oi(), lo.lineEnd = oi; }; } function ai() { function t(t, i) { t *= ju; const u = Math.cos(i *= ju); const a = u * Math.cos(t); const o = u * Math.sin(t); const c = Math.sin(i); var l = Math.atan2(Math.sqrt((l = e * c - r * o) * l + (l = r * a - n * c) * l + (l = n * o - e * a) * l), n * a + e * o + r * c); uo += l, ao += l * (n + (n = a)), oo += l * (e + (e = o)), co += l * (r + (r = c)); } let n; let e; let r; io > 1 || (io < 1 && (io = 1, uo = ao = oo = co = 0), lo.point = function (i, u) { i *= ju; const a = Math.cos(u *= ju); n = a * Math.cos(i), e = a * Math.sin(i), r = Math.sin(u), lo.point = t; }); } function oi() { lo.point = ii; } function ci(t, n) { const e = Math.cos(t); const r = Math.sin(t); return function (i, u, a, o) { i != null ? (i = li(e, i), u = li(e, u), (a > 0 ? u > i : i > u) && (i += 2 * a * Ru)) : (i = t + 2 * a * Ru, u = t); for (var c, l = a * n, s = i; a > 0 ? s > u : u > s; s -= l)o.point((c = Br([e, -r * Math.cos(s), -r * Math.sin(s)]))[0], c[1]); }; } function li(t, n) { const e = Jr(n); e[0] -= t, ti(e); const r = Math.acos(Math.max(-1, Math.min(1, -e[1]))); return ((-e[2] < 0 ? -r : r) + 2 * Math.PI - Pu) % (2 * Math.PI); } function si(t, n, e) {
        return function (r) {
            function i(n, e) { t(n, e) && r.point(n, e); } function u(t, n) { m.point(t, n); } function a() { v.point = u, m.lineStart(); } function o() { v.point = i, m.lineEnd(); } function c(t, n) { M.point(t, n), p.push([t, n]); } function l() { M.lineStart(), p = []; } function s() { c(p[0][0], p[0][1]), M.lineEnd(); let t; const n = M.clean(); const e = y.buffer(); var i = e.length; if (!i) return g = !0, d += mi(p, -1), p = null, void 0; if (p = null, 1 & n) { t = e[0], h += mi(t, 1); let u; var i = t.length - 1; let a = -1; for (r.lineStart(); i > ++a;)r.point((u = t[a])[0], u[1]); return r.lineEnd(), void 0; }i > 1 && 2 & n && e.push(e.pop().concat(e.shift())), f.push(e.filter(gi)); } let f; let h; let d; let g; let p; var m = n(r); var v = {
                point: i,
                lineStart: a,
                lineEnd: o,
                polygonStart() {
                    v.point = c, v.lineStart = l, v.lineEnd = s, g = !1, d = h = 0, f = [], r.polygonStart();
                },
                polygonEnd() { v.point = i, v.lineStart = a, v.lineEnd = o, f = d3.merge(f), f.length ? fi(f, e, r) : (-Pu > h || g && -Pu > d) && (r.lineStart(), e(null, null, 1, r), r.lineEnd()), r.polygonEnd(), f = null; },
                sphere() { r.polygonStart(), r.lineStart(), e(null, null, 1, r), r.lineEnd(), r.polygonEnd(); },
            }; var y = pi(); var M = n(y); return v;
        };
    } function fi(t, n, e) {
        const r = []; const i = []; if (t.forEach((t) => {
            const n = t.length; if (!(n <= 1)) {
                const e = t[0]; const u = t[n - 1]; let a = {
                    point: e, points: t, other: null, visited: !1, entry: !0, subject: !0,
                }; let o = {
                    point: e, points: [e], other: a, visited: !1, entry: !1, subject: !1,
                }; a.other = o, r.push(a), i.push(o), a = {
                    point: u, points: [u], other: null, visited: !1, entry: !1, subject: !0,
                }, o = {
                    point: u, points: [u], other: a, visited: !1, entry: !0, subject: !1,
                }, a.other = o, r.push(a), i.push(o);
            }
        }), i.sort(di), hi(r), hi(i), r.length) for (var u, a, o, c = r[0]; ;) { for (u = c; u.visited;) if ((u = u.next) === c) return; a = u.points, e.lineStart(); do { if (u.visited = u.other.visited = !0, u.entry) { if (u.subject) for (var l = 0; a.length > l; l++)e.point((o = a[l])[0], o[1]); else n(u.point, u.next.point, 1, e); u = u.next; } else { if (u.subject) { a = u.prev.points; for (var l = a.length; --l >= 0;)e.point((o = a[l])[0], o[1]); } else n(u.point, u.prev.point, -1, e); u = u.prev; }u = u.other, a = u.points; } while (!u.visited);e.lineEnd(); }
    } function hi(t) { if (n = t.length) { for (var n, e, r = 0, i = t[0]; n > ++r;)i.next = e = t[r], e.prev = i, i = e; i.next = e = t[0], e.prev = i; } } function di(t, n) { return ((t = t.point)[0] < 0 ? t[1] - Ru / 2 - Pu : Ru / 2 - t[1]) - ((n = n.point)[0] < 0 ? n[1] - Ru / 2 - Pu : Ru / 2 - n[1]); } function gi(t) { return t.length > 1; } function pi() {
        let t; let n = []; return {
            lineStart() { n.push(t = []); }, point(n, e) { t.push([n, e]); }, lineEnd: Pn, buffer() { const e = n; return n = [], t = null, e; },
        };
    } function mi(t, n) { if (!(e = t.length)) return 0; for (var e, r, i, u = 0, a = 0, o = t[0], c = o[0], l = o[1], s = Math.cos(l), f = Math.atan2(n * Math.sin(c) * s, Math.sin(l)), h = 1 - n * Math.cos(c) * s, d = f; e > ++u;)o = t[u], s = Math.cos(l = o[1]), r = Math.atan2(n * Math.sin(c = o[0]) * s, Math.sin(l)), i = 1 - n * Math.cos(c) * s, Pu > Math.abs(h - 2) && Pu > Math.abs(i - 2) || (Pu > Math.abs(i) || Pu > Math.abs(h) || (Pu > Math.abs(Math.abs(r - f) - Ru) ? i + h > 2 && (a += 4 * (r - f)) : a += Pu > Math.abs(h - 2) ? 4 * (r - d) : ((3 * Ru + r - f) % (2 * Ru) - Ru) * (h + i)), d = f, f = r, h = i); return a; } function vi(t) {
        let n; let e = 0 / 0; let r = 0 / 0; let i = 0 / 0; return {
            lineStart() { t.lineStart(), n = 1; }, point(u, a) { const o = u > 0 ? Ru : -Ru; const c = Math.abs(u - e); Pu > Math.abs(c - Ru) ? (t.point(e, r = (r + a) / 2 > 0 ? Ru / 2 : -Ru / 2), t.point(i, r), t.lineEnd(), t.lineStart(), t.point(o, r), t.point(u, r), n = 0) : i !== o && c >= Ru && (Pu > Math.abs(e - i) && (e -= i * Pu), Pu > Math.abs(u - o) && (u -= o * Pu), r = yi(e, r, u, a), t.point(i, r), t.lineEnd(), t.lineStart(), t.point(o, r), n = 0), t.point(e = u, r = a), i = o; }, lineEnd() { t.lineEnd(), e = r = 0 / 0; }, clean() { return 2 - n; },
        };
    } function yi(t, n, e, r) { let i; let u; const a = Math.sin(t - e); return Math.abs(a) > Pu ? Math.atan((Math.sin(n) * (u = Math.cos(r)) * Math.sin(e) - Math.sin(r) * (i = Math.cos(n)) * Math.sin(t)) / (i * u * a)) : (n + r) / 2; } function Mi(t, n, e, r) { let i; if (t == null)i = e * Ru / 2, r.point(-Ru, i), r.point(0, i), r.point(Ru, i), r.point(Ru, 0), r.point(Ru, -i), r.point(0, -i), r.point(-Ru, -i), r.point(-Ru, 0), r.point(-Ru, i); else if (Math.abs(t[0] - n[0]) > Pu) { const u = (t[0] < n[0] ? 1 : -1) * Ru; i = e * u / 2, r.point(-u, i), r.point(0, i), r.point(u, i); } else r.point(n[0], n[1]); } function bi(t) {
        function n(t, n) { return Math.cos(t) * Math.cos(n) > u; } function e(t) {
            let e; let i; let u; let a; return {
                lineStart() { u = i = !1, a = 1; }, point(o, c) { let l; const s = [o, c]; let f = n(o, c); !e && (u = i = f) && t.lineStart(), f !== i && (l = r(e, s), ($r(e, l) || $r(s, l)) && (s[0] += Pu, s[1] += Pu, f = n(s[0], s[1]))), f !== i && (a = 0, (i = f) ? (t.lineStart(), l = r(s, e), t.point(l[0], l[1])) : (l = r(e, s), t.point(l[0], l[1]), t.lineEnd()), e = l), !f || e && $r(e, s) || t.point(s[0], s[1]), e = s; }, lineEnd() { i && t.lineEnd(), e = null; }, clean() { return a | (u && i) << 1; },
            };
        } function r(t, n) { const e = Jr(t, 0); const r = Jr(n, 0); const i = [1, 0, 0]; const a = Kr(e, r); const o = Gr(a, a); const c = a[0]; const l = o - c * c; if (!l) return t; const s = u * o / l; const f = -u * c / l; const h = Kr(i, a); const d = Qr(i, s); const g = Qr(a, f); Wr(d, g); const p = h; const m = Gr(d, p); const v = Gr(p, p); const y = Math.sqrt(m * m - v * (Gr(d, d) - 1)); const M = Qr(p, (-m - y) / v); return Wr(M, d), Br(M); } const i = t * ju; var u = Math.cos(i); const a = ci(i, 6 * ju); return si(n, e, a);
    } function xi(t, n) { function e(e, r) { return e = t(e, r), n(e[0], e[1]); } return t.invert && n.invert && (e.invert = function (e, r) { return e = n.invert(e, r), e && t.invert(e[0], e[1]); }), e; } function _i(t, n) { return [t, n]; } function wi(t, n, e) { const r = d3.range(t, n - Pu, e).concat(n); return function (t) { return r.map(n => [t, n]); }; } function Si(t, n, e) { const r = d3.range(t, n - Pu, e).concat(n); return function (t) { return r.map(n => [n, t]); }; } function ki(t, n, e, r) { function i(t) { const n = Math.sin(t *= d) * g; const e = Math.sin(d - t) * g; const r = e * l + n * f; const i = e * s + n * h; const u = e * a + n * c; return [Math.atan2(i, r) / ju, Math.atan2(u, Math.sqrt(r * r + i * i)) / ju]; } const u = Math.cos(n); var a = Math.sin(n); const o = Math.cos(r); var c = Math.sin(r); var l = u * Math.cos(t); var s = u * Math.sin(t); var f = o * Math.cos(e); var h = o * Math.sin(e); var d = Math.acos(Math.max(-1, Math.min(1, a * c + u * o * Math.cos(e - t)))); var g = 1 / Math.sin(d); return i.distance = d, i; } function Ei(t, n) { return [t / (2 * Ru), Math.max(-0.5, Math.min(0.5, Math.log(Math.tan(Ru / 4 + n / 2)) / (2 * Ru)))]; } function Ai(t) { return `m0,${t}a${t},${t} 0 1,1 0,${-2 * t}a${t},${t} 0 1,1 0,${2 * t}z`; } function Ni(t) {
        const n = ni((n, e) => t([n * Ou, e * Ou])); return function (t) {
            return t = n(t), {
                point(n, e) { t.point(n * ju, e * ju); }, sphere() { t.sphere(); }, lineStart() { t.lineStart(); }, lineEnd() { t.lineEnd(); }, polygonStart() { t.polygonStart(); }, polygonEnd() { t.polygonEnd(); },
            };
        };
    } function Ti() {
        function t(t, n) { a.push('M', t, ',', n, u); } function n(t, n) { a.push('M', t, ',', n), o.point = e; } function e(t, n) { a.push('L', t, ',', n); } function r() { o.point = t; } function i() { a.push('Z'); } var u = Ai(4.5); var a = []; var o = {
            point: t, lineStart() { o.point = n; }, lineEnd: r, polygonStart() { o.lineEnd = i; }, polygonEnd() { o.lineEnd = r, o.point = t; }, pointRadius(t) { return u = Ai(t), o; }, result() { if (a.length) { const t = a.join(''); return a = [], t; } },
        }; return o;
    } function qi(t) {
        function n(n, e) { t.moveTo(n, e), t.arc(n, e, a, 0, 2 * Ru); } function e(n, e) { t.moveTo(n, e), o.point = r; } function r(n, e) { t.lineTo(n, e); } function i() { o.point = n; } function u() { t.closePath(); } var a = 4.5; var o = {
            point: n, lineStart() { o.point = e; }, lineEnd: i, polygonStart() { o.lineEnd = u; }, polygonEnd() { o.lineEnd = i, o.point = n; }, pointRadius(t) { return a = t, o; }, result: Pn,
        }; return o;
    } function Ci() { function t(t, n) { po += i * t - r * n, r = t, i = n; } let n; let e; let r; let i; mo.point = function (u, a) { mo.point = t, n = r = u, e = i = a; }, mo.lineEnd = function () { t(n, e); }; } function zi(t, n) { io || (ao += t, oo += n, ++co); } function Di() { function t(t, r) { const i = t - n; const u = r - e; const a = Math.sqrt(i * i + u * u); ao += a * (n + t) / 2, oo += a * (e + r) / 2, co += a, n = t, e = r; } let n; let e; if (io !== 1) { if (!(io < 1)) return; io = 1, ao = oo = co = 0; }vo.point = function (r, i) { vo.point = t, n = r, e = i; }; } function Li() { vo.point = zi; } function Fi() { function t(t, n) { const e = i * t - r * n; ao += e * (r + t), oo += e * (i + n), co += 3 * e, r = t, i = n; } let n; let e; let r; let i; io < 2 && (io = 2, ao = oo = co = 0), vo.point = function (u, a) { vo.point = t, n = r = u, e = i = a; }, vo.lineEnd = function () { t(n, e); }; } function Hi() { function t(t, n) { if (t *= ju, n *= ju, !(Pu > Math.abs(Math.abs(u) - Ru / 2) && Pu > Math.abs(Math.abs(n) - Ru / 2))) { const e = Math.cos(n); const c = Math.sin(n); if (Pu > Math.abs(u - Ru / 2))Mo += 2 * (t - r); else { const l = t - i; const s = Math.cos(l); var f = Math.atan2(Math.sqrt((f = e * Math.sin(l)) * f + (f = a * c - o * e * s) * f), o * c + a * e * s); const h = (f + Ru + u + n) / 4; Mo += (l < 0 && l > -Ru || l > Ru ? -4 : 4) * Math.atan(Math.sqrt(Math.abs(Math.tan(h) * Math.tan(h - f / 2) * Math.tan(h - Ru / 4 - u / 2) * Math.tan(h - Ru / 4 - n / 2)))); }r = i, i = t, u = n, a = e, o = c; } } let n; let e; let r; let i; let u; let a; let o; bo.point = function (c, l) { bo.point = t, r = i = (n = c) * ju, u = (e = l) * ju, a = Math.cos(u), o = Math.sin(u); }, bo.lineEnd = function () { t(n, e); }; } function Ri(t) { return Pi(() => t)(); } function Pi(t) { function n(t) { return t = a(t[0] * ju, t[1] * ju), [t[0] * s + o, c - t[1] * s]; } function e(t) { return t = a.invert((t[0] - o) / s, (c - t[1]) / s), t && [t[0] * Ou, t[1] * Ou]; } function r() { a = xi(u = Oi(p, m, v), i); const t = i(d, g); return o = f - t[0] * s, c = h + t[1] * s, n; } let i; let u; let a; let o; let c; const l = ni((t, n) => t = i(t, n), [t[0] * s + o, c - t[1] * s]); var s = 150; var f = 480; var h = 250; var d = 0; var g = 0; var p = 0; var m = 0; var v = 0; let y = so; let M = null; return n.stream = function (t) { return ji(u, y(l(t))); }, n.clipAngle = function (t) { return arguments.length ? (y = t == null ? (M = t, so) : bi(M = +t), n) : M; }, n.scale = function (t) { return arguments.length ? (s = +t, r()) : s; }, n.translate = function (t) { return arguments.length ? (f = +t[0], h = +t[1], r()) : [f, h]; }, n.center = function (t) { return arguments.length ? (d = t[0] % 360 * ju, g = t[1] % 360 * ju, r()) : [d * Ou, g * Ou]; }, n.rotate = function (t) { return arguments.length ? (p = t[0] % 360 * ju, m = t[1] % 360 * ju, v = t.length > 2 ? t[2] % 360 * ju : 0, r()) : [p * Ou, m * Ou, v * Ou]; }, d3.rebind(n, l, 'precision'), function () { return i = t.apply(this, arguments), n.invert = i.invert && e, r(); }; } function ji(t, n) {
        return {
            point(e, r) { r = t(e * ju, r * ju), e = r[0], n.point(e > Ru ? e - 2 * Ru : -Ru > e ? e + 2 * Ru : e, r[1]); }, sphere() { n.sphere(); }, lineStart() { n.lineStart(); }, lineEnd() { n.lineEnd(); }, polygonStart() { n.polygonStart(); }, polygonEnd() { n.polygonEnd(); },
        };
    } function Oi(t, n, e) { return t ? n || e ? xi(Ui(t), Ii(n, e)) : Ui(t) : n || e ? Ii(n, e) : _i; } function Yi(t) { return function (n, e) { return n += t, [n > Ru ? n - 2 * Ru : -Ru > n ? n + 2 * Ru : n, e]; }; } function Ui(t) { const n = Yi(t); return n.invert = Yi(-t), n; } function Ii(t, n) { function e(t, n) { const e = Math.cos(n); const o = Math.cos(t) * e; const c = Math.sin(t) * e; const l = Math.sin(n); const s = l * r + o * i; return [Math.atan2(c * u - s * a, o * r - l * i), Math.asin(Math.max(-1, Math.min(1, s * u + c * a)))]; } var r = Math.cos(t); var i = Math.sin(t); var u = Math.cos(n); var a = Math.sin(n); return e.invert = function (t, n) { const e = Math.cos(n); const o = Math.cos(t) * e; const c = Math.sin(t) * e; const l = Math.sin(n); const s = l * u - c * a; return [Math.atan2(c * u + l * a, o * r + s * i), Math.asin(Math.max(-1, Math.min(1, s * r - o * i)))]; }, e; } function Vi(t, n) { function e(n, e) { const r = Math.cos(n); const i = Math.cos(e); const u = t(r * i); return [u * i * Math.sin(n), u * Math.sin(e)]; } return e.invert = function (t, e) { const r = Math.sqrt(t * t + e * e); const i = n(r); const u = Math.sin(i); const a = Math.cos(i); return [Math.atan2(t * u, r * a), Math.asin(r && e * u / r)]; }, e; } function Xi(t, n, e, r) { let i; let u; let a; let o; let c; let l; let s; return i = r[t], u = i[0], a = i[1], i = r[n], o = i[0], c = i[1], i = r[e], l = i[0], s = i[1], (s - a) * (o - u) - (c - a) * (l - u) > 0; } function Zi(t, n, e) { return (e[0] - n[0]) * (t[1] - n[1]) < (e[1] - n[1]) * (t[0] - n[0]); } function Bi(t, n, e, r) { const i = t[0]; const u = e[0]; const a = n[0] - i; const o = r[0] - u; const c = t[1]; const l = e[1]; const s = n[1] - c; const f = r[1] - l; const h = (o * (c - l) - f * (i - u)) / (f * a - o * s); return [i + h * a, c + h * s]; } function $i(t, n) {
        const e = { list: t.map((t, n) => ({ index: n, x: t[0], y: t[1] })).sort((t, n) => (t.y < n.y ? -1 : t.y > n.y ? 1 : t.x < n.x ? -1 : t.x > n.x ? 1 : 0)), bottomSite: null }; var r = {
            list: [],
            leftEnd: null,
            rightEnd: null,
            init() { r.leftEnd = r.createHalfEdge(null, 'l'), r.rightEnd = r.createHalfEdge(null, 'l'), r.leftEnd.r = r.rightEnd, r.rightEnd.l = r.leftEnd, r.list.unshift(r.leftEnd, r.rightEnd); },
            createHalfEdge(t, n) {
                return {
                    edge: t, side: n, vertex: null, l: null, r: null,
                };
            },
            insert(t, n) { n.l = t, n.r = t.r, t.r.l = n, t.r = n; },
            leftBound(t) { let n = r.leftEnd; do n = n.r; while (n != r.rightEnd && i.rightOf(n, t));return n = n.l; },
            del(t) { t.l.r = t.r, t.r.l = t.l, t.edge = null; },
            right(t) { return t.r; },
            left(t) { return t.l; },
            leftRegion(t) { return t.edge == null ? e.bottomSite : t.edge.region[t.side]; },
            rightRegion(t) { return t.edge == null ? e.bottomSite : t.edge.region[_o[t.side]]; },
        }; var i = {
            bisect(t, n) { const e = { region: { l: t, r: n }, ep: { l: null, r: null } }; const r = n.x - t.x; const i = n.y - t.y; const u = r > 0 ? r : -r; const a = i > 0 ? i : -i; return e.c = t.x * r + t.y * i + 0.5 * (r * r + i * i), u > a ? (e.a = 1, e.b = i / r, e.c /= r) : (e.b = 1, e.a = r / i, e.c /= i), e; }, intersect(t, n) { const e = t.edge; const r = n.edge; if (!e || !r || e.region.r == r.region.r) return null; const i = e.a * r.b - e.b * r.a; if (Math.abs(i) < 1e-10) return null; let u; let a; const o = (e.c * r.b - r.c * e.b) / i; const c = (r.c * e.a - e.c * r.a) / i; const l = e.region.r; const s = r.region.r; l.y < s.y || l.y == s.y && l.x < s.x ? (u = t, a = e) : (u = n, a = r); const f = o >= a.region.r.x; return f && u.side === 'l' || !f && u.side === 'r' ? null : { x: o, y: c }; }, rightOf(t, n) { const e = t.edge; const r = e.region.r; const i = n.x > r.x; if (i && t.side === 'l') return 1; if (!i && t.side === 'r') return 0; if (e.a === 1) { const u = n.y - r.y; const a = n.x - r.x; let o = 0; var c = 0; if (!i && e.b < 0 || i && e.b >= 0 ? c = o = u >= e.b * a : (c = n.x + n.y * e.b > e.c, e.b < 0 && (c = !c), c || (o = 1)), !o) { const l = r.x - e.region.l.x; c = e.b * (a * a - u * u) < l * u * (1 + 2 * a / l + e.b * e.b), e.b < 0 && (c = !c); } } else { const s = e.c - e.a * n.x; const f = n.y - s; const h = n.x - r.x; const d = s - r.y; c = f * f > h * h + d * d; } return t.side === 'l' ? c : !c; }, endPoint(t, e, r) { t.ep[e] = r, t.ep[_o[e]] && n(t); }, distance(t, n) { const e = t.x - n.x; const r = t.y - n.y; return Math.sqrt(e * e + r * r); },
        }; var u = {
            list: [], insert(t, n, e) { t.vertex = n, t.ystar = n.y + e; for (var r = 0, i = u.list, a = i.length; a > r; r++) { const o = i[r]; if (!(t.ystar > o.ystar || t.ystar == o.ystar && n.x > o.vertex.x)) break; }i.splice(r, 0, t); }, del(t) { for (var n = 0, e = u.list, r = e.length; r > n && e[n] != t; ++n);e.splice(n, 1); }, empty() { return u.list.length === 0; }, nextEvent(t) { for (let n = 0, e = u.list, r = e.length; r > n; ++n) if (e[n] == t) return e[n + 1]; return null; }, min() { const t = u.list[0]; return { x: t.vertex.x, y: t.ystar }; }, extractMin() { return u.list.shift(); },
        }; r.init(), e.bottomSite = e.list.shift(); for (var a, o, c, l, s, f, h, d, g, p, m, v, y, M = e.list.shift(); ;) if (u.empty() || (a = u.min()), M && (u.empty() || M.y < a.y || M.y == a.y && M.x < a.x))o = r.leftBound(M), c = r.right(o), h = r.rightRegion(o), v = i.bisect(h, M), f = r.createHalfEdge(v, 'l'), r.insert(o, f), p = i.intersect(o, f), p && (u.del(o), u.insert(o, p, i.distance(p, M))), o = f, f = r.createHalfEdge(v, 'r'), r.insert(o, f), p = i.intersect(f, c), p && u.insert(f, p, i.distance(p, M)), M = e.list.shift(); else { if (u.empty()) break; o = u.extractMin(), l = r.left(o), c = r.right(o), s = r.right(c), h = r.leftRegion(o), d = r.rightRegion(c), m = o.vertex, i.endPoint(o.edge, o.side, m), i.endPoint(c.edge, c.side, m), r.del(o), u.del(c), r.del(c), y = 'l', h.y > d.y && (g = h, h = d, d = g, y = 'r'), v = i.bisect(h, d), f = r.createHalfEdge(v, y), r.insert(l, f), i.endPoint(v, _o[y], m), p = i.intersect(l, f), p && (u.del(l), u.insert(l, p, i.distance(p, h))), p = i.intersect(f, s), p && u.insert(f, p, i.distance(p, h)); } for (o = r.right(r.leftEnd); o != r.rightEnd; o = r.right(o))n(o.edge);
    } function Ji() { return { leaf: !0, nodes: [], point: null }; } function Gi(t, n, e, r, i, u) { if (!t(n, e, r, i, u)) { const a = 0.5 * (e + i); const o = 0.5 * (r + u); const c = n.nodes; c[0] && Gi(t, c[0], e, r, a, o), c[1] && Gi(t, c[1], a, r, i, o), c[2] && Gi(t, c[2], e, o, a, u), c[3] && Gi(t, c[3], a, o, i, u); } } function Ki() { this._ = new Date(arguments.length > 1 ? Date.UTC.apply(this, arguments) : arguments[0]); } function Wi(t, n, e, r) { for (var i, u, a = 0, o = n.length, c = e.length; o > a;) { if (r >= c) return -1; if (i = n.charCodeAt(a++), i === 37) { if (u = Yo[n.charAt(a++)], !u || (r = u(t, e, r)) < 0) return -1; } else if (i != e.charCodeAt(r++)) return -1; } return r; } function Qi(t) { return RegExp(`^(?:${t.map(d3.requote).join('|')})`, 'i'); } function tu(t) { for (var n = new u(), e = -1, r = t.length; r > ++e;)n.set(t[e].toLowerCase(), e); return n; } function nu(t, n, e) { t += ''; const r = t.length; return e > r ? Array(e - r + 1).join(n) + t : t; } function eu(t, n, e) { Lo.lastIndex = 0; const r = Lo.exec(n.substring(e)); return r ? e += r[0].length : -1; } function ru(t, n, e) { Do.lastIndex = 0; const r = Do.exec(n.substring(e)); return r ? e += r[0].length : -1; } function iu(t, n, e) { Ro.lastIndex = 0; const r = Ro.exec(n.substring(e)); return r ? (t.m = Po.get(r[0].toLowerCase()), e += r[0].length) : -1; } function uu(t, n, e) { Fo.lastIndex = 0; const r = Fo.exec(n.substring(e)); return r ? (t.m = Ho.get(r[0].toLowerCase()), e += r[0].length) : -1; } function au(t, n, e) { return Wi(t, `${Oo.c}`, n, e); } function ou(t, n, e) { return Wi(t, `${Oo.x}`, n, e); } function cu(t, n, e) { return Wi(t, `${Oo.X}`, n, e); } function lu(t, n, e) { Uo.lastIndex = 0; const r = Uo.exec(n.substring(e, e + 4)); return r ? (t.y = +r[0], e += r[0].length) : -1; } function su(t, n, e) { Uo.lastIndex = 0; const r = Uo.exec(n.substring(e, e + 2)); return r ? (t.y = fu(+r[0]), e += r[0].length) : -1; } function fu(t) { return t + (t > 68 ? 1900 : 2e3); } function hu(t, n, e) { Uo.lastIndex = 0; const r = Uo.exec(n.substring(e, e + 2)); return r ? (t.m = r[0] - 1, e += r[0].length) : -1; } function du(t, n, e) { Uo.lastIndex = 0; const r = Uo.exec(n.substring(e, e + 2)); return r ? (t.d = +r[0], e += r[0].length) : -1; } function gu(t, n, e) { Uo.lastIndex = 0; const r = Uo.exec(n.substring(e, e + 2)); return r ? (t.H = +r[0], e += r[0].length) : -1; } function pu(t, n, e) { Uo.lastIndex = 0; const r = Uo.exec(n.substring(e, e + 2)); return r ? (t.M = +r[0], e += r[0].length) : -1; } function mu(t, n, e) { Uo.lastIndex = 0; const r = Uo.exec(n.substring(e, e + 2)); return r ? (t.S = +r[0], e += r[0].length) : -1; } function vu(t, n, e) { Uo.lastIndex = 0; const r = Uo.exec(n.substring(e, e + 3)); return r ? (t.L = +r[0], e += r[0].length) : -1; } function yu(t, n, e) { const r = Io.get(n.substring(e, e += 2).toLowerCase()); return r == null ? -1 : (t.p = r, e); } function Mu(t) { const n = t.getTimezoneOffset(); const e = n > 0 ? '-' : '+'; const r = ~~(Math.abs(n) / 60); const i = Math.abs(n) % 60; return e + nu(r, '0', 2) + nu(i, '0', 2); } function bu(t) { return t.toISOString(); } function xu(t, n, e) { function r(n) { const e = t(n); const r = u(e, 1); return r - n > n - e ? e : r; } function i(e) { return n(e = t(new wo(e - 1)), 1), e; } function u(t, e) { return n(t = new wo(+t), e), t; } function a(t, r, u) { const a = i(t); const o = []; if (u > 1) for (;r > a;)e(a) % u || o.push(new Date(+a)), n(a, 1); else for (;r > a;)o.push(new Date(+a)), n(a, 1); return o; } function o(t, n, e) { try { wo = Ki; const r = new Ki(); return r._ = t, a(r, n, e); } finally { wo = Date; } }t.floor = t, t.round = r, t.ceil = i, t.offset = u, t.range = a; const c = t.utc = _u(t); return c.floor = c, c.round = _u(r), c.ceil = _u(i), c.offset = _u(u), c.range = o, t; } function _u(t) { return function (n, e) { try { wo = Ki; const r = new Ki(); return r._ = n, t(r, e)._; } finally { wo = Date; } }; } function wu(t, n, e) { function r(n) { return t(n); } return r.invert = function (n) { return ku(t.invert(n)); }, r.domain = function (n) { return arguments.length ? (t.domain(n), r) : t.domain().map(ku); }, r.nice = function (t) { return r.domain(Yn(r.domain(), () => t)); }, r.ticks = function (e, i) { const u = Su(r.domain()); if (typeof e !== 'function') { const a = u[1] - u[0]; const o = a / e; let c = d3.bisect(Xo, o); if (c == Xo.length) return n.year(u, e); if (!c) return t.ticks(e).map(ku); Math.log(o / Xo[c - 1]) < Math.log(Xo[c] / o) && --c, e = n[c], i = e[1], e = e[0].range; } return e(u[0], new Date(+u[1] + 1), i); }, r.tickFormat = function () { return e; }, r.copy = function () { return wu(t.copy(), n, e); }, d3.rebind(r, t, 'range', 'rangeRound', 'interpolate', 'clamp'); } function Su(t) { const n = t[0]; const e = t[t.length - 1]; return e > n ? [n, e] : [e, n]; } function ku(t) { return new Date(t); } function Eu(t) { return function (n) { for (var e = t.length - 1, r = t[e]; !r[1](n);)r = t[--e]; return r[0](n); }; } function Au(t) { const n = new Date(t, 0, 1); return n.setFullYear(t), n; } function Nu(t) { const n = t.getFullYear(); const e = Au(n); const r = Au(n + 1); return n + (t - e) / (r - e); } function Tu(t) { const n = new Date(Date.UTC(t, 0, 1)); return n.setUTCFullYear(t), n; } function qu(t) { const n = t.getUTCFullYear(); const e = Tu(n); const r = Tu(n + 1); return n + (t - e) / (r - e); } const Cu = '.'; const zu = ','; const Du = [3, 3]; Date.now || (Date.now = function () { return +new Date(); }); try { document.createElement('div').style.setProperty('opacity', 0, ''); } catch (Lu) { const Fu = CSSStyleDeclaration.prototype; const Hu = Fu.setProperty; Fu.setProperty = function (t, n, e) { Hu.call(this, t, `${n}`, e); }; }d3 = { version: '3.0.3' }; var Ru = Math.PI; var Pu = 1e-6; var ju = Ru / 180; var Ou = 180 / Ru; var Yu = i; try { Yu(document.documentElement.childNodes)[0].nodeType; } catch (Uu) { Yu = r; } var Iu = [].__proto__ ? function (t, n) { t.__proto__ = n; } : function (t, n) { for (const e in n)t[e] = n[e]; }; d3.map = function (t) { const n = new u(); for (const e in t)n.set(e, t[e]); return n; }, e(u, {
        has(t) { return Vu + t in this; }, get(t) { return this[Vu + t]; }, set(t, n) { return this[Vu + t] = n; }, remove(t) { return t = Vu + t, t in this && delete this[t]; }, keys() { const t = []; return this.forEach((n) => { t.push(n); }), t; }, values() { const t = []; return this.forEach((n, e) => { t.push(e); }), t; }, entries() { const t = []; return this.forEach((n, e) => { t.push({ key: n, value: e }); }), t; }, forEach(t) { for (const n in this)n.charCodeAt(0) === Xu && t.call(this, n.substring(1), this[n]); },
    }); var Vu = '\0'; var Xu = Vu.charCodeAt(0); d3.functor = c, d3.rebind = function (t, n) { for (var e, r = 1, i = arguments.length; i > ++r;)t[e = arguments[r]] = l(t, n, n[e]); return t; }, d3.ascending = function (t, n) { return n > t ? -1 : t > n ? 1 : t >= n ? 0 : 0 / 0; }, d3.descending = function (t, n) { return t > n ? -1 : n > t ? 1 : n >= t ? 0 : 0 / 0; }, d3.mean = function (t, n) { let e; const r = t.length; let i = 0; let u = -1; let a = 0; if (arguments.length === 1) for (;r > ++u;)s(e = t[u]) && (i += (e - i) / ++a); else for (;r > ++u;)s(e = n.call(t, t[u], u)) && (i += (e - i) / ++a); return a ? i : void 0; }, d3.median = function (t, n) { return arguments.length > 1 && (t = t.map(n)), t = t.filter(s), t.length ? d3.quantile(t.sort(d3.ascending), 0.5) : void 0; }, d3.min = function (t, n) { let e; let r; let i = -1; const u = t.length; if (arguments.length === 1) { for (;u > ++i && ((e = t[i]) == null || e != e);)e = void 0; for (;u > ++i;)(r = t[i]) != null && e > r && (e = r); } else { for (;u > ++i && ((e = n.call(t, t[i], i)) == null || e != e);)e = void 0; for (;u > ++i;)(r = n.call(t, t[i], i)) != null && e > r && (e = r); } return e; }, d3.max = function (t, n) { let e; let r; let i = -1; const u = t.length; if (arguments.length === 1) { for (;u > ++i && ((e = t[i]) == null || e != e);)e = void 0; for (;u > ++i;)(r = t[i]) != null && r > e && (e = r); } else { for (;u > ++i && ((e = n.call(t, t[i], i)) == null || e != e);)e = void 0; for (;u > ++i;)(r = n.call(t, t[i], i)) != null && r > e && (e = r); } return e; }, d3.extent = function (t, n) { let e; let r; let i; let u = -1; const a = t.length; if (arguments.length === 1) { for (;a > ++u && ((e = i = t[u]) == null || e != e);)e = i = void 0; for (;a > ++u;)(r = t[u]) != null && (e > r && (e = r), r > i && (i = r)); } else { for (;a > ++u && ((e = i = n.call(t, t[u], u)) == null || e != e);)e = void 0; for (;a > ++u;)(r = n.call(t, t[u], u)) != null && (e > r && (e = r), r > i && (i = r)); } return [e, i]; }, d3.random = { normal(t, n) { const e = arguments.length; return e < 2 && (n = 1), e < 1 && (t = 0), function () { let e; let r; let i; do e = 2 * Math.random() - 1, r = 2 * Math.random() - 1, i = e * e + r * r; while (!i || i > 1);return t + n * e * Math.sqrt(-2 * Math.log(i) / i); }; }, logNormal(t, n) { const e = arguments.length; e < 2 && (n = 1), e < 1 && (t = 0); const r = d3.random.normal(); return function () { return Math.exp(t + n * r()); }; }, irwinHall(t) { return function () { for (var n = 0, e = 0; t > e; e++)n += Math.random(); return n / t; }; } }, d3.sum = function (t, n) { let e; let r = 0; const i = t.length; let u = -1; if (arguments.length === 1) for (;i > ++u;)isNaN(e = +t[u]) || (r += e); else for (;i > ++u;)isNaN(e = +n.call(t, t[u], u)) || (r += e); return r; }, d3.quantile = function (t, n) { const e = (t.length - 1) * n + 1; const r = Math.floor(e); const i = +t[r - 1]; const u = e - r; return u ? i + u * (t[r] - i) : i; }, d3.shuffle = function (t) { for (var n, e, r = t.length; r;)e = 0 | Math.random() * r--, n = t[r], t[r] = t[e], t[e] = n; return t; }, d3.transpose = function (t) { return d3.zip(...t); }, d3.zip = function () { if (!(r = arguments.length)) return []; for (var t = -1, n = d3.min(arguments, f), e = Array(n); n > ++t;) for (var r, i = -1, u = e[t] = Array(r); r > ++i;)u[i] = arguments[i][t]; return e; }, d3.bisector = function (t) { return { left(n, e, r, i) { for (arguments.length < 3 && (r = 0), arguments.length < 4 && (i = n.length); i > r;) { const u = r + i >>> 1; e > t.call(n, n[u], u) ? r = u + 1 : i = u; } return r; }, right(n, e, r, i) { for (arguments.length < 3 && (r = 0), arguments.length < 4 && (i = n.length); i > r;) { const u = r + i >>> 1; t.call(n, n[u], u) > e ? i = u : r = u + 1; } return r; } }; }; const Zu = d3.bisector(t => t); d3.bisectLeft = Zu.left, d3.bisect = d3.bisectRight = Zu.right, d3.nest = function () { function t(n, o) { if (o >= a.length) return r ? r.call(i, n) : e ? n.sort(e) : n; for (var c, l, s, f = -1, h = n.length, d = a[o++], g = new u(), p = {}; h > ++f;)(s = g.get(c = d(l = n[f]))) ? s.push(l) : g.set(c, [l]); return g.forEach((n, e) => { p[n] = t(e, o); }), p; } function n(t, e) { if (e >= a.length) return t; let r; const i = []; const u = o[e++]; for (r in t)i.push({ key: r, values: n(t[r], e) }); return u && i.sort((t, n) => u(t.key, n.key)), i; } let e; let r; var i = {}; var a = []; var o = []; return i.map = function (n) { return t(n, 0); }, i.entries = function (e) { return n(t(e, 0), 0); }, i.key = function (t) { return a.push(t), i; }, i.sortKeys = function (t) { return o[a.length - 1] = t, i; }, i.sortValues = function (t) { return e = t, i; }, i.rollup = function (t) { return r = t, i; }, i; }, d3.keys = function (t) { const n = []; for (const e in t)n.push(e); return n; }, d3.values = function (t) { const n = []; for (const e in t)n.push(t[e]); return n; }, d3.entries = function (t) { const n = []; for (const e in t)n.push({ key: e, value: t[e] }); return n; }, d3.permute = function (t, n) { for (var e = [], r = -1, i = n.length; i > ++r;)e[r] = t[n[r]]; return e; }, d3.merge = function (t) { return Array.prototype.concat.apply([], t); }, d3.range = function (t, n, e) { if (arguments.length < 3 && (e = 1, arguments.length < 2 && (n = t, t = 0)), 1 / 0 === (n - t) / e) throw Error('infinite range'); let r; const i = []; const u = d(Math.abs(e)); let a = -1; if (t *= u, n *= u, e *= u, e < 0) for (;(r = t + e * ++a) > n;)i.push(r / u); else for (;n > (r = t + e * ++a);)i.push(r / u); return i; }, d3.requote = function (t) { return t.replace(Bu, '\\$&'); }; var Bu = /[\\\^\$\*\+\?\|\[\]\(\)\.\{\}]/g; d3.round = function (t, n) { return n ? Math.round(t * (n = Math.pow(10, n))) / n : Math.round(t); }, d3.xhr = function (t, n, e) { function r() { const t = l.status; !t && l.responseText || t >= 200 && t < 300 || t === 304 ? u.load.call(i, c.call(i, l)) : u.error.call(i, l); } var i = {}; var u = d3.dispatch('progress', 'load', 'error'); const o = {}; var c = a; var l = new (window.XDomainRequest && /^(http(s)?:)?\/\//.test(t) ? XDomainRequest : XMLHttpRequest)(); return 'onload' in l ? l.onload = l.onerror = r : l.onreadystatechange = function () { l.readyState > 3 && r(); }, l.onprogress = function (t) { const n = d3.event; d3.event = t; try { u.progress.call(i, l); } finally { d3.event = n; } }, i.header = function (t, n) { return t = (`${t}`).toLowerCase(), arguments.length < 2 ? o[t] : (n == null ? delete o[t] : o[t] = `${n}`, i); }, i.mimeType = function (t) { return arguments.length ? (n = t == null ? null : `${t}`, i) : n; }, i.response = function (t) { return c = t, i; }, ['get', 'post'].forEach((t) => { i[t] = function () { return i.send(...[t].concat(Yu(arguments))); }; }), i.send = function (e, r, u) { if (arguments.length === 2 && typeof r === 'function' && (u = r, r = null), l.open(e, t, !0), n == null || 'accept' in o || (o.accept = `${n},*/*`), l.setRequestHeader) for (const a in o)l.setRequestHeader(a, o[a]); return n != null && l.overrideMimeType && l.overrideMimeType(n), u != null && i.on('error', u).on('load', (t) => { u(null, t); }), l.send(r == null ? null : r), i; }, i.abort = function () { return l.abort(), i; }, d3.rebind(i, u, 'on'), arguments.length === 2 && typeof n === 'function' && (e = n, n = null), e == null ? i : i.get(g(e)); }, d3.text = function () { return d3.xhr(...arguments).response(p); }, d3.json = function (t, n) { return d3.xhr(t, 'application/json', n).response(m); }, d3.html = function (t, n) { return d3.xhr(t, 'text/html', n).response(v); }, d3.xml = function () { return d3.xhr(...arguments).response(y); }; const $u = {
        svg: 'http://www.w3.org/2000/svg', xhtml: 'http://www.w3.org/1999/xhtml', xlink: 'http://www.w3.org/1999/xlink', xml: 'http://www.w3.org/XML/1998/namespace', xmlns: 'http://www.w3.org/2000/xmlns/',
    }; d3.ns = { prefix: $u, qualify(t) { const n = t.indexOf(':'); let e = t; return n >= 0 && (e = t.substring(0, n), t = t.substring(n + 1)), $u.hasOwnProperty(e) ? { space: $u[e], local: t } : t; } }, d3.dispatch = function () { for (var t = new M(), n = -1, e = arguments.length; e > ++n;)t[arguments[n]] = b(t); return t; }, M.prototype.on = function (t, n) { const e = t.indexOf('.'); let r = ''; return e > 0 && (r = t.substring(e + 1), t = t.substring(0, e)), arguments.length < 2 ? this[t].on(r) : this[t].on(r, n); }, d3.format = function (t) { const n = Ju.exec(t); let e = n[1] || ' '; let r = n[2] || '>'; const i = n[3] || ''; let u = n[4] || ''; let a = n[5]; let o = +n[6]; let c = n[7]; let l = n[8]; let s = n[9]; let f = 1; let h = ''; let d = !1; switch (l && (l = +l.substring(1)), (a || e === '0' && r === '=') && (a = e = '0', r = '=', c && (o -= Math.floor((o - 1) / 4))), s) { case 'n': c = !0, s = 'g'; break; case '%': f = 100, h = '%', s = 'f'; break; case 'p': f = 100, h = '%', s = 'r'; break; case 'b': case 'o': case 'x': case 'X': u && (u = `0${s.toLowerCase()}`); case 'c': case 'd': d = !0, l = 0; break; case 's': f = -1, s = 'r'; }u === '#' && (u = ''), s != 'r' || l || (s = 'g'), s = Gu.get(s) || _; const g = a && c; return function (t) { if (d && t % 1) return ''; let n = t < 0 || t === 0 && 1 / t < 0 ? (t = -t, '-') : i; if (f < 0) { const p = d3.formatPrefix(t, l); t = p.scale(t), h = p.symbol; } else t *= f; t = s(t, l), !a && c && (t = Ku(t)); let m = u.length + t.length + (g ? 0 : n.length); const v = o > m ? Array(m = o - m + 1).join(e) : ''; return g && (t = Ku(v + t)), Cu && t.replace('.', Cu), n += u, (r === '<' ? n + t + v : r === '>' ? v + n + t : r === '^' ? v.substring(0, m >>= 1) + n + t + v.substring(m) : n + (g ? t : v + t)) + h; }; }; var Ju = /(?:([^{])?([<>=^]))?([+\- ])?(#)?(0)?([0-9]+)?(,)?(\.[0-9]+)?([a-zA-Z%])?/; var Gu = d3.map({
        b(t) { return t.toString(2); }, c(t) { return String.fromCharCode(t); }, o(t) { return t.toString(8); }, x(t) { return t.toString(16); }, X(t) { return t.toString(16).toUpperCase(); }, g(t, n) { return t.toPrecision(n); }, e(t, n) { return t.toExponential(n); }, f(t, n) { return t.toFixed(n); }, r(t, n) { return d3.round(t, n = x(t, n)).toFixed(Math.max(0, Math.min(20, n))); },
    }); var Ku = a; if (Du) { const Wu = Du.length; Ku = function (t) { for (var n = t.lastIndexOf('.'), e = n >= 0 ? `.${t.substring(n + 1)}` : (n = t.length, ''), r = [], i = 0, u = Du[0]; n > 0 && u > 0;)r.push(t.substring(n -= u, n + u)), u = Du[i = (i + 1) % Wu]; return r.reverse().join(zu || '') + e; }; } const Qu = ['y', 'z', 'a', 'f', 'p', 'n', 'μ', 'm', '', 'k', 'M', 'G', 'T', 'P', 'E', 'Z', 'Y'].map(w); d3.formatPrefix = function (t, n) { let e = 0; return t && (t < 0 && (t *= -1), n && (t = d3.round(t, x(t, n))), e = 1 + Math.floor(1e-12 + Math.log(t) / Math.LN10), e = Math.max(-24, Math.min(24, 3 * Math.floor((e <= 0 ? e + 1 : e - 1) / 3)))), Qu[8 + e / 3]; }; const ta = function () { return a; }; const na = d3.map({
        linear: ta, poly: q, quad() { return A; }, cubic() { return N; }, sin() { return C; }, exp() { return z; }, circle() { return D; }, elastic: L, back: F, bounce() { return H; },
    }); const ea = d3.map({
        in: a, out: k, 'in-out': E, 'out-in': function (t) { return E(k(t)); },
    }); d3.ease = function (t) { const n = t.indexOf('-'); let e = n >= 0 ? t.substring(0, n) : t; let r = n >= 0 ? t.substring(n + 1) : 'in'; return e = na.get(e) || ta, r = ea.get(r) || a, S(r(e(...Array.prototype.slice.call(arguments, 1)))); }, d3.event = null, d3.transform = function (t) { const n = document.createElementNS(d3.ns.prefix.svg, 'g'); return (d3.transform = function (t) { n.setAttribute('transform', t); const e = n.transform.baseVal.consolidate(); return new O(e ? e.matrix : ra); })(t); }, O.prototype.toString = function () { return `translate(${this.translate})rotate(${this.rotate})skewX(${this.skew})scale(${this.scale})`; }; var ra = {
        a: 1, b: 0, c: 0, d: 1, e: 0, f: 0,
    }; d3.interpolate = function (t, n) { for (var e, r = d3.interpolators.length; --r >= 0 && !(e = d3.interpolators[r](t, n)););return e; }, d3.interpolateNumber = function (t, n) { return n -= t, function (e) { return t + n * e; }; }, d3.interpolateRound = function (t, n) { return n -= t, function (e) { return Math.round(t + n * e); }; }, d3.interpolateString = function (t, n) { let e; let r; let i; let u; let a; let o = 0; let c = 0; const l = []; const s = []; for (ia.lastIndex = 0, r = 0; e = ia.exec(n); ++r)e.index && l.push(n.substring(o, c = e.index)), s.push({ i: l.length, x: e[0] }), l.push(null), o = ia.lastIndex; for (n.length > o && l.push(n.substring(o)), r = 0, u = s.length; (e = ia.exec(t)) && u > r; ++r) if (a = s[r], a.x == e[0]) { if (a.i) if (l[a.i + 1] == null) for (l[a.i - 1] += a.x, l.splice(a.i, 1), i = r + 1; u > i; ++i)s[i].i--; else for (l[a.i - 1] += a.x + l[a.i + 1], l.splice(a.i, 2), i = r + 1; u > i; ++i)s[i].i -= 2; else if (l[a.i + 1] == null)l[a.i] = a.x; else for (l[a.i] = a.x + l[a.i + 1], l.splice(a.i + 1, 1), i = r + 1; u > i; ++i)s[i].i--; s.splice(r, 1), u--, r--; } else a.x = d3.interpolateNumber(parseFloat(e[0]), parseFloat(a.x)); for (;u > r;)a = s.pop(), l[a.i + 1] == null ? l[a.i] = a.x : (l[a.i] = a.x + l[a.i + 1], l.splice(a.i + 1, 1)), u--; return l.length === 1 ? l[0] == null ? s[0].x : function () { return n; } : function (t) { for (r = 0; u > r; ++r)l[(a = s[r]).i] = a.x(t); return l.join(''); }; }, d3.interpolateTransform = function (t, n) { let e; const r = []; const i = []; const u = d3.transform(t); const a = d3.transform(n); const o = u.translate; const c = a.translate; let l = u.rotate; let s = a.rotate; const f = u.skew; const h = a.skew; const d = u.scale; const g = a.scale; return o[0] != c[0] || o[1] != c[1] ? (r.push('translate(', null, ',', null, ')'), i.push({ i: 1, x: d3.interpolateNumber(o[0], c[0]) }, { i: 3, x: d3.interpolateNumber(o[1], c[1]) })) : c[0] || c[1] ? r.push(`translate(${c})`) : r.push(''), l != s ? (l - s > 180 ? s += 360 : s - l > 180 && (l += 360), i.push({ i: r.push(`${r.pop()}rotate(`, null, ')') - 2, x: d3.interpolateNumber(l, s) })) : s && r.push(`${r.pop()}rotate(${s})`), f != h ? i.push({ i: r.push(`${r.pop()}skewX(`, null, ')') - 2, x: d3.interpolateNumber(f, h) }) : h && r.push(`${r.pop()}skewX(${h})`), d[0] != g[0] || d[1] != g[1] ? (e = r.push(`${r.pop()}scale(`, null, ',', null, ')'), i.push({ i: e - 4, x: d3.interpolateNumber(d[0], g[0]) }, { i: e - 2, x: d3.interpolateNumber(d[1], g[1]) })) : (g[0] != 1 || g[1] != 1) && r.push(`${r.pop()}scale(${g})`), e = i.length, function (t) { for (var n, u = -1; e > ++u;)r[(n = i[u]).i] = n.x(t); return r.join(''); }; }, d3.interpolateRgb = function (t, n) { t = d3.rgb(t), n = d3.rgb(n); const e = t.r; const r = t.g; const i = t.b; const u = n.r - e; const a = n.g - r; const o = n.b - i; return function (t) { return `#${G(Math.round(e + u * t))}${G(Math.round(r + a * t))}${G(Math.round(i + o * t))}`; }; }, d3.interpolateHsl = function (t, n) { t = d3.hsl(t), n = d3.hsl(n); const e = t.h; const r = t.s; const i = t.l; let u = n.h - e; const a = n.s - r; const o = n.l - i; return u > 180 ? u -= 360 : u < -180 && (u += 360), function (t) { return `${un(e + u * t, r + a * t, i + o * t)}`; }; }, d3.interpolateLab = function (t, n) { t = d3.lab(t), n = d3.lab(n); const e = t.l; const r = t.a; const i = t.b; const u = n.l - e; const a = n.a - r; const o = n.b - i; return function (t) { return `${fn(e + u * t, r + a * t, i + o * t)}`; }; }, d3.interpolateHcl = function (t, n) { t = d3.hcl(t), n = d3.hcl(n); const e = t.h; const r = t.c; const i = t.l; let u = n.h - e; const a = n.c - r; const o = n.l - i; return u > 180 ? u -= 360 : u < -180 && (u += 360), function (t) { return `${cn(e + u * t, r + a * t, i + o * t)}`; }; }, d3.interpolateArray = function (t, n) { let e; const r = []; const i = []; const u = t.length; const a = n.length; const o = Math.min(t.length, n.length); for (e = 0; o > e; ++e)r.push(d3.interpolate(t[e], n[e])); for (;u > e; ++e)i[e] = t[e]; for (;a > e; ++e)i[e] = n[e]; return function (t) { for (e = 0; o > e; ++e)i[e] = r[e](t); return i; }; }, d3.interpolateObject = function (t, n) { let e; const r = {}; const i = {}; for (e in t)e in n ? r[e] = V(e)(t[e], n[e]) : i[e] = t[e]; for (e in n)e in t || (i[e] = n[e]); return function (t) { for (e in r)i[e] = r[e](t); return i; }; }; var ia = /[-+]?(?:\d+\.?\d*|\.?\d+)(?:[eE][-+]?\d+)?/g; d3.interpolators = [d3.interpolateObject, function (t, n) { return n instanceof Array && d3.interpolateArray(t, n); }, function (t, n) { return (typeof t === 'string' || typeof n === 'string') && d3.interpolateString(`${t}`, `${n}`); }, function (t, n) { return (typeof n === 'string' ? aa.has(n) || /^(#|rgb\(|hsl\()/.test(n) : n instanceof B) && d3.interpolateRgb(t, n); }, function (t, n) { return !isNaN(t = +t) && !isNaN(n = +n) && d3.interpolateNumber(t, n); }], B.prototype.toString = function () { return `${this.rgb()}`; }, d3.rgb = function (t, n, e) { return arguments.length === 1 ? t instanceof J ? $(t.r, t.g, t.b) : K(`${t}`, $, un) : $(~~t, ~~n, ~~e); }; const ua = J.prototype = new B(); ua.brighter = function (t) { t = Math.pow(0.7, arguments.length ? t : 1); let n = this.r; let e = this.g; let r = this.b; const i = 30; return n || e || r ? (n && i > n && (n = i), e && i > e && (e = i), r && i > r && (r = i), $(Math.min(255, Math.floor(n / t)), Math.min(255, Math.floor(e / t)), Math.min(255, Math.floor(r / t)))) : $(i, i, i); }, ua.darker = function (t) {
        return t = Math.pow(0.7, arguments.length ? t : 1), $(Math.floor(t * this.r), Math.floor(t * this.g), Math.floor(t * this.b));
    }, ua.hsl = function () { return W(this.r, this.g, this.b); }, ua.toString = function () { return `#${G(this.r)}${G(this.g)}${G(this.b)}`; }; var aa = d3.map({
        aliceblue: '#f0f8ff', antiquewhite: '#faebd7', aqua: '#00ffff', aquamarine: '#7fffd4', azure: '#f0ffff', beige: '#f5f5dc', bisque: '#ffe4c4', black: '#000000', blanchedalmond: '#ffebcd', blue: '#0000ff', blueviolet: '#8a2be2', brown: '#a52a2a', burlywood: '#deb887', cadetblue: '#5f9ea0', chartreuse: '#7fff00', chocolate: '#d2691e', coral: '#ff7f50', cornflowerblue: '#6495ed', cornsilk: '#fff8dc', crimson: '#dc143c', cyan: '#00ffff', darkblue: '#00008b', darkcyan: '#008b8b', darkgoldenrod: '#b8860b', darkgray: '#a9a9a9', darkgreen: '#006400', darkgrey: '#a9a9a9', darkkhaki: '#bdb76b', darkmagenta: '#8b008b', darkolivegreen: '#556b2f', darkorange: '#ff8c00', darkorchid: '#9932cc', darkred: '#8b0000', darksalmon: '#e9967a', darkseagreen: '#8fbc8f', darkslateblue: '#483d8b', darkslategray: '#2f4f4f', darkslategrey: '#2f4f4f', darkturquoise: '#00ced1', darkviolet: '#9400d3', deeppink: '#ff1493', deepskyblue: '#00bfff', dimgray: '#696969', dimgrey: '#696969', dodgerblue: '#1e90ff', firebrick: '#b22222', floralwhite: '#fffaf0', forestgreen: '#228b22', fuchsia: '#ff00ff', gainsboro: '#dcdcdc', ghostwhite: '#f8f8ff', gold: '#ffd700', goldenrod: '#daa520', gray: '#808080', green: '#008000', greenyellow: '#adff2f', grey: '#808080', honeydew: '#f0fff0', hotpink: '#ff69b4', indianred: '#cd5c5c', indigo: '#4b0082', ivory: '#fffff0', khaki: '#f0e68c', lavender: '#e6e6fa', lavenderblush: '#fff0f5', lawngreen: '#7cfc00', lemonchiffon: '#fffacd', lightblue: '#add8e6', lightcoral: '#f08080', lightcyan: '#e0ffff', lightgoldenrodyellow: '#fafad2', lightgray: '#d3d3d3', lightgreen: '#90ee90', lightgrey: '#d3d3d3', lightpink: '#ffb6c1', lightsalmon: '#ffa07a', lightseagreen: '#20b2aa', lightskyblue: '#87cefa', lightslategray: '#778899', lightslategrey: '#778899', lightsteelblue: '#b0c4de', lightyellow: '#ffffe0', lime: '#00ff00', limegreen: '#32cd32', linen: '#faf0e6', magenta: '#ff00ff', maroon: '#800000', mediumaquamarine: '#66cdaa', mediumblue: '#0000cd', mediumorchid: '#ba55d3', mediumpurple: '#9370db', mediumseagreen: '#3cb371', mediumslateblue: '#7b68ee', mediumspringgreen: '#00fa9a', mediumturquoise: '#48d1cc', mediumvioletred: '#c71585', midnightblue: '#191970', mintcream: '#f5fffa', mistyrose: '#ffe4e1', moccasin: '#ffe4b5', navajowhite: '#ffdead', navy: '#000080', oldlace: '#fdf5e6', olive: '#808000', olivedrab: '#6b8e23', orange: '#ffa500', orangered: '#ff4500', orchid: '#da70d6', palegoldenrod: '#eee8aa', palegreen: '#98fb98', paleturquoise: '#afeeee', palevioletred: '#db7093', papayawhip: '#ffefd5', peachpuff: '#ffdab9', peru: '#cd853f', pink: '#ffc0cb', plum: '#dda0dd', powderblue: '#b0e0e6', purple: '#800080', red: '#ff0000', rosybrown: '#bc8f8f', royalblue: '#4169e1', saddlebrown: '#8b4513', salmon: '#fa8072', sandybrown: '#f4a460', seagreen: '#2e8b57', seashell: '#fff5ee', sienna: '#a0522d', silver: '#c0c0c0', skyblue: '#87ceeb', slateblue: '#6a5acd', slategray: '#708090', slategrey: '#708090', snow: '#fffafa', springgreen: '#00ff7f', steelblue: '#4682b4', tan: '#d2b48c', teal: '#008080', thistle: '#d8bfd8', tomato: '#ff6347', turquoise: '#40e0d0', violet: '#ee82ee', wheat: '#f5deb3', white: '#ffffff', whitesmoke: '#f5f5f5', yellow: '#ffff00', yellowgreen: '#9acd32',
    }); aa.forEach((t, n) => { aa.set(t, K(n, $, un)); }), d3.hsl = function (t, n, e) { return arguments.length === 1 ? t instanceof rn ? en(t.h, t.s, t.l) : K(`${t}`, W, en) : en(+t, +n, +e); }; const oa = rn.prototype = new B(); oa.brighter = function (t) { return t = Math.pow(0.7, arguments.length ? t : 1), en(this.h, this.s, this.l / t); }, oa.darker = function (t) { return t = Math.pow(0.7, arguments.length ? t : 1), en(this.h, this.s, t * this.l); }, oa.rgb = function () { return un(this.h, this.s, this.l); }, d3.hcl = function (t, n, e) { return arguments.length === 1 ? t instanceof on ? an(t.h, t.c, t.l) : t instanceof sn ? hn(t.l, t.a, t.b) : hn((t = Q((t = d3.rgb(t)).r, t.g, t.b)).l, t.a, t.b) : an(+t, +n, +e); }; const ca = on.prototype = new B(); ca.brighter = function (t) { return an(this.h, this.c, Math.min(100, this.l + la * (arguments.length ? t : 1))); }, ca.darker = function (t) { return an(this.h, this.c, Math.max(0, this.l - la * (arguments.length ? t : 1))); }, ca.rgb = function () { return cn(this.h, this.c, this.l).rgb(); }, d3.lab = function (t, n, e) { return arguments.length === 1 ? t instanceof sn ? ln(t.l, t.a, t.b) : t instanceof on ? cn(t.l, t.c, t.h) : Q((t = d3.rgb(t)).r, t.g, t.b) : ln(+t, +n, +e); }; var la = 18; var sa = 0.95047; var fa = 1; var ha = 1.08883; const da = sn.prototype = new B(); da.brighter = function (t) { return ln(Math.min(100, this.l + la * (arguments.length ? t : 1)), this.a, this.b); }, da.darker = function (t) { return ln(Math.max(0, this.l - la * (arguments.length ? t : 1)), this.a, this.b); }, da.rgb = function () { return fn(this.l, this.a, this.b); }; var ga = function (t, n) { return n.querySelector(t); }; var pa = function (t, n) { return n.querySelectorAll(t); }; const ma = document.documentElement; const va = ma.matchesSelector || ma.webkitMatchesSelector || ma.mozMatchesSelector || ma.msMatchesSelector || ma.oMatchesSelector; var ya = function (t, n) { return va.call(t, n); }; typeof Sizzle === 'function' && (ga = function (t, n) { return Sizzle(t, n)[0] || null; }, pa = function (t, n) { return Sizzle.uniqueSort(Sizzle(t, n)); }, ya = Sizzle.matchesSelector); var Ma = []; d3.selection = function () { return ba; }, d3.selection.prototype = Ma, Ma.select = function (t) { let n; let e; let r; let i; const u = []; typeof t !== 'function' && (t = vn(t)); for (let a = -1, o = this.length; o > ++a;) { u.push(n = []), n.parentNode = (r = this[a]).parentNode; for (let c = -1, l = r.length; l > ++c;)(i = r[c]) ? (n.push(e = t.call(i, i.__data__, c)), e && '__data__' in i && (e.__data__ = i.__data__)) : n.push(null); } return mn(u); }, Ma.selectAll = function (t) { let n; let e; const r = []; typeof t !== 'function' && (t = yn(t)); for (let i = -1, u = this.length; u > ++i;) for (let a = this[i], o = -1, c = a.length; c > ++o;)(e = a[o]) && (r.push(n = Yu(t.call(e, e.__data__, o))), n.parentNode = e); return mn(r); }, Ma.attr = function (t, n) { if (arguments.length < 2) { if (typeof t === 'string') { const e = this.node(); return t = d3.ns.qualify(t), t.local ? e.getAttributeNS(t.space, t.local) : e.getAttribute(t); } for (n in t) this.each(Mn(n, t[n])); return this; } return this.each(Mn(t, n)); }, Ma.classed = function (t, n) { if (arguments.length < 2) { if (typeof t === 'string') { const e = this.node(); const r = (t = t.trim().split(/^|\s+/g)).length; let i = -1; if (n = e.classList) { for (;r > ++i;) if (!n.contains(t[i])) return !1; } else for (n = e.className, n.baseVal != null && (n = n.baseVal); r > ++i;) if (!bn(t[i]).test(n)) return !1; return !0; } for (n in t) this.each(xn(n, t[n])); return this; } return this.each(xn(t, n)); }, Ma.style = function (t, n, e) { const r = arguments.length; if (r < 3) { if (typeof t !== 'string') { r < 2 && (n = ''); for (e in t) this.each(wn(e, t[e], n)); return this; } if (r < 2) return getComputedStyle(this.node(), null).getPropertyValue(t); e = ''; } return this.each(wn(t, n, e)); }, Ma.property = function (t, n) { if (arguments.length < 2) { if (typeof t === 'string') return this.node()[t]; for (n in t) this.each(Sn(n, t[n])); return this; } return this.each(Sn(t, n)); }, Ma.text = function (t) { return arguments.length ? this.each(typeof t === 'function' ? function () { const n = t.apply(this, arguments); this.textContent = n == null ? '' : n; } : t == null ? function () { this.textContent = ''; } : function () { this.textContent = t; }) : this.node().textContent; }, Ma.html = function (t) { return arguments.length ? this.each(typeof t === 'function' ? function () { const n = t.apply(this, arguments); this.innerHTML = n == null ? '' : n; } : t == null ? function () { this.innerHTML = ''; } : function () { this.innerHTML = t; }) : this.node().innerHTML; }, Ma.append = function (t) { function n() { return this.appendChild(document.createElementNS(this.namespaceURI, t)); } function e() { return this.appendChild(document.createElementNS(t.space, t.local)); } return t = d3.ns.qualify(t), this.select(t.local ? e : n); }, Ma.insert = function (t, n) { function e() { return this.insertBefore(document.createElementNS(this.namespaceURI, t), ga(n, this)); } function r() { return this.insertBefore(document.createElementNS(t.space, t.local), ga(n, this)); } return t = d3.ns.qualify(t), this.select(t.local ? r : e); }, Ma.remove = function () { return this.each(function () { const t = this.parentNode; t && t.removeChild(this); }); }, Ma.data = function (t, n) { function e(t, e) { let r; let i; let a; const o = t.length; const f = e.length; const h = Math.min(o, f); const d = Array(f); const g = Array(f); const p = Array(o); if (n) { let m; const v = new u(); const y = new u(); const M = []; for (r = -1; o > ++r;)m = n.call(i = t[r], i.__data__, r), v.has(m) ? p[r] = i : v.set(m, i), M.push(m); for (r = -1; f > ++r;)m = n.call(e, a = e[r], r), (i = v.get(m)) ? (d[r] = i, i.__data__ = a) : y.has(m) || (g[r] = kn(a)), y.set(m, a), v.remove(m); for (r = -1; o > ++r;)v.has(M[r]) && (p[r] = t[r]); } else { for (r = -1; h > ++r;)i = t[r], a = e[r], i ? (i.__data__ = a, d[r] = i) : g[r] = kn(a); for (;f > r; ++r)g[r] = kn(e[r]); for (;o > r; ++r)p[r] = t[r]; }g.update = d, g.parentNode = d.parentNode = p.parentNode = t.parentNode, c.push(g), l.push(d), s.push(p); } let r; let i; let a = -1; let o = this.length; if (!arguments.length) { for (t = Array(o = (r = this[0]).length); o > ++a;)(i = r[a]) && (t[a] = i.__data__); return t; } var c = qn([]); var l = mn([]); var s = mn([]); if (typeof t === 'function') for (;o > ++a;)e(r = this[a], t.call(r, r.parentNode.__data__, a)); else for (;o > ++a;)e(r = this[a], t); return l.enter = function () { return c; }, l.exit = function () { return s; }, l; }, Ma.datum = function (t) { return arguments.length ? this.property('__data__', t) : this.property('__data__'); }, Ma.filter = function (t) { let n; let e; let r; const i = []; typeof t !== 'function' && (t = En(t)); for (let u = 0, a = this.length; a > u; u++) { i.push(n = []), n.parentNode = (e = this[u]).parentNode; for (let o = 0, c = e.length; c > o; o++)(r = e[o]) && t.call(r, r.__data__, o) && n.push(r); } return mn(i); }, Ma.order = function () { for (let t = -1, n = this.length; n > ++t;) for (var e, r = this[t], i = r.length - 1, u = r[i]; --i >= 0;)(e = r[i]) && (u && u !== e.nextSibling && u.parentNode.insertBefore(e, u), u = e); return this; }, Ma.sort = function (t) { t = An.apply(this, arguments); for (let n = -1, e = this.length; e > ++n;) this[n].sort(t); return this.order(); }, Ma.on = function (t, n, e) { let r = arguments.length; if (r < 3) { if (typeof t !== 'string') { r < 2 && (n = !1); for (e in t) this.each(Nn(e, t[e], n)); return this; } if (r < 2) return (r = this.node()[`__on${t}`]) && r._; e = !1; } return this.each(Nn(t, n, e)); }, Ma.each = function (t) { return Tn(this, (n, e, r) => { t.call(n, n.__data__, e, r); }); }, Ma.call = function (t) { const n = Yu(arguments); return t.apply(n[0] = this, n), this; }, Ma.empty = function () { return !this.node(); }, Ma.node = function () { for (let t = 0, n = this.length; n > t; t++) for (let e = this[t], r = 0, i = e.length; i > r; r++) { const u = e[r]; if (u) return u; } return null; }, Ma.transition = function () { let t; let n; const e = _a || ++Sa; const r = []; const i = Object.create(ka); i.time = Date.now(); for (let u = -1, a = this.length; a > ++u;) { r.push(t = []); for (let o = this[u], c = -1, l = o.length; l > ++c;)(n = o[c]) && zn(n, c, e, i), t.push(n); } return Cn(r, e); }; var ba = mn([[document]]); ba[0].parentNode = ma, d3.select = function (t) { return typeof t === 'string' ? ba.select(t) : mn([[t]]); }, d3.selectAll = function (t) { return typeof t === 'string' ? ba.selectAll(t) : mn([Yu(t)]); }; var xa = []; d3.selection.enter = qn, d3.selection.enter.prototype = xa, xa.append = Ma.append, xa.insert = Ma.insert, xa.empty = Ma.empty, xa.node = Ma.node, xa.select = function (t) { for (var n, e, r, i, u, a = [], o = -1, c = this.length; c > ++o;) { r = (i = this[o]).update, a.push(n = []), n.parentNode = i.parentNode; for (let l = -1, s = i.length; s > ++l;)(u = i[l]) ? (n.push(r[l] = e = t.call(i.parentNode, u.__data__, l)), e.__data__ = u.__data__) : n.push(null); } return mn(a); }; let _a; var wa = []; var Sa = 0; var ka = { ease: T, delay: 0, duration: 250 }; wa.call = Ma.call, wa.empty = Ma.empty, wa.node = Ma.node, d3.transition = function (t) { return arguments.length ? _a ? t.transition() : t : ba.transition(); }, d3.transition.prototype = wa, wa.select = function (t) { let n; let e; let r; const i = this.id; const u = []; typeof t !== 'function' && (t = vn(t)); for (let a = -1, o = this.length; o > ++a;) { u.push(n = []); for (let c = this[a], l = -1, s = c.length; s > ++l;)(r = c[l]) && (e = t.call(r, r.__data__, l)) ? ('__data__' in r && (e.__data__ = r.__data__), zn(e, l, i, r.__transition__[i]), n.push(e)) : n.push(null); } return Cn(u, i); }, wa.selectAll = function (t) { let n; let e; let r; let i; let u; const a = this.id; const o = []; typeof t !== 'function' && (t = yn(t)); for (let c = -1, l = this.length; l > ++c;) for (let s = this[c], f = -1, h = s.length; h > ++f;) if (r = s[f]) { u = r.__transition__[a], e = t.call(r, r.__data__, f), o.push(n = []); for (let d = -1, g = e.length; g > ++d;)zn(i = e[d], d, a, u), n.push(i); } return Cn(o, a); }, wa.filter = function (t) { let n; var e; let r; const i = []; typeof t !== 'function' && (t = En(t)); for (let u = 0, a = this.length; a > u; u++) { i.push(n = []); for (var e = this[u], o = 0, c = e.length; c > o; o++)(r = e[o]) && t.call(r, r.__data__, o) && n.push(r); } return Cn(i, this.id, this.time).ease(this.ease()); }, wa.attr = function (t, n) { function e() { this.removeAttribute(u); } function r() { this.removeAttributeNS(u.space, u.local); } if (arguments.length < 2) { for (n in t) this.attr(n, t[n]); return this; } const i = V(t); var u = d3.ns.qualify(t); return Ln(this, `attr.${t}`, n, (t) => { function n() { let n; const e = this.getAttribute(u); return e !== t && (n = i(e, t), function (t) { this.setAttribute(u, n(t)); }); } function a() { let n; const e = this.getAttributeNS(u.space, u.local); return e !== t && (n = i(e, t), function (t) { this.setAttributeNS(u.space, u.local, n(t)); }); } return t == null ? u.local ? r : e : (t += '', u.local ? a : n); }); }, wa.attrTween = function (t, n) { function e(t, e) { const r = n.call(this, t, e, this.getAttribute(i)); return r && function (t) { this.setAttribute(i, r(t)); }; } function r(t, e) { const r = n.call(this, t, e, this.getAttributeNS(i.space, i.local)); return r && function (t) { this.setAttributeNS(i.space, i.local, r(t)); }; } var i = d3.ns.qualify(t); return this.tween(`attr.${t}`, i.local ? r : e); }, wa.style = function (t, n, e) { function r() { this.style.removeProperty(t); } const i = arguments.length; if (i < 3) { if (typeof t !== 'string') { i < 2 && (n = ''); for (e in t) this.style(e, t[e], n); return this; }e = ''; } const u = V(t); return Ln(this, `style.${t}`, n, (n) => { function i() { let r; const i = getComputedStyle(this, null).getPropertyValue(t); return i !== n && (r = u(i, n), function (n) { this.style.setProperty(t, r(n), e); }); } return n == null ? r : (n += '', i); }); }, wa.styleTween = function (t, n, e) { return arguments.length < 3 && (e = ''), this.tween(`style.${t}`, function (r, i) { const u = n.call(this, r, i, getComputedStyle(this, null).getPropertyValue(t)); return u && function (n) { this.style.setProperty(t, u(n), e); }; }); }, wa.text = function (t) { return Ln(this, 'text', t, Dn); }, wa.remove = function () { return this.each('end.transition', function () { let t; !this.__transition__ && (t = this.parentNode) && t.removeChild(this); }); }, wa.ease = function (t) { const n = this.id; return arguments.length < 1 ? this.node().__transition__[n].ease : (typeof t !== 'function' && (t = d3.ease(...arguments)), Tn(this, (e) => { e.__transition__[n].ease = t; })); }, wa.delay = function (t) { const n = this.id; return Tn(this, typeof t === 'function' ? (e, r, i) => { e.__transition__[n].delay = 0 | t.call(e, e.__data__, r, i); } : (t |= 0, function (e) { e.__transition__[n].delay = t; })); }, wa.duration = function (t) { const n = this.id; return Tn(this, typeof t === 'function' ? (e, r, i) => { e.__transition__[n].duration = Math.max(1, 0 | t.call(e, e.__data__, r, i)); } : (t = Math.max(1, 0 | t), function (e) { e.__transition__[n].duration = t; })); }, wa.each = function (t, n) { const e = this.id; if (arguments.length < 2) { const r = ka; const i = _a; _a = e, Tn(this, (n, r, i) => { ka = n.__transition__[e], t.call(n, n.__data__, r, i); }), ka = r, _a = i; } else Tn(this, (r) => { r.__transition__[e].event.on(t, n); }); return this; }, wa.transition = function () { for (var t, n, e, r, i = this.id, u = ++Sa, a = [], o = 0, c = this.length; c > o; o++) { a.push(t = []); for (var n = this[o], l = 0, s = n.length; s > l; l++)(e = n[l]) && (r = Object.create(e.__transition__[i]), r.delay += r.duration, zn(e, l, u, r)), t.push(e); } return Cn(a, u); }, wa.tween = function (t, n) { const e = this.id; return arguments.length < 2 ? this.node().__transition__[e].tween.get(t) : Tn(this, n == null ? (n) => { n.__transition__[e].tween.remove(t); } : (r) => { r.__transition__[e].tween.set(t, n); }); }; let Ea; let Aa; let Na = 0; var Ta = {}; var qa = null; d3.timer = function (t, n, e) {
        if (arguments.length < 3) { if (arguments.length < 2)n = 0; else if (!isFinite(n)) return; e = Date.now(); } const r = Ta[t.id]; r && r.callback === t ? (r.then = e, r.delay = n) : Ta[t.id = ++Na] = qa = {
            callback: t, then: e, delay: n, next: qa,
        }, Ea || (Aa = clearTimeout(Aa), Ea = 1, Ca(Fn));
    }, d3.timer.flush = function () { for (var t, n = Date.now(), e = qa; e;)t = n - e.then, e.delay || (e.flush = e.callback(t)), e = e.next; Hn(); }; var Ca = window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame || function (t) { setTimeout(t, 17); }; d3.mouse = function (t) { return Rn(t, P()); }; var za = /WebKit/.test(navigator.userAgent) ? -1 : 0; d3.touches = function (t, n) { return arguments.length < 2 && (n = P().touches), n ? Yu(n).map((n) => { const e = Rn(t, n); return e.identifier = n.identifier, e; }) : []; }, d3.scale = {}, d3.scale.linear = function () { return In([0, 1], [0, 1], d3.interpolate, !1); }, d3.scale.log = function () { return Kn(d3.scale.linear(), Wn); }; var Da = d3.format('.0e'); Wn.pow = function (t) { return Math.pow(10, t); }, Qn.pow = function (t) { return -Math.pow(10, -t); }, d3.scale.pow = function () { return te(d3.scale.linear(), 1); }, d3.scale.sqrt = function () { return d3.scale.pow().exponent(0.5); }, d3.scale.ordinal = function () { return ee([], { t: 'range', a: [[]] }); }, d3.scale.category10 = function () { return d3.scale.ordinal().range(La); }, d3.scale.category20 = function () { return d3.scale.ordinal().range(Fa); }, d3.scale.category20b = function () { return d3.scale.ordinal().range(Ha); }, d3.scale.category20c = function () { return d3.scale.ordinal().range(Ra); }; var La = ['#1f77b4', '#ff7f0e', '#2ca02c', '#d62728', '#9467bd', '#8c564b', '#e377c2', '#7f7f7f', '#bcbd22', '#17becf']; var Fa = ['#1f77b4', '#aec7e8', '#ff7f0e', '#ffbb78', '#2ca02c', '#98df8a', '#d62728', '#ff9896', '#9467bd', '#c5b0d5', '#8c564b', '#c49c94', '#e377c2', '#f7b6d2', '#7f7f7f', '#c7c7c7', '#bcbd22', '#dbdb8d', '#17becf', '#9edae5']; var Ha = ['#393b79', '#5254a3', '#6b6ecf', '#9c9ede', '#637939', '#8ca252', '#b5cf6b', '#cedb9c', '#8c6d31', '#bd9e39', '#e7ba52', '#e7cb94', '#843c39', '#ad494a', '#d6616b', '#e7969c', '#7b4173', '#a55194', '#ce6dbd', '#de9ed6']; var Ra = ['#3182bd', '#6baed6', '#9ecae1', '#c6dbef', '#e6550d', '#fd8d3c', '#fdae6b', '#fdd0a2', '#31a354', '#74c476', '#a1d99b', '#c7e9c0', '#756bb1', '#9e9ac8', '#bcbddc', '#dadaeb', '#636363', '#969696', '#bdbdbd', '#d9d9d9']; d3.scale.quantile = function () { return re([], []); }, d3.scale.quantize = function () { return ie(0, 1, [0, 1]); }, d3.scale.threshold = function () { return ue([0.5], [0, 1]); }, d3.scale.identity = function () { return ae([0, 1]); }, d3.svg = {}, d3.svg.arc = function () { function t() { const t = n.apply(this, arguments); const u = e.apply(this, arguments); let a = r.apply(this, arguments) + Pa; let o = i.apply(this, arguments) + Pa; var c = (a > o && (c = a, a = o, o = c), o - a); const l = Ru > c ? '0' : '1'; const s = Math.cos(a); const f = Math.sin(a); const h = Math.cos(o); const d = Math.sin(o); return c >= ja ? t ? `M0,${u}A${u},${u} 0 1,1 0,${-u}A${u},${u} 0 1,1 0,${u}M0,${t}A${t},${t} 0 1,0 0,${-t}A${t},${t} 0 1,0 0,${t}Z` : `M0,${u}A${u},${u} 0 1,1 0,${-u}A${u},${u} 0 1,1 0,${u}Z` : t ? `M${u * s},${u * f}A${u},${u} 0 ${l},1 ${u * h},${u * d}L${t * h},${t * d}A${t},${t} 0 ${l},0 ${t * s},${t * f}Z` : `M${u * s},${u * f}A${u},${u} 0 ${l},1 ${u * h},${u * d}L0,0` + 'Z'; } var n = oe; var e = ce; var r = le; var i = se; return t.innerRadius = function (e) { return arguments.length ? (n = c(e), t) : n; }, t.outerRadius = function (n) { return arguments.length ? (e = c(n), t) : e; }, t.startAngle = function (n) { return arguments.length ? (r = c(n), t) : r; }, t.endAngle = function (n) { return arguments.length ? (i = c(n), t) : i; }, t.centroid = function () { const t = (n.apply(this, arguments) + e.apply(this, arguments)) / 2; const u = (r.apply(this, arguments) + i.apply(this, arguments)) / 2 + Pa; return [Math.cos(u) * t, Math.sin(u) * t]; }, t; }; var Pa = -Ru / 2; var ja = 2 * Ru - 1e-6; d3.svg.line = function () { return fe(a); }; var Oa = d3.map({
        linear: ge, 'linear-closed': pe, 'step-before': me, 'step-after': ve, basis: we, 'basis-open': Se, 'basis-closed': ke, bundle: Ee, cardinal: be, 'cardinal-open': ye, 'cardinal-closed': Me, monotone: ze,
    }); Oa.forEach((t, n) => { n.key = t, n.closed = /-closed$/.test(t); }); var Ya = [0, 2 / 3, 1 / 3, 0]; var Ua = [0, 1 / 3, 2 / 3, 0]; var Ia = [0, 1 / 6, 2 / 3, 1 / 6]; d3.svg.line.radial = function () { const t = fe(De); return t.radius = t.x, delete t.x, t.angle = t.y, delete t.y, t; }, me.reverse = ve, ve.reverse = me, d3.svg.area = function () { return Le(a); }, d3.svg.area.radial = function () { const t = Le(De); return t.radius = t.x, delete t.x, t.innerRadius = t.x0, delete t.x0, t.outerRadius = t.x1, delete t.x1, t.angle = t.y, delete t.y, t.startAngle = t.y0, delete t.y0, t.endAngle = t.y1, delete t.y1, t; }, d3.svg.chord = function () {
        function e(t, n) { const e = r(this, o, t, n); const c = r(this, l, t, n); return `M${e.p0}${u(e.r, e.p1, e.a1 - e.a0)}${i(e, c) ? a(e.r, e.p1, e.r, e.p0) : a(e.r, e.p1, c.r, c.p0) + u(c.r, c.p1, c.a1 - c.a0) + a(c.r, c.p1, e.r, e.p0)}Z`; } function r(t, n, e, r) {
            const i = n.call(t, e, r); const u = s.call(t, i, r); const a = f.call(t, i, r) + Pa; const o = h.call(t, i, r) + Pa; return {
                r: u, a0: a, a1: o, p0: [u * Math.cos(a), u * Math.sin(a)], p1: [u * Math.cos(o), u * Math.sin(o)],
            };
        } function i(t, n) { return t.a0 == n.a0 && t.a1 == n.a1; } function u(t, n, e) { return `A${t},${t} 0 ${+(e > Ru)},1 ${n}`; } function a(t, n, e, r) { return `Q 0,0 ${r}`; } var o = n; var l = t; var s = Fe; var f = le; var h = se; return e.radius = function (t) { return arguments.length ? (s = c(t), e) : s; }, e.source = function (t) { return arguments.length ? (o = c(t), e) : o; }, e.target = function (t) { return arguments.length ? (l = c(t), e) : l; }, e.startAngle = function (t) { return arguments.length ? (f = c(t), e) : f; }, e.endAngle = function (t) { return arguments.length ? (h = c(t), e) : h; }, e;
    }, d3.svg.diagonal = function () { function e(t, n) { const e = r.call(this, t, n); const a = i.call(this, t, n); const o = (e.y + a.y) / 2; let c = [e, { x: e.x, y: o }, { x: a.x, y: o }, a]; return c = c.map(u), `M${c[0]}C${c[1]} ${c[2]} ${c[3]}`; } var r = n; var i = t; var u = He; return e.source = function (t) { return arguments.length ? (r = c(t), e) : r; }, e.target = function (t) { return arguments.length ? (i = c(t), e) : i; }, e.projection = function (t) { return arguments.length ? (u = t, e) : u; }, e; }, d3.svg.diagonal.radial = function () { const t = d3.svg.diagonal(); let n = He; const e = t.projection; return t.projection = function (t) { return arguments.length ? e(Re(n = t)) : n; }, t; }, d3.svg.symbol = function () { function t(t, r) { return (Va.get(n.call(this, t, r)) || Oe)(e.call(this, t, r)); } var n = je; var e = Pe; return t.type = function (e) { return arguments.length ? (n = c(e), t) : n; }, t.size = function (n) { return arguments.length ? (e = c(n), t) : e; }, t; }; var Va = d3.map({
        circle: Oe, cross(t) { const n = Math.sqrt(t / 5) / 2; return `M${-3 * n},${-n}H${-n}V${-3 * n}H${n}V${-n}H${3 * n}V${n}H${n}V${3 * n}H${-n}V${n}H${-3 * n}Z`; }, diamond(t) { const n = Math.sqrt(t / (2 * Za)); const e = n * Za; return `M0,${-n}L${e},0` + ` 0,${n} ${-e},0` + 'Z'; }, square(t) { const n = Math.sqrt(t) / 2; return `M${-n},${-n}L${n},${-n} ${n},${n} ${-n},${n}Z`; }, 'triangle-down': function (t) { const n = Math.sqrt(t / Xa); const e = n * Xa / 2; return `M0,${e}L${n},${-e} ${-n},${-e}Z`; }, 'triangle-up': function (t) { const n = Math.sqrt(t / Xa); const e = n * Xa / 2; return `M0,${-e}L${n},${e} ${-n},${e}Z`; },
    }); d3.svg.symbolTypes = Va.keys(); var Xa = Math.sqrt(3); var Za = Math.tan(30 * ju); d3.svg.axis = function () { function t(t) { t.each(function () { let t; const f = d3.select(this); const h = l == null ? e.ticks ? e.ticks(...c) : e.domain() : l; const d = n == null ? e.tickFormat ? e.tickFormat(...c) : String : n; const g = Ie(e, h, s); const p = f.selectAll('.minor').data(g, String); const m = p.enter().insert('line', 'g').attr('class', 'tick minor').style('opacity', 1e-6); const v = d3.transition(p.exit()).style('opacity', 1e-6).remove(); const y = d3.transition(p).style('opacity', 1); const M = f.selectAll('g').data(h, String); const b = M.enter().insert('g', 'path').style('opacity', 1e-6); const x = d3.transition(M.exit()).style('opacity', 1e-6).remove(); const _ = d3.transition(M).style('opacity', 1); const w = On(e); const S = f.selectAll('.domain').data([0]); const k = d3.transition(S); const E = e.copy(); const A = this.__chart__ || E; this.__chart__ = E, S.enter().append('path').attr('class', 'domain'), b.append('line').attr('class', 'tick'), b.append('text'); const N = b.select('line'); const T = _.select('line'); const q = M.select('text').text(d); const C = b.select('text'); const z = _.select('text'); switch (r) { case 'bottom': t = Ye, m.attr('y2', u), y.attr('x2', 0).attr('y2', u), N.attr('y2', i), C.attr('y', Math.max(i, 0) + o), T.attr('x2', 0).attr('y2', i), z.attr('x', 0).attr('y', Math.max(i, 0) + o), q.attr('dy', '.71em').style('text-anchor', 'middle'), k.attr('d', `M${w[0]},${a}V0H${w[1]}V${a}`); break; case 'top': t = Ye, m.attr('y2', -u), y.attr('x2', 0).attr('y2', -u), N.attr('y2', -i), C.attr('y', -(Math.max(i, 0) + o)), T.attr('x2', 0).attr('y2', -i), z.attr('x', 0).attr('y', -(Math.max(i, 0) + o)), q.attr('dy', '0em').style('text-anchor', 'middle'), k.attr('d', `M${w[0]},${-a}V0H${w[1]}V${-a}`); break; case 'left': t = Ue, m.attr('x2', -u), y.attr('x2', -u).attr('y2', 0), N.attr('x2', -i), C.attr('x', -(Math.max(i, 0) + o)), T.attr('x2', -i).attr('y2', 0), z.attr('x', -(Math.max(i, 0) + o)).attr('y', 0), q.attr('dy', '.32em').style('text-anchor', 'end'), k.attr('d', `M${-a},${w[0]}H0V${w[1]}H${-a}`); break; case 'right': t = Ue, m.attr('x2', u), y.attr('x2', u).attr('y2', 0), N.attr('x2', i), C.attr('x', Math.max(i, 0) + o), T.attr('x2', i).attr('y2', 0), z.attr('x', Math.max(i, 0) + o).attr('y', 0), q.attr('dy', '.32em').style('text-anchor', 'start'), k.attr('d', `M${a},${w[0]}H0V${w[1]}H${a}`); } if (e.ticks)b.call(t, A), _.call(t, E), x.call(t, E), m.call(t, A), y.call(t, E), v.call(t, E); else { const D = E.rangeBand() / 2; const L = function (t) { return E(t) + D; }; b.call(t, L), _.call(t, L); } }); } let n; var e = d3.scale.linear(); var r = 'bottom'; var i = 6; var u = 6; var a = 6; var o = 3; var c = [10]; var l = null; var s = 0; return t.scale = function (n) { return arguments.length ? (e = n, t) : e; }, t.orient = function (n) { return arguments.length ? (r = n, t) : r; }, t.ticks = function () { return arguments.length ? (c = arguments, t) : c; }, t.tickValues = function (n) { return arguments.length ? (l = n, t) : l; }, t.tickFormat = function (e) { return arguments.length ? (n = e, t) : n; }, t.tickSize = function (n, e) { if (!arguments.length) return i; const r = arguments.length - 1; return i = +n, u = r > 1 ? +e : i, a = r > 0 ? +arguments[r] : i, t; }, t.tickPadding = function (n) { return arguments.length ? (o = +n, t) : o; }, t.tickSubdivide = function (n) { return arguments.length ? (s = +n, t) : s; }, t; }, d3.svg.brush = function () {
        function t(u) {
            u.each(function () {
                let u; const a = d3.select(this); const s = a.selectAll('.background').data([0]); const f = a.selectAll('.extent').data([0]); const h = a.selectAll('.resize').data(l, String); a.style('pointer-events', 'all').on('mousedown.brush', i).on('touchstart.brush', i), s.enter().append('rect').attr('class', 'background').style('visibility', 'hidden')
                    .style('cursor', 'crosshair'), f.enter().append('rect').attr('class', 'extent').style('cursor', 'move'), h.enter().append('g').attr('class', t => `resize ${t}`).style('cursor', t => Ba[t])
                    .append('rect')
                    .attr('x', t => (/[ew]$/.test(t) ? -3 : null))
                    .attr('y', t => (/^[ns]/.test(t) ? -3 : null))
                    .attr('width', 6)
                    .attr('height', 6)
                    .style('visibility', 'hidden'), h.style('display', t.empty() ? 'none' : null), h.exit().remove(), o && (u = On(o), s.attr('x', u[0]).attr('width', u[1] - u[0]), e(a)), c && (u = On(c), s.attr('y', u[0]).attr('height', u[1] - u[0]), r(a)), n(a);
            });
        } function n(t) { t.selectAll('.resize').attr('transform', t => `translate(${s[+/e$/.test(t)][0]},${s[+/^s/.test(t)][1]})`); } function e(t) { t.select('.extent').attr('x', s[0][0]), t.selectAll('.extent,.n>rect,.s>rect').attr('width', s[1][0] - s[0][0]); } function r(t) { t.select('.extent').attr('y', s[0][1]), t.selectAll('.extent,.e>rect,.w>rect').attr('height', s[1][1] - s[0][1]); } function i() {
            function i() { const t = d3.event.changedTouches; return t ? d3.touches(v, t)[0] : d3.mouse(v); } function l() { d3.event.keyCode == 32 && (S || (p = null, k[0] -= s[1][0], k[1] -= s[1][1], S = 2), R()); } function f() { d3.event.keyCode == 32 && S == 2 && (k[0] += s[1][0], k[1] += s[1][1], S = 0, R()); } function h() { const t = i(); let u = !1; m && (t[0] += m[0], t[1] += m[1]), S || (d3.event.altKey ? (p || (p = [(s[0][0] + s[1][0]) / 2, (s[0][1] + s[1][1]) / 2]), k[0] = s[+(t[0] < p[0])][0], k[1] = s[+(t[1] < p[1])][1]) : p = null), _ && d(t, o, 0) && (e(b), u = !0), w && d(t, c, 1) && (r(b), u = !0), u && (n(b), M({ type: 'brush', mode: S ? 'move' : 'resize' })); } function d(t, n, e) { let r; let i; const a = On(n); let o = a[0]; let c = a[1]; let l = k[e]; const f = s[1][e] - s[0][e]; return S && (o -= l, c -= f + l), r = Math.max(o, Math.min(c, t[e])), S ? i = (r += l) + f : (p && (l = Math.max(o, Math.min(c, 2 * p[e] - r))), r > l ? (i = r, r = l) : i = l), s[0][e] !== r || s[1][e] !== i ? (u = null, s[0][e] = r, s[1][e] = i, !0) : void 0; } function g() {
                h(), b.style('pointer-events', 'all').selectAll('.resize').style('display', t.empty() ? 'none' : null), d3.select('body').style('cursor', null), E.on('mousemove.brush', null).on('mouseup.brush', null).on('touchmove.brush', null).on('touchend.brush', null)
                    .on('keydown.brush', null)
                    .on('keyup.brush', null), M({ type: 'brushend' }), R();
            } let p; let m; var v = this; const y = d3.select(d3.event.target); var M = a.of(v, arguments); var b = d3.select(v); const x = y.datum(); var _ = !/^(n|s)$/.test(x) && o; var w = !/^(e|w)$/.test(x) && c; var S = y.classed('extent'); var k = i(); var E = d3.select(window).on('mousemove.brush', h).on('mouseup.brush', g).on('touchmove.brush', h)
                .on('touchend.brush', g)
                .on('keydown.brush', l)
                .on('keyup.brush', f); if (S)k[0] = s[0][0] - k[0], k[1] = s[0][1] - k[1]; else if (x) { const A = +/w$/.test(x); const N = +/^n/.test(x); m = [s[1 - A][0] - k[0], s[1 - N][1] - k[1]], k[0] = s[A][0], k[1] = s[N][1]; } else d3.event.altKey && (p = k.slice()); b.style('pointer-events', 'none').selectAll('.resize').style('display', null), d3.select('body').style('cursor', y.style('cursor')), M({ type: 'brushstart' }), h(), R();
        } let u; var a = j(t, 'brushstart', 'brush', 'brushend'); var o = null; var c = null; var l = $a[0]; var s = [[0, 0], [0, 0]]; return t.x = function (n) { return arguments.length ? (o = n, l = $a[!o << 1 | !c], t) : o; }, t.y = function (n) { return arguments.length ? (c = n, l = $a[!o << 1 | !c], t) : c; }, t.extent = function (n) { let e; let r; let i; let a; let l; return arguments.length ? (u = [[0, 0], [0, 0]], o && (e = n[0], r = n[1], c && (e = e[0], r = r[0]), u[0][0] = e, u[1][0] = r, o.invert && (e = o(e), r = o(r)), e > r && (l = e, e = r, r = l), s[0][0] = 0 | e, s[1][0] = 0 | r), c && (i = n[0], a = n[1], o && (i = i[1], a = a[1]), u[0][1] = i, u[1][1] = a, c.invert && (i = c(i), a = c(a)), i > a && (l = i, i = a, a = l), s[0][1] = 0 | i, s[1][1] = 0 | a), t) : (n = u || s, o && (e = n[0][0], r = n[1][0], u || (e = s[0][0], r = s[1][0], o.invert && (e = o.invert(e), r = o.invert(r)), e > r && (l = e, e = r, r = l))), c && (i = n[0][1], a = n[1][1], u || (i = s[0][1], a = s[1][1], c.invert && (i = c.invert(i), a = c.invert(a)), i > a && (l = i, i = a, a = l))), o && c ? [[e, i], [r, a]] : o ? [e, r] : c && [i, a]); }, t.clear = function () { return u = null, s[0][0] = s[0][1] = s[1][0] = s[1][1] = 0, t; }, t.empty = function () { return o && s[0][0] === s[1][0] || c && s[0][1] === s[1][1]; }, d3.rebind(t, a, 'on');
    }; var Ba = {
        n: 'ns-resize', e: 'ew-resize', s: 'ns-resize', w: 'ew-resize', nw: 'nwse-resize', ne: 'nesw-resize', se: 'nwse-resize', sw: 'nesw-resize',
    }; var $a = [['n', 'e', 's', 'w', 'nw', 'ne', 'se', 'sw'], ['e', 'w'], ['n', 's'], []]; d3.behavior = {}, d3.behavior.drag = function () {
        function t() { this.on('mousedown.drag', n).on('touchstart.drag', n); } function n() {
            function t() { const t = o.parentNode; return s != null ? d3.touches(t).filter(t => t.identifier === s)[0] : d3.mouse(t); } function n() {
                if (!o.parentNode) return i(); const n = t(); const e = n[0] - f[0]; const r = n[1] - f[1]; h |= e | r, f = n, R(), c({
                    type: 'drag', x: n[0] + a[0], y: n[1] + a[1], dx: e, dy: r,
                });
            } function i() { c({ type: 'dragend' }), h && (R(), d3.event.target === l && d.on('click.drag', u, !0)), d.on(s != null ? `touchmove.drag-${s}` : 'mousemove.drag', null).on(s != null ? `touchend.drag-${s}` : 'mouseup.drag', null); } function u() { R(), d.on('click.drag', null); } let a; var o = this; var c = e.of(o, arguments); var l = d3.event.target; var s = d3.event.touches ? d3.event.changedTouches[0].identifier : null; var f = t(); var h = 0; var d = d3.select(window).on(s != null ? `touchmove.drag-${s}` : 'mousemove.drag', n).on(s != null ? `touchend.drag-${s}` : 'mouseup.drag', i, !0); r ? (a = r.apply(o, arguments), a = [a.x - f[0], a.y - f[1]]) : a = [0, 0], s == null && R(), c({ type: 'dragstart' });
        } var e = j(t, 'drag', 'dragstart', 'dragend'); var r = null; return t.origin = function (n) { return arguments.length ? (r = n, t) : r; }, d3.rebind(t, e, 'on');
    }, d3.behavior.zoom = function () {
        function t() {
            this.on('mousedown.zoom', o).on('mousewheel.zoom', c).on('mousemove.zoom', l).on('DOMMouseScroll.zoom', c)
                .on('dblclick.zoom', s)
                .on('touchstart.zoom', f)
                .on('touchmove.zoom', h)
                .on('touchend.zoom', f);
        } function n(t) { return [(t[0] - b[0]) / x, (t[1] - b[1]) / x]; } function e(t) { return [t[0] * x + b[0], t[1] * x + b[1]]; } function r(t) { x = Math.max(_[0], Math.min(_[1], t)); } function i(t, n) { n = e(n), b[0] += t[0] - n[0], b[1] += t[1] - n[1]; } function u() { m && m.domain(p.range().map(t => (t - b[0]) / x).map(p.invert)), y && y.domain(v.range().map(t => (t - b[1]) / x).map(v.invert)); } function a(t) { u(), d3.event.preventDefault(), t({ type: 'zoom', scale: x, translate: b }); } function o() { function t() { l = 1, i(d3.mouse(u), f), a(o); } function e() { l && R(), s.on('mousemove.zoom', null).on('mouseup.zoom', null), l && d3.event.target === c && s.on('click.zoom', r, !0); } function r() { R(), s.on('click.zoom', null); } var u = this; var o = w.of(u, arguments); var c = d3.event.target; var l = 0; var s = d3.select(window).on('mousemove.zoom', t).on('mouseup.zoom', e); var f = n(d3.mouse(u)); window.focus(), R(); } function c() { d || (d = n(d3.mouse(this))), r(Math.pow(2, 0.002 * Ve()) * x), i(d3.mouse(this), d), a(w.of(this, arguments)); } function l() { d = null; } function s() { const t = d3.mouse(this); const e = n(t); const u = Math.log(x) / Math.LN2; r(Math.pow(2, d3.event.shiftKey ? Math.ceil(u) - 1 : Math.floor(u) + 1)), i(t, e), a(w.of(this, arguments)); } function f() { const t = d3.touches(this); const e = Date.now(); if (g = x, d = {}, t.forEach((t) => { d[t.identifier] = n(t); }), R(), t.length === 1) { if (e - M < 500) { const u = t[0]; const o = n(t[0]); r(2 * x), i(u, o), a(w.of(this, arguments)); }M = e; } } function h() { const t = d3.touches(this); let n = t[0]; let e = d[n.identifier]; if (u = t[1]) { var u; const o = d[u.identifier]; n = [(n[0] + u[0]) / 2, (n[1] + u[1]) / 2], e = [(e[0] + o[0]) / 2, (e[1] + o[1]) / 2], r(d3.event.scale * g); }i(n, e), M = null, a(w.of(this, arguments)); } let d; let g; let p; let m; let v; let y; let M; var b = [0, 0]; var x = 1; var _ = Ga; var w = j(t, 'zoom'); return t.translate = function (n) { return arguments.length ? (b = n.map(Number), u(), t) : b; }, t.scale = function (n) { return arguments.length ? (x = +n, u(), t) : x; }, t.scaleExtent = function (n) { return arguments.length ? (_ = n == null ? Ga : n.map(Number), t) : _; }, t.x = function (n) { return arguments.length ? (m = n, p = n.copy(), b = [0, 0], x = 1, t) : m; }, t.y = function (n) { return arguments.length ? (y = n, v = n.copy(), b = [0, 0], x = 1, t) : y; }, d3.rebind(t, w, 'on');
    }; let Ja; var Ga = [0, 1 / 0]; d3.layout = {}, d3.layout.bundle = function () { return function (t) { for (var n = [], e = -1, r = t.length; r > ++e;)n.push(Xe(t[e])); return n; }; }, d3.layout.chord = function () {
        function t() {
            let t; let l; let f; let h; let d; const g = {}; const p = []; const m = d3.range(u); const v = []; for (e = [], r = [], t = 0, h = -1; u > ++h;) { for (l = 0, d = -1; u > ++d;)l += i[h][d]; p.push(l), v.push(d3.range(u)), t += l; } for (a && m.sort((t, n) => a(p[t], p[n])), o && v.forEach((t, n) => {
                t.sort((t, e) => o(i[n][t], i[n][e]));
            }), t = (2 * Ru - s * u) / t, l = 0, h = -1; u > ++h;) {
                for (f = l, d = -1; u > ++d;) {
                    var y = m[h]; const M = v[y][d]; const b = i[y][M]; const x = l; const _ = l += b * t; g[`${y}-${M}`] = {
                        index: y, subindex: M, startAngle: x, endAngle: _, value: b,
                    };
                }r[y] = {
                    index: y, startAngle: f, endAngle: l, value: (l - f) / t,
                }, l += s;
            } for (h = -1; u > ++h;) for (d = h - 1; u > ++d;) { const w = g[`${h}-${d}`]; const S = g[`${d}-${h}`]; (w.value || S.value) && e.push(w.value < S.value ? { source: S, target: w } : { source: w, target: S }); }c && n();
        } function n() { e.sort((t, n) => c((t.source.value + t.target.value) / 2, (n.source.value + n.target.value) / 2)); } let e; let r; let i; let u; let a; let o; let c; const l = {}; var s = 0; return l.matrix = function (t) { return arguments.length ? (u = (i = t) && i.length, e = r = null, l) : i; }, l.padding = function (t) { return arguments.length ? (s = t, e = r = null, l) : s; }, l.sortGroups = function (t) { return arguments.length ? (a = t, e = r = null, l) : a; }, l.sortSubgroups = function (t) { return arguments.length ? (o = t, e = null, l) : o; }, l.sortChords = function (t) { return arguments.length ? (c = t, e && n(), l) : c; }, l.chords = function () { return e || t(), e; }, l.groups = function () { return r || t(), r; }, l;
    }, d3.layout.force = function () {
        function t(t) { return function (n, e, r, i) { if (n.point !== t) { const u = n.cx - t.x; const a = n.cy - t.y; const o = 1 / Math.sqrt(u * u + a * a); if (v > (i - e) * o) { var c = n.charge * o * o; return t.px -= u * c, t.py -= a * c, !0; } if (n.point && isFinite(o)) { var c = n.pointCharge * o * o; t.px -= u * c, t.py -= a * c; } } return !n.charge; }; } function n(t) { t.px = d3.event.x, t.py = d3.event.y, l.resume(); } let e; let r; let i; let u; let o; var l = {}; const s = d3.dispatch('start', 'tick', 'end'); let f = [1, 1]; let h = 0.9; let d = Qe; let g = tr; let p = -30; let m = 0.1; var v = 0.8; let y = []; let M = []; return l.tick = function () { if ((r *= 0.99) < 0.005) return s.end({ type: 'end', alpha: r = 0 }), !0; let n; let e; let a; let c; let l; let d; let g; let v; let b; const x = y.length; const _ = M.length; for (e = 0; _ > e; ++e)a = M[e], c = a.source, l = a.target, v = l.x - c.x, b = l.y - c.y, (d = v * v + b * b) && (d = r * u[e] * ((d = Math.sqrt(d)) - i[e]) / d, v *= d, b *= d, l.x -= v * (g = c.weight / (l.weight + c.weight)), l.y -= b * g, c.x += v * (g = 1 - g), c.y += b * g); if ((g = r * m) && (v = f[0] / 2, b = f[1] / 2, e = -1, g)) for (;x > ++e;)a = y[e], a.x += (v - a.x) * g, a.y += (b - a.y) * g; if (p) for (We(n = d3.geom.quadtree(y), r, o), e = -1; x > ++e;)(a = y[e]).fixed || n.visit(t(a)); for (e = -1; x > ++e;)a = y[e], a.fixed ? (a.x = a.px, a.y = a.py) : (a.x -= (a.px - (a.px = a.x)) * h, a.y -= (a.py - (a.py = a.y)) * h); s.tick({ type: 'tick', alpha: r }); }, l.nodes = function (t) { return arguments.length ? (y = t, l) : y; }, l.links = function (t) { return arguments.length ? (M = t, l) : M; }, l.size = function (t) { return arguments.length ? (f = t, l) : f; }, l.linkDistance = function (t) { return arguments.length ? (d = c(t), l) : d; }, l.distance = l.linkDistance, l.linkStrength = function (t) { return arguments.length ? (g = c(t), l) : g; }, l.friction = function (t) { return arguments.length ? (h = t, l) : h; }, l.charge = function (t) { return arguments.length ? (p = typeof t === 'function' ? t : +t, l) : p; }, l.gravity = function (t) { return arguments.length ? (m = t, l) : m; }, l.theta = function (t) { return arguments.length ? (v = t, l) : v; }, l.alpha = function (t) { return arguments.length ? (r ? r = t > 0 ? t : 0 : t > 0 && (s.start({ type: 'start', alpha: r = t }), d3.timer(l.tick)), l) : r; }, l.start = function () { function t(t, r) { for (var i, u = n(e), a = -1, o = u.length; o > ++a;) if (!isNaN(i = u[a][t])) return i; return Math.random() * r; } function n() { if (!a) { for (a = [], r = 0; s > r; ++r)a[r] = []; for (r = 0; h > r; ++r) { const t = M[r]; a[t.source.index].push(t.target), a[t.target.index].push(t.source); } } return a[e]; } let e; let r; let a; let c; var s = y.length; var h = M.length; const m = f[0]; const v = f[1]; for (e = 0; s > e; ++e)(c = y[e]).index = e, c.weight = 0; for (i = [], u = [], e = 0; h > e; ++e)c = M[e], typeof c.source === 'number' && (c.source = y[c.source]), typeof c.target === 'number' && (c.target = y[c.target]), i[e] = d.call(this, c, e), u[e] = g.call(this, c, e), ++c.source.weight, ++c.target.weight; for (e = 0; s > e; ++e)c = y[e], isNaN(c.x) && (c.x = t('x', m)), isNaN(c.y) && (c.y = t('y', v)), isNaN(c.px) && (c.px = c.x), isNaN(c.py) && (c.py = c.y); if (o = [], typeof p === 'function') for (e = 0; s > e; ++e)o[e] = +p.call(this, y[e], e); else for (e = 0; s > e; ++e)o[e] = p; return l.resume(); }, l.resume = function () { return l.alpha(0.1); }, l.stop = function () { return l.alpha(0); }, l.drag = function () {
            e || (e = d3.behavior.drag().origin(a).on('dragstart', $e).on('drag', n)
                .on('dragend', Je)), this.on('mouseover.force', Ge).on('mouseout.force', Ke).call(e);
        }, d3.rebind(l, s, 'on');
    }, d3.layout.partition = function () { function t(n, e, r, i) { const u = n.children; if (n.x = e, n.y = n.depth * i, n.dx = r, n.dy = i, u && (a = u.length)) { var a; let o; let c; let l = -1; for (r = n.value ? r / n.value : 0; a > ++l;)t(o = u[l], e, c = o.value * r, i), e += c; } } function n(t) { const e = t.children; let r = 0; if (e && (i = e.length)) for (var i, u = -1; i > ++u;)r = Math.max(r, n(e[u])); return 1 + r; } function e(e, u) { const a = r.call(this, e, u); return t(a[0], 0, i[0], i[1] / n(a[0])), a; } var r = d3.layout.hierarchy(); var i = [1, 1]; return e.size = function (t) { return arguments.length ? (i = t, e) : i; }, hr(e, r); }, d3.layout.pie = function () {
        function t(u) {
            const a = u.map((e, r) => +n.call(t, e, r)); let o = +(typeof r === 'function' ? r.apply(this, arguments) : r); const c = ((typeof i === 'function' ? i.apply(this, arguments) : i) - r) / d3.sum(a); const l = d3.range(u.length); e != null && l.sort(e === Ka ? (t, n) => a[n] - a[t] : (t, n) => e(u[t], u[n])); const s = []; return l.forEach((t) => {
                let n; s[t] = {
                    data: u[t], value: n = a[t], startAngle: o, endAngle: o += n * c,
                };
            }), s;
        } var n = Number; var e = Ka; var r = 0; var i = 2 * Ru; return t.value = function (e) { return arguments.length ? (n = e, t) : n; }, t.sort = function (n) { return arguments.length ? (e = n, t) : e; }, t.startAngle = function (n) { return arguments.length ? (r = n, t) : r; }, t.endAngle = function (n) { return arguments.length ? (i = n, t) : i; }, t;
    }; var Ka = {}; d3.layout.stack = function () { function t(a, c) { let l = a.map((e, r) => n.call(t, e, r)); let s = l.map(n => n.map((n, e) => [u.call(t, n, e), o.call(t, n, e)])); const f = e.call(t, s, c); l = d3.permute(l, f), s = d3.permute(s, f); let h; let d; let g; const p = r.call(t, s, c); const m = l.length; const v = l[0].length; for (d = 0; v > d; ++d) for (i.call(t, l[0][d], g = p[d], s[0][d][1]), h = 1; m > h; ++h)i.call(t, l[h][d], g += s[h - 1][d][1], s[h][d][1]); return a; } var n = a; var e = ir; var r = ur; var i = rr; var u = nr; var o = er; return t.values = function (e) { return arguments.length ? (n = e, t) : n; }, t.order = function (n) { return arguments.length ? (e = typeof n === 'function' ? n : Wa.get(n) || ir, t) : e; }, t.offset = function (n) { return arguments.length ? (r = typeof n === 'function' ? n : Qa.get(n) || ur, t) : r; }, t.x = function (n) { return arguments.length ? (u = n, t) : u; }, t.y = function (n) { return arguments.length ? (o = n, t) : o; }, t.out = function (n) { return arguments.length ? (i = n, t) : i; }, t; }; var Wa = d3.map({ 'inside-out': function (t) { let n; let e; const r = t.length; const i = t.map(ar); const u = t.map(or); const a = d3.range(r).sort((t, n) => i[t] - i[n]); let o = 0; let c = 0; const l = []; const s = []; for (n = 0; r > n; ++n)e = a[n], c > o ? (o += u[e], l.push(e)) : (c += u[e], s.push(e)); return s.reverse().concat(l); }, reverse(t) { return d3.range(t.length).reverse(); }, default: ir }); var Qa = d3.map({
        silhouette(t) { let n; let e; let r; const i = t.length; const u = t[0].length; const a = []; let o = 0; const c = []; for (e = 0; u > e; ++e) { for (n = 0, r = 0; i > n; n++)r += t[n][e][1]; r > o && (o = r), a.push(r); } for (e = 0; u > e; ++e)c[e] = (o - a[e]) / 2; return c; }, wiggle(t) { let n; let e; let r; let i; let u; let a; let o; let c; let l; const s = t.length; const f = t[0]; const h = f.length; const d = []; for (d[0] = c = l = 0, e = 1; h > e; ++e) { for (n = 0, i = 0; s > n; ++n)i += t[n][e][1]; for (n = 0, u = 0, o = f[e][0] - f[e - 1][0]; s > n; ++n) { for (r = 0, a = (t[n][e][1] - t[n][e - 1][1]) / (2 * o); n > r; ++r)a += (t[r][e][1] - t[r][e - 1][1]) / o; u += a * t[n][e][1]; }d[e] = c -= i ? u / i * o : 0, l > c && (l = c); } for (e = 0; h > e; ++e)d[e] -= l; return d; }, expand(t) { let n; let e; let r; const i = t.length; const u = t[0].length; const a = 1 / i; const o = []; for (e = 0; u > e; ++e) { for (n = 0, r = 0; i > n; n++)r += t[n][e][1]; if (r) for (n = 0; i > n; n++)t[n][e][1] /= r; else for (n = 0; i > n; n++)t[n][e][1] = a; } for (e = 0; u > e; ++e)o[e] = 0; return o; }, zero: ur,
    }); d3.layout.histogram = function () { function t(t, u) { for (var a, o, c = [], l = t.map(e, this), s = r.call(this, l, u), f = i.call(this, s, l, u), u = -1, h = l.length, d = f.length - 1, g = n ? 1 : 1 / h; d > ++u;)a = c[u] = [], a.dx = f[u + 1] - (a.x = f[u]), a.y = 0; if (d > 0) for (u = -1; h > ++u;)o = l[u], o >= s[0] && s[1] >= o && (a = c[d3.bisect(f, o, 1, d) - 1], a.y += g, a.push(t[u])); return c; } var n = !0; var e = Number; var r = fr; var i = lr; return t.value = function (n) { return arguments.length ? (e = n, t) : e; }, t.range = function (n) { return arguments.length ? (r = c(n), t) : r; }, t.bins = function (n) { return arguments.length ? (i = typeof n === 'number' ? function (t) { return sr(t, n); } : c(n), t) : i; }, t.frequency = function (e) { return arguments.length ? (n = !!e, t) : n; }, t; }, d3.layout.hierarchy = function () { function t(n, a, o) { const c = i.call(e, n, a); if (n.depth = a, o.push(n), c && (l = c.length)) { for (var l, s, f = -1, h = n.children = [], d = 0, g = a + 1; l > ++f;)s = t(c[f], g, o), s.parent = n, h.push(s), d += s.value; r && h.sort(r), u && (n.value = d); } else u && (n.value = +u.call(e, n, a) || 0); return n; } function n(t, r) { const i = t.children; let a = 0; if (i && (o = i.length)) for (var o, c = -1, l = r + 1; o > ++c;)a += n(i[c], l); else u && (a = +u.call(e, t, r) || 0); return u && (t.value = a), a; } function e(n) { const e = []; return t(n, 0, e), e; } var r = pr; var i = dr; var u = gr; return e.sort = function (t) { return arguments.length ? (r = t, e) : r; }, e.children = function (t) { return arguments.length ? (i = t, e) : i; }, e.value = function (t) { return arguments.length ? (u = t, e) : u; }, e.revalue = function (t) { return n(t, 0), t; }, e; }, d3.layout.pack = function () { function t(t, i) { const u = n.call(this, t, i); const a = u[0]; a.x = 0, a.y = 0, Rr(a, (t) => { t.r = Math.sqrt(t.value); }), Rr(a, xr); const o = r[0]; const c = r[1]; let l = Math.max(2 * a.r / o, 2 * a.r / c); if (e > 0) { const s = e * l / 2; Rr(a, (t) => { t.r += s; }), Rr(a, xr), Rr(a, (t) => { t.r -= s; }), l = Math.max(2 * a.r / o, 2 * a.r / c); } return Sr(a, o / 2, c / 2, 1 / l), u; } var n = d3.layout.hierarchy().sort(vr); var e = 0; var r = [1, 1]; return t.size = function (n) { return arguments.length ? (r = n, t) : r; }, t.padding = function (n) { return arguments.length ? (e = +n, t) : e; }, hr(t, n); }, d3.layout.cluster = function () { function t(t, i) { let u; const a = n.call(this, t, i); const o = a[0]; let c = 0; Rr(o, (t) => { const n = t.children; n && n.length ? (t.x = Ar(n), t.y = Er(n)) : (t.x = u ? c += e(t, u) : 0, t.y = 0, u = t); }); const l = Nr(o); const s = Tr(o); const f = l.x - e(l, s) / 2; const h = s.x + e(s, l) / 2; return Rr(o, (t) => { t.x = (t.x - f) / (h - f) * r[0], t.y = (1 - (o.y ? t.y / o.y : 1)) * r[1]; }), a; } var n = d3.layout.hierarchy().sort(null).value(null); var e = qr; var r = [1, 1]; return t.separation = function (n) { return arguments.length ? (e = n, t) : e; }, t.size = function (n) { return arguments.length ? (r = n, t) : r; }, hr(t, n); }, d3.layout.tree = function () {
        function t(t, i) {
            function u(t, n) { const r = t.children; const i = t._tree; if (r && (a = r.length)) { for (var a, c, l, s = r[0], f = s, h = -1; a > ++h;)l = r[h], u(l, c), f = o(l, c, f), c = l; Pr(t); const d = 0.5 * (s._tree.prelim + l._tree.prelim); n ? (i.prelim = n._tree.prelim + e(t, n), i.mod = i.prelim - d) : i.prelim = d; } else n && (i.prelim = n._tree.prelim + e(t, n)); } function a(t, n) { t.x = t._tree.prelim + n; const e = t.children; if (e && (r = e.length)) { var r; let i = -1; for (n += t._tree.mod; r > ++i;)a(e[i], n); } } function o(t, n, r) { if (n) { for (var i, u = t, a = t, o = n, c = t.parent.children[0], l = u._tree.mod, s = a._tree.mod, f = o._tree.mod, h = c._tree.mod; o = zr(o), u = Cr(u), o && u;)c = Cr(c), a = zr(a), a._tree.ancestor = t, i = o._tree.prelim + f - u._tree.prelim - l + e(o, u), i > 0 && (jr(Or(o, t, r), t, i), l += i, s += i), f += o._tree.mod, l += u._tree.mod, h += c._tree.mod, s += a._tree.mod; o && !zr(a) && (a._tree.thread = o, a._tree.mod += f - s), u && !Cr(c) && (c._tree.thread = u, c._tree.mod += l - h, r = t); } return r; } const c = n.call(this, t, i); const l = c[0]; Rr(l, (t, n) => {
                t._tree = {
                    ancestor: t, prelim: 0, mod: 0, change: 0, shift: 0, number: n ? n._tree.number + 1 : 0,
                };
            }), u(l), a(l, -l._tree.prelim); const s = Dr(l, Fr); const f = Dr(l, Lr); const h = Dr(l, Hr); const d = s.x - e(s, f) / 2; const g = f.x + e(f, s) / 2; const p = h.depth || 1; return Rr(l, (t) => { t.x = (t.x - d) / (g - d) * r[0], t.y = t.depth / p * r[1], delete t._tree; }), c;
        } var n = d3.layout.hierarchy().sort(null).value(null); var e = qr; var r = [1, 1]; return t.separation = function (n) { return arguments.length ? (e = n, t) : e; }, t.size = function (n) { return arguments.length ? (r = n, t) : r; }, hr(t, n);
    }, d3.layout.treemap = function () { function t(t, n) { for (var e, r, i = -1, u = t.length; u > ++i;)r = (e = t[i]).value * (n < 0 ? 0 : n), e.area = isNaN(r) || r <= 0 ? 0 : r; } function n(e) { const u = e.children; if (u && u.length) { let a; let o; let c; const l = f(e); const s = []; const h = u.slice(); let g = 1 / 0; let p = d === 'slice' ? l.dx : d === 'dice' ? l.dy : d === 'slice-dice' ? 1 & e.depth ? l.dy : l.dx : Math.min(l.dx, l.dy); for (t(h, l.dx * l.dy / e.value), s.area = 0; (c = h.length) > 0;)s.push(a = h[c - 1]), s.area += a.area, d !== 'squarify' || g >= (o = r(s, p)) ? (h.pop(), g = o) : (s.area -= s.pop().area, i(s, p, l, !1), p = Math.min(l.dx, l.dy), s.length = s.area = 0, g = 1 / 0); s.length && (i(s, p, l, !0), s.length = s.area = 0), u.forEach(n); } } function e(n) { const r = n.children; if (r && r.length) { let u; const a = f(n); const o = r.slice(); const c = []; for (t(o, a.dx * a.dy / n.value), c.area = 0; u = o.pop();)c.push(u), c.area += u.area, u.z != null && (i(c, u.z ? a.dx : a.dy, a, !o.length), c.length = c.area = 0); r.forEach(e); } } function r(t, n) { for (var e, r = t.area, i = 0, u = 1 / 0, a = -1, o = t.length; o > ++a;)(e = t[a].area) && (u > e && (u = e), e > i && (i = e)); return r *= r, n *= n, r ? Math.max(n * i * g / r, r / (n * u * g)) : 1 / 0; } function i(t, n, e, r) { let i; let u = -1; const a = t.length; let o = e.x; let l = e.y; let s = n ? c(t.area / n) : 0; if (n == e.dx) { for ((r || s > e.dy) && (s = e.dy); a > ++u;)i = t[u], i.x = o, i.y = l, i.dy = s, o += i.dx = Math.min(e.x + e.dx - o, s ? c(i.area / s) : 0); i.z = !0, i.dx += e.x + e.dx - o, e.y += s, e.dy -= s; } else { for ((r || s > e.dx) && (s = e.dx); a > ++u;)i = t[u], i.x = o, i.y = l, i.dx = s, l += i.dy = Math.min(e.y + e.dy - l, s ? c(i.area / s) : 0); i.z = !1, i.dy += e.y + e.dy - l, e.x += s, e.dx -= s; } } function u(r) { const i = a || o(r); const u = i[0]; return u.x = 0, u.y = 0, u.dx = l[0], u.dy = l[1], a && o.revalue(u), t([u], u.dx * u.dy / u.value), (a ? e : n)(u), h && (a = i), i; } let a; var o = d3.layout.hierarchy(); var c = Math.round; var l = [1, 1]; let s = null; var f = Yr; var h = !1; var d = 'squarify'; var g = 0.5 * (1 + Math.sqrt(5)); return u.size = function (t) { return arguments.length ? (l = t, u) : l; }, u.padding = function (t) { function n(n) { const e = t.call(u, n, n.depth); return e == null ? Yr(n) : Ur(n, typeof e === 'number' ? [e, e, e, e] : e); } function e(n) { return Ur(n, t); } if (!arguments.length) return s; let r; return f = (s = t) == null ? Yr : (r = typeof t) == 'function' ? n : r === 'number' ? (t = [t, t, t, t], e) : e, u; }, u.round = function (t) { return arguments.length ? (c = t ? Math.round : Number, u) : c != Number; }, u.sticky = function (t) { return arguments.length ? (h = t, a = null, u) : h; }, u.ratio = function (t) { return arguments.length ? (g = t, u) : g; }, u.mode = function (t) { return arguments.length ? (d = `${t}`, u) : d; }, hr(u, o); }, d3.csv = Ir(',', 'text/csv'), d3.tsv = Ir('	', 'text/tab-separated-values'), d3.geo = {}, d3.geo.stream = function (t, n) { to.hasOwnProperty(t.type) ? to[t.type](t, n) : Vr(t, n); }; var to = { Feature(t, n) { Vr(t.geometry, n); }, FeatureCollection(t, n) { for (let e = t.features, r = -1, i = e.length; i > ++r;)Vr(e[r].geometry, n); } }; var no = {
        Sphere(t, n) { n.sphere(); }, Point(t, n) { const e = t.coordinates; n.point(e[0], e[1]); }, MultiPoint(t, n) { for (var e, r = t.coordinates, i = -1, u = r.length; u > ++i;)e = r[i], n.point(e[0], e[1]); }, LineString(t, n) { Xr(t.coordinates, n, 0); }, MultiLineString(t, n) { for (let e = t.coordinates, r = -1, i = e.length; i > ++r;)Xr(e[r], n, 0); }, Polygon(t, n) { Zr(t.coordinates, n); }, MultiPolygon(t, n) { for (let e = t.coordinates, r = -1, i = e.length; i > ++r;)Zr(e[r], n); }, GeometryCollection(t, n) { for (let e = t.geometries, r = -1, i = e.length; i > ++r;)Vr(e[r], n); },
    }; d3.geo.albersUsa = function () { function t(t) { return n(t)(t); } function n(t) { const n = t[0]; const a = t[1]; return a > 50 ? r : n < -140 ? i : a < 21 ? u : e; } var e = d3.geo.albers(); var r = d3.geo.albers().rotate([160, 0]).center([0, 60]).parallels([55, 65]); var i = d3.geo.albers().rotate([160, 0]).center([0, 20]).parallels([8, 18]); var u = d3.geo.albers().rotate([60, 0]).center([0, 10]).parallels([8, 18]); return t.scale = function (n) { return arguments.length ? (e.scale(n), r.scale(0.6 * n), i.scale(n), u.scale(1.5 * n), t.translate(e.translate())) : e.scale(); }, t.translate = function (n) { if (!arguments.length) return e.translate(); const a = e.scale(); const o = n[0]; const c = n[1]; return e.translate(n), r.translate([o - 0.4 * a, c + 0.17 * a]), i.translate([o - 0.19 * a, c + 0.2 * a]), u.translate([o + 0.58 * a, c + 0.43 * a]), t; }, t.scale(e.scale()); }, (d3.geo.albers = function () { let t = 29.5 * ju; let n = 45.5 * ju; const e = Pi(ei); const r = e(t, n); return r.parallels = function (r) { return arguments.length ? e(t = r[0] * ju, n = r[1] * ju) : [t * Ou, n * Ou]; }, r.rotate([98, 0]).center([0, 38]).scale(1e3); }).raw = ei; const eo = Vi(t => Math.sqrt(2 / (1 + t)), t => 2 * Math.asin(t / 2)); (d3.geo.azimuthalEqualArea = function () { return Ri(eo); }).raw = eo; const ro = Vi((t) => { const n = Math.acos(t); return n && n / Math.sin(n); }, a); (d3.geo.azimuthalEquidistant = function () { return Ri(ro); }).raw = ro, d3.geo.bounds = ri(a), d3.geo.centroid = function (t) { io = uo = ao = oo = co = 0, d3.geo.stream(t, lo); let n; return uo && Math.abs(n = Math.sqrt(ao * ao + oo * oo + co * co)) > Pu ? [Math.atan2(oo, ao) * Ou, Math.asin(Math.max(-1, Math.min(1, co / n))) * Ou] : void 0; }; let io; let uo; let ao; let oo; let co; var lo = {
        sphere() { io < 2 && (io = 2, uo = ao = oo = co = 0); }, point: ii, lineStart: ai, lineEnd: oi, polygonStart() { io < 2 && (io = 2, uo = ao = oo = co = 0), lo.lineStart = ui; }, polygonEnd() { lo.lineStart = ai; },
    }; d3.geo.circle = function () { function t() { const t = typeof r === 'function' ? r.apply(this, arguments) : r; const n = Oi(-t[0] * ju, -t[1] * ju, 0).invert; const i = []; return e(null, null, 1, { point(t, e) { i.push(t = n(t, e)), t[0] *= Ou, t[1] *= Ou; } }), { type: 'Polygon', coordinates: [i] }; } let n; let e; var r = [0, 0]; let i = 6; return t.origin = function (n) { return arguments.length ? (r = n, t) : r; }, t.angle = function (r) { return arguments.length ? (e = ci((n = +r) * ju, i * ju), t) : n; }, t.precision = function (r) { return arguments.length ? (e = ci(n * ju, (i = +r) * ju), t) : i; }, t.angle(90); }; var so = si(o, vi, Mi); (d3.geo.equirectangular = function () { return Ri(_i).scale(250 / Ru); }).raw = _i.invert = _i; const fo = Vi(t => 1 / t, Math.atan); (d3.geo.gnomonic = function () { return Ri(fo); }).raw = fo, d3.geo.graticule = function () { function t() { return { type: 'MultiLineString', coordinates: n() }; } function n() { return d3.range(Math.ceil(r / c) * c, e, c).map(a).concat(d3.range(Math.ceil(u / l) * l, i, l).map(o)); } let e; let r; let i; let u; let a; let o; var c = 22.5; var l = c; let s = 2.5; return t.lines = function () { return n().map(t => ({ type: 'LineString', coordinates: t })); }, t.outline = function () { return { type: 'Polygon', coordinates: [a(r).concat(o(i).slice(1), a(e).reverse().slice(1), o(u).reverse().slice(1))] }; }, t.extent = function (n) { return arguments.length ? (r = +n[0][0], e = +n[1][0], u = +n[0][1], i = +n[1][1], r > e && (n = r, r = e, e = n), u > i && (n = u, u = i, i = n), t.precision(s)) : [[r, u], [e, i]]; }, t.step = function (n) { return arguments.length ? (c = +n[0], l = +n[1], t) : [c, l]; }, t.precision = function (n) { return arguments.length ? (s = +n, a = wi(u, i, s), o = Si(r, e, s), t) : s; }, t.extent([[-180 + Pu, -90 + Pu], [180 - Pu, 90 - Pu]]); }, d3.geo.interpolate = function (t, n) { return ki(t[0] * ju, t[1] * ju, n[0] * ju, n[1] * ju); }, d3.geo.greatArc = function () { function e() { for (var t = r || a.apply(this, arguments), n = i || o.apply(this, arguments), e = u || d3.geo.interpolate(t, n), i = 0, l = c / e.distance, s = [t]; (i += l) < 1;)s.push(e(i)); return s.push(n), { type: 'LineString', coordinates: s }; } let r; let i; let u; var a = n; var o = t; var c = 6 * ju; return e.distance = function () { return (u || d3.geo.interpolate(r || a.apply(this, arguments), i || o.apply(this, arguments))).distance; }, e.source = function (t) { return arguments.length ? (a = t, r = typeof t === 'function' ? null : t, u = r && i ? d3.geo.interpolate(r, i) : null, e) : a; }, e.target = function (t) { return arguments.length ? (o = t, i = typeof t === 'function' ? null : t, u = r && i ? d3.geo.interpolate(r, i) : null, e) : o; }, e.precision = function (t) { return arguments.length ? (c = t * ju, e) : c / ju; }, e; }, Ei.invert = function (t, n) { return [2 * Ru * t, 2 * Math.atan(Math.exp(2 * Ru * n)) - Ru / 2]; }, (d3.geo.mercator = function () { return Ri(Ei).scale(500); }).raw = Ei; const ho = Vi(() => 1, Math.asin); (d3.geo.orthographic = function () { return Ri(ho); }).raw = ho, d3.geo.path = function () { function t(t) { return t && d3.geo.stream(t, r(i.pointRadius(typeof u === 'function' ? +u.apply(this, arguments) : u))), i.result(); } let n; let e; let r; let i; var u = 4.5; return t.area = function (t) { return go = 0, d3.geo.stream(t, r(mo)), go; }, t.centroid = function (t) { return io = ao = oo = co = 0, d3.geo.stream(t, r(vo)), co ? [ao / co, oo / co] : void 0; }, t.bounds = function (t) { return ri(r)(t); }, t.projection = function (e) { return arguments.length ? (r = (n = e) ? e.stream || Ni(e) : a, t) : n; }, t.context = function (n) { return arguments.length ? (i = (e = n) == null ? new Ti() : new qi(n), t) : e; }, t.pointRadius = function (n) { return arguments.length ? (u = typeof n === 'function' ? n : +n, t) : u; }, t.projection(d3.geo.albersUsa()).context(null); }; let go; let po; var mo = {
        point: Pn, lineStart: Pn, lineEnd: Pn, polygonStart() { po = 0, mo.lineStart = Ci; }, polygonEnd() { mo.lineStart = mo.lineEnd = mo.point = Pn, go += Math.abs(po / 2); },
    }; var vo = {
        point: zi, lineStart: Di, lineEnd: Li, polygonStart() { vo.lineStart = Fi; }, polygonEnd() { vo.point = zi, vo.lineStart = Di, vo.lineEnd = Li; },
    }; d3.geo.area = function (t) { return yo = 0, d3.geo.stream(t, bo), yo; }; let yo; let Mo; var bo = {
        sphere() { yo += 4 * Ru; }, point: Pn, lineStart: Pn, lineEnd: Pn, polygonStart() { Mo = 0, bo.lineStart = Hi; }, polygonEnd() { yo += Mo < 0 ? 4 * Ru + Mo : Mo, bo.lineStart = bo.lineEnd = bo.point = Pn; },
    }; d3.geo.projection = Ri, d3.geo.projectionMutator = Pi; const xo = Vi(t => 1 / (1 + t), t => 2 * Math.atan(t)); (d3.geo.stereographic = function () { return Ri(xo); }).raw = xo, d3.geom = {}, d3.geom.hull = function (t) { if (t.length < 3) return []; let n; let e; let r; let i; let u; let a; let o; let c; let l; let s; const f = t.length; const h = f - 1; const d = []; const g = []; let p = 0; for (n = 1; f > n; ++n)t[n][1] < t[p][1] ? p = n : t[n][1] == t[p][1] && (p = t[n][0] < t[p][0] ? n : p); for (n = 0; f > n; ++n)n !== p && (i = t[n][1] - t[p][1], r = t[n][0] - t[p][0], d.push({ angle: Math.atan2(i, r), index: n })); for (d.sort((t, n) => t.angle - n.angle), l = d[0].angle, c = d[0].index, o = 0, n = 1; h > n; ++n)e = d[n].index, l == d[n].angle ? (r = t[c][0] - t[p][0], i = t[c][1] - t[p][1], u = t[e][0] - t[p][0], a = t[e][1] - t[p][1], r * r + i * i >= u * u + a * a ? d[n].index = -1 : (d[o].index = -1, l = d[n].angle, o = n, c = e)) : (l = d[n].angle, o = n, c = e); for (g.push(p), n = 0, e = 0; n < 2; ++e)d[e].index !== -1 && (g.push(d[e].index), n++); for (s = g.length; h > e; ++e) if (d[e].index !== -1) { for (;!Xi(g[s - 2], g[s - 1], d[e].index, t);)--s; g[s++] = d[e].index; } const m = []; for (n = 0; s > n; ++n)m.push(t[g[n]]); return m; }, d3.geom.polygon = function (t) { return t.area = function () { for (var n = 0, e = t.length, r = t[e - 1][1] * t[0][0] - t[e - 1][0] * t[0][1]; e > ++n;)r += t[n - 1][1] * t[n][0] - t[n - 1][0] * t[n][1]; return 0.5 * r; }, t.centroid = function (n) { let e; let r; let i = -1; const u = t.length; let a = 0; let o = 0; let c = t[u - 1]; for (arguments.length || (n = -1 / (6 * t.area())); u > ++i;)e = c, c = t[i], r = e[0] * c[1] - c[0] * e[1], a += (e[0] + c[0]) * r, o += (e[1] + c[1]) * r; return [a * n, o * n]; }, t.clip = function (n) { for (var e, r, i, u, a, o, c = -1, l = t.length, s = t[l - 1]; l > ++c;) { for (e = n.slice(), n.length = 0, u = t[c], a = e[(i = e.length) - 1], r = -1; i > ++r;)o = e[r], Zi(o, s, u) ? (Zi(a, s, u) || n.push(Bi(a, o, s, u)), n.push(o)) : Zi(a, s, u) && n.push(Bi(a, o, s, u)), a = o; s = u; } return n; }, t; }, d3.geom.voronoi = function (t) { let n = t.map(() => []); const e = 1e6; return $i(t, (t) => { let r; let i; let u; let a; let o; let c; t.a === 1 && t.b >= 0 ? (r = t.ep.r, i = t.ep.l) : (r = t.ep.l, i = t.ep.r), t.a === 1 ? (o = r ? r.y : -e, u = t.c - t.b * o, c = i ? i.y : e, a = t.c - t.b * c) : (u = r ? r.x : -e, o = t.c - t.a * u, a = i ? i.x : e, c = t.c - t.a * a); const l = [u, o]; const s = [a, c]; n[t.region.l.index].push(l, s), n[t.region.r.index].push(l, s); }), n = n.map((n, e) => { const r = t[e][0]; const i = t[e][1]; const u = n.map(t => Math.atan2(t[0] - r, t[1] - i)); return d3.range(n.length).sort((t, n) => u[t] - u[n]).filter((t, n, e) => !n || u[t] - u[e[n - 1]] > Pu).map(t => n[t]); }), n.forEach((n, r) => { const i = n.length; if (!i) return n.push([-e, -e], [-e, e], [e, e], [e, -e]); if (!(i > 2)) { const u = t[r]; const a = n[0]; const o = n[1]; const c = u[0]; const l = u[1]; const s = a[0]; const f = a[1]; const h = o[0]; const d = o[1]; const g = Math.abs(h - s); const p = d - f; if (Pu > Math.abs(p)) { var m = f > l ? -e : e; n.push([-e, m], [e, m]); } else if (Pu > g) { const v = s > c ? -e : e; n.push([v, -e], [v, e]); } else { var m = (s - c) * (d - f) > (h - s) * (f - l) ? e : -e; const y = Math.abs(p) - g; Pu > Math.abs(y) ? n.push([p < 0 ? m : -m, m]) : (y > 0 && (m *= -1), n.push([-e, m], [e, m])); } } }), n; }; var _o = { l: 'r', r: 'l' }; d3.geom.delaunay = function (t) { const n = t.map(() => []); const e = []; return $i(t, (e) => { n[e.region.l.index].push(t[e.region.r.index]); }), n.forEach((n, r) => { const i = t[r]; const u = i[0]; const a = i[1]; n.forEach((t) => { t.angle = Math.atan2(t[0] - u, t[1] - a); }), n.sort((t, n) => t.angle - n.angle); for (let o = 0, c = n.length - 1; c > o; o++)e.push([i, n[o], n[o + 1]]); }), e; }, d3.geom.quadtree = function (t, n, e, r, i) { function u(t, n, e, r, i, u) { if (!isNaN(n.x) && !isNaN(n.y)) if (t.leaf) { const o = t.point; o ? Math.abs(o.x - n.x) + Math.abs(o.y - n.y) < 0.01 ? a(t, n, e, r, i, u) : (t.point = null, a(t, o, e, r, i, u), a(t, n, e, r, i, u)) : t.point = n; } else a(t, n, e, r, i, u); } function a(t, n, e, r, i, a) { const o = 0.5 * (e + i); const c = 0.5 * (r + a); const l = n.x >= o; const s = n.y >= c; const f = (s << 1) + l; t.leaf = !1, t = t.nodes[f] || (t.nodes[f] = Ji()), l ? e = o : i = o, s ? r = c : a = c, u(t, n, e, r, i, a); } let o; let c = -1; const l = t.length; if (arguments.length < 5) if (arguments.length === 3)i = e, r = n, e = n = 0; else for (n = e = 1 / 0, r = i = -1 / 0; l > ++c;)o = t[c], n > o.x && (n = o.x), e > o.y && (e = o.y), o.x > r && (r = o.x), o.y > i && (i = o.y); const s = r - n; const f = i - e; s > f ? i = e + s : r = n + f; const h = Ji(); return h.add = function (t) { u(h, t, n, e, r, i); }, h.visit = function (t) { Gi(t, h, n, e, r, i); }, t.forEach(h.add), h; }, d3.time = {}; var wo = Date; const So = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday']; Ki.prototype = {
        getDate() { return this._.getUTCDate(); }, getDay() { return this._.getUTCDay(); }, getFullYear() { return this._.getUTCFullYear(); }, getHours() { return this._.getUTCHours(); }, getMilliseconds() { return this._.getUTCMilliseconds(); }, getMinutes() { return this._.getUTCMinutes(); }, getMonth() { return this._.getUTCMonth(); }, getSeconds() { return this._.getUTCSeconds(); }, getTime() { return this._.getTime(); }, getTimezoneOffset() { return 0; }, valueOf() { return this._.valueOf(); }, setDate() { ko.setUTCDate.apply(this._, arguments); }, setDay() { ko.setUTCDay.apply(this._, arguments); }, setFullYear() { ko.setUTCFullYear.apply(this._, arguments); }, setHours() { ko.setUTCHours.apply(this._, arguments); }, setMilliseconds() { ko.setUTCMilliseconds.apply(this._, arguments); }, setMinutes() { ko.setUTCMinutes.apply(this._, arguments); }, setMonth() { ko.setUTCMonth.apply(this._, arguments); }, setSeconds() { ko.setUTCSeconds.apply(this._, arguments); }, setTime() { ko.setTime.apply(this._, arguments); },
    }; var ko = Date.prototype; const Eo = '%a %b %e %X %Y'; const Ao = '%m/%d/%Y'; const No = '%H:%M:%S'; const To = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday']; const qo = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat']; const Co = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']; const zo = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']; d3.time.format = function (t) {
        function n(n) { for (var r, i, u, a = [], o = -1, c = 0; e > ++o;)t.charCodeAt(o) === 37 && (a.push(t.substring(c, o)), (i = jo[r = t.charAt(++o)]) != null && (r = t.charAt(++o)), (u = Oo[r]) && (r = u(n, i == null ? r === 'e' ? ' ' : '0' : i)), a.push(r), c = o + 1); return a.push(t.substring(c, o)), a.join(''); } var e = t.length; return n.parse = function (n) {
            const e = {
                y: 1900, m: 0, d: 1, H: 0, M: 0, S: 0, L: 0,
            }; const r = Wi(e, t, n, 0); if (r != n.length) return null; 'p' in e && (e.H = e.H % 12 + 12 * e.p); const i = new wo(); return i.setFullYear(e.y, e.m, e.d), i.setHours(e.H, e.M, e.S, e.L), i;
        }, n.toString = function () { return t; }, n;
    }; var Do = Qi(To); var Lo = Qi(qo); var Fo = Qi(Co); var Ho = tu(Co); var Ro = Qi(zo); var Po = tu(zo); var jo = { '-': '', _: ' ', 0: '0' }; var Oo = {
        a(t) { return qo[t.getDay()]; }, A(t) { return To[t.getDay()]; }, b(t) { return zo[t.getMonth()]; }, B(t) { return Co[t.getMonth()]; }, c: d3.time.format(Eo), d(t, n) { return nu(t.getDate(), n, 2); }, e(t, n) { return nu(t.getDate(), n, 2); }, H(t, n) { return nu(t.getHours(), n, 2); }, I(t, n) { return nu(t.getHours() % 12 || 12, n, 2); }, j(t, n) { return nu(1 + d3.time.dayOfYear(t), n, 3); }, L(t, n) { return nu(t.getMilliseconds(), n, 3); }, m(t, n) { return nu(t.getMonth() + 1, n, 2); }, M(t, n) { return nu(t.getMinutes(), n, 2); }, p(t) { return t.getHours() >= 12 ? 'PM' : 'AM'; }, S(t, n) { return nu(t.getSeconds(), n, 2); }, U(t, n) { return nu(d3.time.sundayOfYear(t), n, 2); }, w(t) { return t.getDay(); }, W(t, n) { return nu(d3.time.mondayOfYear(t), n, 2); }, x: d3.time.format(Ao), X: d3.time.format(No), y(t, n) { return nu(t.getFullYear() % 100, n, 2); }, Y(t, n) { return nu(t.getFullYear() % 1e4, n, 4); }, Z: Mu, '%': function () { return '%'; },
    }; var Yo = {
        a: eu, A: ru, b: iu, B: uu, c: au, d: du, e: du, H: gu, I: gu, L: vu, m: hu, M: pu, p: yu, S: mu, x: ou, X: cu, y: su, Y: lu,
    }; var Uo = /^\s*\d+/; var Io = d3.map({ am: 0, pm: 1 }); d3.time.format.utc = function (t) { function n(t) { try { wo = Ki; const n = new wo(); return n._ = t, e(n); } finally { wo = Date; } } var e = d3.time.format(t); return n.parse = function (t) { try { wo = Ki; const n = e.parse(t); return n && n._; } finally { wo = Date; } }, n.toString = e.toString, n; }; const Vo = d3.time.format.utc('%Y-%m-%dT%H:%M:%S.%LZ'); d3.time.format.iso = Date.prototype.toISOString ? bu : Vo, bu.parse = function (t) { const n = new Date(t); return isNaN(n) ? null : n; }, bu.toString = Vo.toString, d3.time.second = xu(t => new wo(1e3 * Math.floor(t / 1e3)), (t, n) => { t.setTime(t.getTime() + 1e3 * Math.floor(n)); }, t => t.getSeconds()), d3.time.seconds = d3.time.second.range, d3.time.seconds.utc = d3.time.second.utc.range, d3.time.minute = xu(t => new wo(6e4 * Math.floor(t / 6e4)), (t, n) => { t.setTime(t.getTime() + 6e4 * Math.floor(n)); }, t => t.getMinutes()), d3.time.minutes = d3.time.minute.range, d3.time.minutes.utc = d3.time.minute.utc.range, d3.time.hour = xu((t) => { const n = t.getTimezoneOffset() / 60; return new wo(36e5 * (Math.floor(t / 36e5 - n) + n)); }, (t, n) => { t.setTime(t.getTime() + 36e5 * Math.floor(n)); }, t => t.getHours()), d3.time.hours = d3.time.hour.range, d3.time.hours.utc = d3.time.hour.utc.range, d3.time.day = xu((t) => { const n = new wo(1970, 0); return n.setFullYear(t.getFullYear(), t.getMonth(), t.getDate()), n; }, (t, n) => { t.setDate(t.getDate() + n); }, t => t.getDate() - 1), d3.time.days = d3.time.day.range, d3.time.days.utc = d3.time.day.utc.range, d3.time.dayOfYear = function (t) { const n = d3.time.year(t); return Math.floor((t - n - 6e4 * (t.getTimezoneOffset() - n.getTimezoneOffset())) / 864e5); }, So.forEach((t, n) => { t = t.toLowerCase(), n = 7 - n; const e = d3.time[t] = xu(t => (t = d3.time.day(t)).setDate(t.getDate() - (t.getDay() + n) % 7), t, (t, n) => { t.setDate(t.getDate() + 7 * Math.floor(n)); }, (t) => { const e = d3.time.year(t).getDay(); return Math.floor((d3.time.dayOfYear(t) + (e + n) % 7) / 7) - (e !== n); }); d3.time[`${t}s`] = e.range, d3.time[`${t}s`].utc = e.utc.range, d3.time[`${t}OfYear`] = function (t) { const e = d3.time.year(t).getDay(); return Math.floor((d3.time.dayOfYear(t) + (e + n) % 7) / 7); }; }), d3.time.week = d3.time.sunday, d3.time.weeks = d3.time.sunday.range, d3.time.weeks.utc = d3.time.sunday.utc.range, d3.time.weekOfYear = d3.time.sundayOfYear, d3.time.month = xu(t => t = d3.time.day(t), t.setDate(1), t, (t, n) => { t.setMonth(t.getMonth() + n); }, t => t.getMonth()), d3.time.months = d3.time.month.range, d3.time.months.utc = d3.time.month.utc.range, d3.time.year = xu(t => t = d3.time.day(t), t.setMonth(0, 1), t, (t, n) => { t.setFullYear(t.getFullYear() + n); }, t => t.getFullYear()), d3.time.years = d3.time.year.range, d3.time.years.utc = d3.time.year.utc.range; var Xo = [1e3, 5e3, 15e3, 3e4, 6e4, 3e5, 9e5, 18e5, 36e5, 108e5, 216e5, 432e5, 864e5, 1728e5, 6048e5, 2592e6, 7776e6, 31536e6]; const Zo = [[d3.time.second, 1], [d3.time.second, 5], [d3.time.second, 15], [d3.time.second, 30], [d3.time.minute, 1], [d3.time.minute, 5], [d3.time.minute, 15], [d3.time.minute, 30], [d3.time.hour, 1], [d3.time.hour, 3], [d3.time.hour, 6], [d3.time.hour, 12], [d3.time.day, 1], [d3.time.day, 2], [d3.time.week, 1], [d3.time.month, 1], [d3.time.month, 3], [d3.time.year, 1]]; const Bo = [[d3.time.format('%Y'), o], [d3.time.format('%B'), function (t) { return t.getMonth(); }], [d3.time.format('%b %d'), function (t) { return t.getDate() != 1; }], [d3.time.format('%a %d'), function (t) { return t.getDay() && t.getDate() != 1; }], [d3.time.format('%I %p'), function (t) { return t.getHours(); }], [d3.time.format('%I:%M'), function (t) { return t.getMinutes(); }], [d3.time.format(':%S'), function (t) { return t.getSeconds(); }], [d3.time.format('.%L'), function (t) { return t.getMilliseconds(); }]]; const $o = d3.scale.linear(); const Jo = Eu(Bo); Zo.year = function (t, n) { return $o.domain(t.map(Nu)).ticks(n).map(Au); }, d3.time.scale = function () { return wu(d3.scale.linear(), Zo, Jo); }; const Go = Zo.map(t => [t[0].utc, t[1]]); const Ko = [[d3.time.format.utc('%Y'), o], [d3.time.format.utc('%B'), function (t) { return t.getUTCMonth(); }], [d3.time.format.utc('%b %d'), function (t) { return t.getUTCDate() != 1; }], [d3.time.format.utc('%a %d'), function (t) { return t.getUTCDay() && t.getUTCDate() != 1; }], [d3.time.format.utc('%I %p'), function (t) { return t.getUTCHours(); }], [d3.time.format.utc('%I:%M'), function (t) { return t.getUTCMinutes(); }], [d3.time.format.utc(':%S'), function (t) { return t.getUTCSeconds(); }], [d3.time.format.utc('.%L'), function (t) { return t.getUTCMilliseconds(); }]]; const Wo = Eu(Ko); Go.year = function (t, n) { return $o.domain(t.map(qu)).ticks(n).map(Tu); }, d3.time.scale.utc = function () { return wu(d3.scale.linear(), Go, Wo); };
}());
// i18next, v1.8.1
// Copyright (c)2015 Jan Mühlemann (jamuhl).
// Distributed under MIT license
